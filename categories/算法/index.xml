<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 爱像水墨青花</title>
    <link>https://www.lflxp.cn/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 爱像水墨青花</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>lflxp.cn 版权所有 ICP证：&lt;a href=&#39;http://www.beian.miit.gov.cn&#39; target=&#39;_blank&#39;&gt;渝ICP备17011066号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 19 Jan 2020 16:39:25 +0800</lastBuildDate>
    
	<atom:link href="https://www.lflxp.cn/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>leetcode 206 反转一个SingleListNode</title>
      <link>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/singlelistnode/</link>
      <pubDate>Sun, 19 Jan 2020 16:39:25 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/singlelistnode/</guid>
      <description>https://github.com/lflxp/accumulation/tree/master/algorithm/reverselinkedlist 题目描述 反转一个SingListNode 示例 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 解决方案 迭代方案 递归方案 测试算法 进阶 你可以迭代或递归地反转链表。你能否用两</description>
    </item>
    
    <item>
      <title>工厂方法模式</title>
      <link>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 18 Jan 2020 23:01:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%9E%8B/</guid>
      <description>工厂方法模式使用子类的方式延迟生成对象到子类中实现。 Go中不存在继承 所以使用匿名组合来实现 模式动机 现在对该系统进行修改，不再设计一个按钮工厂</description>
    </item>
    
    <item>
      <title>简单工厂模式</title>
      <link>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 18 Jan 2020 23:01:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/%E7%AE%97%E6%B3%95/%E5%88%9B%E5%BB%BA%E5%9E%8B/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>go 语言没有构造函数一说，所以一般会定义NewXXX函数来初始化相关类。 NewXXX 函数返回接口时就是简单工厂模式，也就是说Golang的一般推荐做法就</description>
    </item>
    
  </channel>
</rss>