<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 爱像水墨青花</title>
    <link>https://www.lflxp.cn/categories/golang/</link>
    <description>Recent content in golang on 爱像水墨青花</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>lflxp.cn 版权所有 ICP证：&lt;a href=&#39;http://www.beian.miit.gov.cn&#39; target=&#39;_blank&#39;&gt;渝ICP备17011066号-1&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 08 Mar 2020 00:11:22 +0800</lastBuildDate>
    
	<atom:link href="https://www.lflxp.cn/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golang gin&#43;websocket&#43;xterm.js基础教学实战三</title>
      <link>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%B8%89/</link>
      <pubDate>Sun, 08 Mar 2020 00:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%B8%89/</guid>
      <description>学习和了解gotty的实现原理，并基于gin-web + vue + xterm.js 实现了一套完整的功能 使用 环境准备：npm go 前端 gin-xterm 1 2 3 git clone https://github.com/lflxp/gin-xterm cd gin-xterm make all 后端 message 1 2 cd</description>
    </item>
    
    <item>
      <title>golang gin&#43;websocket&#43;xterm.js基础教学实战二</title>
      <link>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%BA%8C/</link>
      <pubDate>Thu, 05 Mar 2020 00:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%BA%8C/</guid>
      <description>介绍 gin和gorilla结合创建websocket，实现最简化易懂版本websocket实操 注册gin路由 api.GET(&amp;ldquo;ws/:id&amp;rdquo;, internal.WsSsh) 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description>
    </item>
    
    <item>
      <title>golang gin&#43;websocket基础教学实战一</title>
      <link>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%B8%80/</link>
      <pubDate>Thu, 05 Mar 2020 00:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/golang/websocket%E5%AE%9E%E6%88%98%E4%B8%80/</guid>
      <description>介绍 gin和gorilla结合创建websocket，实现最简化易懂版本websocket实操 服务端代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description>
    </item>
    
    <item>
      <title>golang template 动态传递参数的方法</title>
      <link>https://www.lflxp.cn/post/golang/template%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Mon, 24 Feb 2020 14:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/golang/template%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E5%8A%A0%E8%BD%BD/</guid>
      <description>基本使用方法 新建或者加载一个模板对象 1 2 3 4 type Template func New(name string) *Template func ParseFiles(filenames ...string) (*Template, error) func Must(t *Template, err error) *Template 即：比如： t := template.New(&amp;ldquo;test template&amp;rdquo;) 加载模板, 定义动态数据占位符 1 2 func (t *Template) Parse(text string) (*Template,</description>
    </item>
    
    <item>
      <title>Golang mmap的使用</title>
      <link>https://www.lflxp.cn/post/golang/mmap/</link>
      <pubDate>Sun, 23 Feb 2020 18:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/golang/mmap/</guid>
      <description>介绍 mmap并不是什么新技术，早在4.2BSD的系统说明中就已经出现了mmap相关函数，并且mmap属于POSIX标准。在一众开源软件中都使</description>
    </item>
    
    <item>
      <title>webcam 摄像头调用 golang版本</title>
      <link>https://www.lflxp.cn/post/fun/webcam/</link>
      <pubDate>Thu, 16 Jan 2020 00:11:22 +0800</pubDate>
      
      <guid>https://www.lflxp.cn/post/fun/webcam/</guid>
      <description>https://github.com/lflxp/webcam-right/blob/master/examples/http_mjpeg_streamer/webcam.go 介绍 用golang实现本地usb摄像头调用并通过http进行流数据访问 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32</description>
    </item>
    
  </channel>
</rss>