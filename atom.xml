<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>笑傲江湖</title>
  <subtitle>思想与技术的碰撞</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lflxp.cn/"/>
  <updated>2016-04-07T04:43:13.173Z</updated>
  <id>http://www.lflxp.cn/</id>
  
  <author>
    <name>爱像水墨青花</name>
    <email>382023823@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitLab配置使用</title>
    <link href="http://www.lflxp.cn/2016/04/07/2016-04-07-gitlab%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.lflxp.cn/2016/04/07/2016-04-07-gitlab配置使用/</id>
    <published>2016-04-07T04:39:04.063Z</published>
    <updated>2016-04-07T04:43:13.173Z</updated>
    
    <content type="html">&lt;h1 id=&quot;GitLab部署和配置&quot;&gt;&lt;a href=&quot;#GitLab部署和配置&quot; class=&quot;headerlink&quot; title=&quot;GitLab部署和配置&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://zhaochj.blog.51cto.com/368705/1737738&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitLab部署和配置&lt;/a&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;转载自: http://zhaochj.blog.51cto.com/368705/1737738&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;GitLab部署脚本&quot;&gt;&lt;a href=&quot;#GitLab部署脚本&quot; class=&quot;headerlink&quot; title=&quot;GitLab部署脚本&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://zhaochj.github.io/deploy-gitlab-use-shell/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitLab部署脚本&lt;/a&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;转载自: http://zhaochj.github.io/deploy-gitlab-use-shell/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;gitlab软件包安装和基础配置&quot;&gt;&lt;a href=&quot;#gitlab软件包安装和基础配置&quot; class=&quot;headerlink&quot; title=&quot;gitlab软件包安装和基础配置&quot;&gt;&lt;/a&gt;gitlab软件包安装和基础配置&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitlab@gitlab-01:~/tools$ cat install_config_gitlab.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Program: configure gitlab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Author: Neal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#E_mail: 419775240@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Date: 2015-12-04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#platform: Debian 8 x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Version 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 通用安装包到http://mirror.tuna.tsinghua.edu.cn/gitlab-ce/进行下载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo dpkg -i gitlab-ce_8.2.1-ce.0_amd64.deb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改gitlab数据存放目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /var/opt/gitlab/gitlab-shell/config.yml    # repos_path: &amp;quot;/data/git-data/repositories&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /var/opt/gitlab/gitlab-rails/etc/gitlab.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#satellites:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     path: /data/git-data/gitlab-satellites&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#gitlab_shell:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     path: /opt/gitlab/embedded/service/gitlab-shell/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#     repos_path: /data/git-data/repositories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建数据存放目录并修改权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir  -pv /data/git-data/gitlab-satellites&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkdir -pv /data/git-data/repositories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chown -R git.git /data/git-data/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod 2770 /data/git-data/repositories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# restart gitlab service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;启用https的安全访问：&quot;&gt;&lt;a href=&quot;#启用https的安全访问：&quot; class=&quot;headerlink&quot; title=&quot;启用https的安全访问：&quot;&gt;&lt;/a&gt;启用https的安全访问：&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitlab@gitlab-01:~/tools$ cat open_gitlab_https.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Program: open gitbal https access&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Author: Neal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#E_mail: 419775240@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Date: 2015-12-04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#platform: Debian 8 x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Version 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# SUBJECT为CA服务的机构信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SUBJECT=&amp;quot;/C=CN/ST=ChongQing/L=YuBei/O=SJKJ/OU=CA/CN=$DOMAIN&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# SUBJECT_GITLAB为gitlab主机的机构信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SUBJECT_GITLAB=&amp;quot;/C=CN/ST=ChongQing/L=YuBei/O=SJKJ/OU=OP/CN=$DOMAIN_GITLAB&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#apt-get -y install openssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 自建CA &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read -p &amp;quot;Enter your CA domain [www.example.com]: &amp;quot; DOMAIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;apos;mkdir -pv /etc/ssl/demoCA/&amp;#123;private,newcerts&amp;#125; &amp;gt; /dev/null&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /etc/ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生成密钥对&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;apos;(umask 077;openssl genrsa -out ./demoCA/private/cakey.pem 2048)&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#sudo bash -c &amp;apos;ln -s /etc/ssl/demoCA/private/cakey.pem /etc/ssl/demoCA/cakey.pem&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生成自签证书&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#sudo bash -c &amp;apos;openssl req -new -x509 -key ./demoCA/private/cakey.pem -out ./demoCA/cacert.pem -days 3650&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;openssl req -new -subj $SUBJECT -x509 -key ./demoCA/private/cakey.pem -out ./demoCA/cacert.pem -days 3650&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo touch ./demoCA/index.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;echo 01 &amp;gt; ./demoCA/serial&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo -e &amp;quot;\033[33mCertificate services is created...\033[0m&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##自建CA完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 为gitlab主机创建存放私钥和证书的目录，这是一个固定目录，不能更改，请参考：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#enable-https&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read -p &amp;quot;Enter your gitlab domain [www.example.com]: &amp;quot; DOMAIN_GITLAB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;apos;mkdir -p /etc/gitlab/ssl&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /etc/gitlab/ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生成私钥&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;(umask 077;openssl genrsa -out $&amp;#123;DOMAIN_GITLAB&amp;#125;.key 1024)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 生成证书签署请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;openssl req -new -subj $SUBJECT_GITLAB -key $&amp;#123;DOMAIN_GITLAB&amp;#125;.key -out $&amp;#123;DOMAIN_GITLAB&amp;#125;.csr&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# CA签署证书&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /etc/ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;openssl ca -in /etc/gitlab/ssl/$&amp;#123;DOMAIN_GITLAB&amp;#125;.csr -out /etc/gitlab/ssl/$&amp;#123;DOMAIN_GITLAB&amp;#125;.crt -days 3650&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 更改目录权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod 700 /etc/gitlab/ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 开启gitlab的https支持&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo vim /etc/gitlab/gitlab.rb #external_url &amp;apos;https://$&amp;#123;DOMAIN_GITLAB&amp;#125;:2443&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;cat &amp;lt;&amp;lt;- EOF &amp;gt;&amp;gt; /etc/gitlab/gitlab.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ##### open htts #####################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nginx[&amp;apos;redirect_http_to_https&amp;apos;] = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nginx[&amp;apos;ssl_certificate&amp;apos;] = \&amp;quot;/etc/gitlab/ssl/$&amp;#123;DOMAIN_GITLAB&amp;#125;.crt\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nginx[&amp;apos;ssl_certificate_key&amp;apos;] = \&amp;quot;/etc/gitlab/ssl/$&amp;#123;DOMAIN_GITLAB&amp;#125;.key\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure # 使配置生效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;启用smtp邮箱功能：&quot;&gt;&lt;a href=&quot;#启用smtp邮箱功能：&quot; class=&quot;headerlink&quot; title=&quot;启用smtp邮箱功能：&quot;&gt;&lt;/a&gt;启用smtp邮箱功能：&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitlab@gitlab-01:~/tools$ cat open_gitlab_smtp.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Program: open gitlab smtp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Author: Neal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#E_mail: 419775240@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Date: 2015-12-04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#platform: Debian 8 x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Version 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#以163邮箱为例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo bash -c &amp;quot;cat &amp;lt;&amp;lt;- EOF &amp;gt;&amp;gt; /etc/gitlab/gitlab.rb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ##### open smtp #####################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_enable&amp;apos;] = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_address&amp;apos;] = \&amp;quot;smtp.163.com\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_port&amp;apos;] = 465&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_user_name&amp;apos;] = \&amp;quot;XXXXX@163.com\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_password&amp;apos;] = \&amp;quot;***********\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_domain&amp;apos;] = \&amp;quot;163.com\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_authentication&amp;apos;] = \&amp;quot;login\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_enable_starttls_auto&amp;apos;] = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;smtp_tls&amp;apos;] = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gitlab_rails[&amp;apos;gitlab_email_from&amp;apos;] = \&amp;quot;XXXX@163.com\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GitLab部署和配置&quot;&gt;&lt;a href=&quot;#GitLab部署和配置&quot; class=&quot;headerlink&quot; title=&quot;GitLab部署和配置&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://zhaochj.blog.51cto.com/368705/1737738
    
    </summary>
    
      <category term="gitlab" scheme="http://www.lflxp.cn/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://www.lflxp.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>GitLab部署</title>
    <link href="http://www.lflxp.cn/2016/04/07/2016-04-07-gitlab%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/"/>
    <id>http://www.lflxp.cn/2016/04/07/2016-04-07-gitlab部署安装/</id>
    <published>2016-04-07T03:18:08.802Z</published>
    <updated>2016-04-07T03:51:58.739Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Install-a-GitLab-CE-Omnibus-package-on-Debian-8&quot;&gt;&lt;a href=&quot;#Install-a-GitLab-CE-Omnibus-package-on-Debian-8&quot; class=&quot;headerlink&quot; title=&quot;Install a GitLab CE Omnibus package on Debian 8&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://about.gitlab.com/downloads/#debian8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Install a GitLab CE Omnibus package on Debian 8&lt;/a&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Check if your server meets &lt;a href=&quot;http://doc.gitlab.com/ce/install/requirements.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the hardware requirements&lt;/a&gt;. GitLab packages are built for 64bit systems. For 32bit OS, consider &lt;a href=&quot;https://about.gitlab.com/installation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;alternative installation methods&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-Install-and-configure-the-necessary-dependencies&quot;&gt;&lt;a href=&quot;#1-Install-and-configure-the-necessary-dependencies&quot; class=&quot;headerlink&quot; title=&quot;1. Install and configure the necessary dependencies&quot;&gt;&lt;/a&gt;1. Install and configure the necessary dependencies&lt;/h2&gt;&lt;p&gt;If you install Postfix to send email please select ‘Internet Site’ during setup. Instead of using Postfix you can also use Sendmail or &lt;a href=&quot;https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;configure a custom SMTP server&lt;/a&gt;. If you wish to use Exim, please &lt;a href=&quot;https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md#smtp-on-localhost&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;configure it as an SMTP server&lt;/a&gt;.&lt;br&gt;On Centos 6 and 7, the commands below will also open HTTP and SSH access in the system firewall.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install curl openssh-server ca-certificates postfix&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-Add-the-GitLab-package-server-and-install-the-package&quot;&gt;&lt;a href=&quot;#2-Add-the-GitLab-package-server-and-install-the-package&quot; class=&quot;headerlink&quot; title=&quot;2. Add the GitLab package server and install the package&quot;&gt;&lt;/a&gt;2. Add the GitLab package server and install the package&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install gitlab-ce&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you are not comfortable installing the repository through a piped script, you can find the &lt;a href=&quot;https://packages.gitlab.com/gitlab/gitlab-ce/install&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;entire script here&lt;/a&gt;.&lt;br&gt;Alternatively you can &lt;a href=&quot;https://packages.gitlab.com/gitlab/gitlab-ce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;select and download the package manually&lt;/a&gt; and install using&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -LJO https://packages.gitlab.com/gitlab/gitlab-ce/packages/debian/jessie/gitlab-ce-XXX.deb/download&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dpkg -i gitlab-ce-XXX.deb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-Configure-and-start-GitLab&quot;&gt;&lt;a href=&quot;#3-Configure-and-start-GitLab&quot; class=&quot;headerlink&quot; title=&quot;3. Configure and start GitLab&quot;&gt;&lt;/a&gt;3. Configure and start GitLab&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gitlab-ctl reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;4-Browse-to-the-hostname-and-login&quot;&gt;&lt;a href=&quot;#4-Browse-to-the-hostname-and-login&quot; class=&quot;headerlink&quot; title=&quot;4. Browse to the hostname and login&quot;&gt;&lt;/a&gt;4. Browse to the hostname and login&lt;/h2&gt;&lt;p&gt;On your first visit, you’ll be redirected to a password reset screen to provide the password for the initial administrator account. Enter your desired password and you’ll be redirected back to the login screen.&lt;/p&gt;
&lt;p&gt;The default account’s username is root. Provide the password you created earlier and login. After login you can change the username if you wish.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.gitlab.com/omnibus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Troubleshooting and configuration options in the Omnibus documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/installation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alternative installation methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/aws&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AWS AMI with a preloaded Omnibus package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;国人看这里 Chinese GitLab CE mirror hosted by TUNA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packages.gitlab.com/gitlab/gitlab-ce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Browse the packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/update&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Update a GitLab instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.gitlab.com/ce/install/requirements.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installation requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/features/#compare&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Compare GitLab CE with EE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Install-a-GitLab-CE-Omnibus-package-on-Debian-8&quot;&gt;&lt;a href=&quot;#Install-a-GitLab-CE-Omnibus-package-on-Debian-8&quot; class=&quot;headerlink&quot; title
    
    </summary>
    
      <category term="gitlab" scheme="http://www.lflxp.cn/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://www.lflxp.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>hexo操作总结</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-04-06-hexo%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-04-06-hexo操作/</id>
    <published>2016-04-06T13:47:13.098Z</published>
    <updated>2016-04-06T14:54:01.124Z</updated>
    
    <content type="html">&lt;h1 id=&quot;hexo搭建博客命令&quot;&gt;&lt;a href=&quot;#hexo搭建博客命令&quot; class=&quot;headerlink&quot; title=&quot;hexo搭建博客命令&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://code.youmeek.com/2016/02/28/2016/02/Hexo/#footer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo搭建博客命令&lt;/a&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;记录hexo搭建博客的关键命令&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;安装-Hexo-框架&quot;&gt;&lt;a href=&quot;#安装-Hexo-框架&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo 框架&quot;&gt;&lt;/a&gt;安装 Hexo 框架&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;安装 Hexo（注意，现在是 cnpm 开头了，不是 npm 了）：cnpm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装时间不一定很快，有可能需要等 3 ~ 5 分钟。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装完有 WARN 警告也没关系的。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建-Hexo-项目&quot;&gt;&lt;a href=&quot;#创建-Hexo-项目&quot; class=&quot;headerlink&quot; title=&quot;创建 Hexo 项目&quot;&gt;&lt;/a&gt;创建 Hexo 项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;现在假设我要创建一个名为 hexo 的项目，项目目录就放在：E:\git_work_space 目录下，所以我们在 E:\git_work_space 目录下创建一个 hexo 目录。现在这个项目的全路径是：E:\git_work_space\hexo&lt;/li&gt;
&lt;li&gt;打开 Git Bash&lt;blockquote&gt;
&lt;p&gt;进入该目录：cd e:/git_work_space/hexo&lt;br&gt;然后执行：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo init&lt;/font&gt;&lt;/strong&gt;，这个时间也会比较长，也有可能要等几分钟，有显示 WARN 也不用管&lt;br&gt;最后执行：cnpm install，有显示 WARN 也不用管&lt;br&gt;安装完成之后，E:\git_work_space\hexo 目录结构是这样的：&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-b-1.jpg&quot; alt=&quot;结构&quot;&gt;&lt;br&gt;现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令：hexo server&lt;br&gt;现在用浏览器访问：&lt;a href=&quot;http://localhost:4000/，效果如下图&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/，效果如下图&lt;/a&gt;:&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-b-2.jpg&quot; alt=&quot;example&quot;&gt;&lt;br&gt;如果要停止 hexo 服务：在 Git Bash 下按 Ctrl + C 即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;选用其他主题&quot;&gt;&lt;a href=&quot;#选用其他主题&quot; class=&quot;headerlink&quot; title=&quot;选用其他主题&quot;&gt;&lt;/a&gt;选用其他主题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;由于默认主题太大众了，所以现在我们换个主题。&lt;/li&gt;
&lt;li&gt;你可以去这里找主题：&lt;blockquote&gt;
&lt;p&gt;hexo-theme：&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;br&gt;hexo-github-theme-list：&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/hexojs/hexo/wiki/Themes&lt;/a&gt;&lt;br&gt;有那些好看的hexo主题？：&lt;a href=&quot;http://www.zhihu.com/question/24422335&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/24422335&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;我这里选择的 yelee：&lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/MOxFIVE/hexo-theme-yelee&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;原因是能最大化衬托出：目录、文章内容、代码块。因为我对这个博客的定位就是用来放技术类内容，所以不会让它太杂或是太花。只是目前这个颜色偏浅，后续还需要调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;现在假设你跟我要用的模板是一样：&lt;blockquote&gt;
&lt;p&gt;还是让 Git Bash 保持在 E:\git_work_space\hexo 目录下，然后输入命令：git clone &lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/MOxFIVE/hexo-theme-yelee.git&lt;/a&gt; themes/yelee&lt;br&gt;这样就在 E:\git_work_space\hexo\themes 目录下生成了一个 yelle 文件夹，里面有我们刚刚 clone 下来的主题内容。&lt;br&gt;如果以后你不自己修改这个主题的话，可以考虑经常更新下作者的更新内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd e:/git_work_space/hexo/themes/yelee&lt;br&gt;git pull origin master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;下载好主题文件之后，我们现在要修改 E:\git_work_space\hexo 目录下的项目配置文件：_config.yml，把对应的主题目录名改下，编辑如下图。&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-b-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;更改主题目录名后，我们还要重新生成主题静态内容：&lt;blockquote&gt;
&lt;p&gt;继续在 Git Bash 中输入命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;重新生成静态博客的所有内容：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo generate&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;重启 hexo 本地服务：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo server&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;重新访问：&lt;a href=&quot;http://localhost:4000/，效果如下图&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/，效果如下图&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-b-4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;添加「标签」页面-hexo-new-page-tags&quot;&gt;&lt;a href=&quot;#添加「标签」页面-hexo-new-page-tags&quot; class=&quot;headerlink&quot; title=&quot;添加「标签」页面  hexo new page tags&quot;&gt;&lt;/a&gt;添加「标签」页面  &lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo new page tags&lt;/font&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;新建页面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;设置页面类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2014-12-22 12:39:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;tags&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;修改菜单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  home: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  archives: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tags: /tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注意：如果有启用 多说 或者 Disqus 评论，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;禁用评论示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2014-12-22 12:39:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;tags&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;添加「分类」页面&quot;&gt;&lt;a href=&quot;#添加「分类」页面&quot; class=&quot;headerlink&quot; title=&quot;添加「分类」页面&quot;&gt;&lt;/a&gt;添加「分类」页面&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 底下代码是一篇包含分类的文章的例子：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 分类测试文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: Testing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;新建页面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new page categories&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;设置页面类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 标签&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2014-12-22 12:39:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;categories&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;修改菜单&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  home: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  archives: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  categories : /categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注意：如果有启用 多说 或者 Disqus 评论，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;禁用评论示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2014-12-22 12:39:04&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: &amp;quot;categories&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Node-js-源设置&quot;&gt;&lt;a href=&quot;#Node-js-源设置&quot; class=&quot;headerlink&quot; title=&quot;Node.js 源设置&quot;&gt;&lt;/a&gt;Node.js 源设置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在安装 Hexo 之前，先说一下 Node.js 的源，Node.js 官方源默认是：&lt;a href=&quot;http://registry.npmjs.org，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：http://npm.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://registry.npmjs.org，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：http://npm.taobao.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Git Bash 中我们执行下面这一句（这是一整句的）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alias cnpm=&amp;quot;npm --registry=https://registry.npm.taobao.org \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--cache=$HOME/.npm/.cache/cnpm \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--disturl=https://npm.taobao.org/dist \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--userconfig=$HOME/.cnpmrc&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;现在验证下是否可以使用淘宝的 cnpm 命令：cnpm info express&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;如果能输出一大堆介绍，则说明成功了，以后每次要使用淘宝的源都需要这样来。现在除了默认的 npm，还多了一个 cnpm 可以使用，我们下面有关安装的讲解内容也都是基于此临时命令。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果输出：bash: cnpm: command not found，则表示没成功，需要你在排查下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;把本地的博客内容同步到-Github-上&quot;&gt;&lt;a href=&quot;#把本地的博客内容同步到-Github-上&quot; class=&quot;headerlink&quot; title=&quot;把本地的博客内容同步到 Github 上&quot;&gt;&lt;/a&gt;把本地的博客内容同步到 Github 上&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：&lt;blockquote&gt;
&lt;p&gt;继续在 Git Bash 中输入：&lt;br&gt;cnpm install hexo -server –save&lt;br&gt;cnpm install hexo-deployer-git –save&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑全局 hexo 的配置文件：_config.yml&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官网对此配置的介绍：&lt;a href=&quot;https://hexo.io/zh-cn/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/docs/configuration.html&lt;/a&gt;&lt;br&gt;我自己的编辑内容初稿（你需要认真看的是含有中文注释的内容）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Hexo Configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Site，这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: YouMeek Code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subtitle: 这里只有代码相关，要了解更多 &amp;gt;&amp;gt;&amp;gt; YouMeek.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;description: 这里是 YouMeek.com 一部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;author: Judas.n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;email: 363379444@qq.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;language: zh-CN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timezone:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# URL，这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## If your site is put in a subdirectory, set url as &amp;apos;http://yoursite.com/child&amp;apos; and root as &amp;apos;/child/&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url: http://code.youmeek.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source_dir: source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public_dir: public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_dir: tags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;archive_dir: archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_dir: categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;code_dir: downloads/code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i18n_dir: :lang&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Writing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;new_post_name: :title.md # File name of new posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_layout: post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;titlecase: false # Transform title into titlecase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;external_link: true # Open external links in new tab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filename_case: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render_drafts: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;post_asset_folder: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;relative_link: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;future: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  line_number: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  auto_detect: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tab_replace:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Category &amp;amp; Tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default_category: uncategorized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;category_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tag_map:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Date / Time format&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_format: YYYY-MM-DD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time_format: HH:mm:ss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Pagination&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;per_page: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pagination_dir: page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: yelee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@github.com:judasn/judasn.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑全局配置后我们需要重新部署：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;继续在 Git Bash 中输入命令：&lt;br&gt;先清除掉已经生成的旧文件：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo clean&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;再生成一次静态文件：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo generate&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;在本地预览下：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo server&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;本地没问题之后，Ctrl + C 停掉本地预览，使用部署命令部署到 Github 上：&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo deploy&lt;/font&gt;&lt;/strong&gt;，有弹出下面提示框，请输入：yes&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-d-1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;提交成功效果如下：&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-d-2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;访问服务器地址进行检查：&lt;a href=&quot;http://judasn.github.io，效果如下&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://judasn.github.io，效果如下&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://img.youmeek.com/2016/hexo-start-d-3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;通过上面几次流程我们也就可以总结：以后，每次发表新文章要部署都按这样的流程来：&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo clean&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo generate&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo deploy&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;也因为这几个命令太频繁了，所以又有了精简版的命令：&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo clean == hexo clean&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo g == hexo generate&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo s == hexo server&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;font color=&quot;red&quot;&gt;hexo d == hexo deploy&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;绑定域名&quot;&gt;&lt;a href=&quot;#绑定域名&quot; class=&quot;headerlink&quot; title=&quot;绑定域名&quot;&gt;&lt;/a&gt;绑定域名&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;绑定域名不排除会遇到很多网络问题或是七七八八，所以这里先提供先官网的一些说明：&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-your-pages-site-repository/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/setting-up-your-pages-site-repository/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://help.github.com/articles/quick-start-setting-up-a-custom-domain/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/quick-start-setting-up-a-custom-domain/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://help.github.com/articles/setting-up-an-apex-domain/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/setting-up-an-apex-domain/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://help.github.com/articles/troubleshooting-custom-domains/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/troubleshooting-custom-domains/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;首先我们要一个 CNAME 文件（文件名叫 CNAME，没有文件后缀的），把该文件放在 E:\git_work_space\hexo\source 目录下，以后一些需要放在根目录的资源文件都可以放这里。如果你找不到这样的文件可以到我的项目上下载：&lt;a href=&quot;https://github.com/judasn/judasn.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/judasn/judasn.github.io&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;CNAME 上的内容需要写你具体要绑定的域名信息，比如我是：code.youmeek.com，具体你可以参考下图：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo搭建博客命令&quot;&gt;&lt;a href=&quot;#hexo搭建博客命令&quot; class=&quot;headerlink&quot; title=&quot;hexo搭建博客命令&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://code.youmeek.com/2016/02/28/2016/02/Hexo
    
    </summary>
    
      <category term="hexo" scheme="http://www.lflxp.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.lflxp.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hehe</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-01-hehe/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-01-hehe/</id>
    <published>2016-04-06T10:31:45.188Z</published>
    <updated>2016-04-06T11:29:19.759Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-----BEGIN RSA PRIVATE KEY-----&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MIIEpAIBAAKCAQEA9I4HKvoH9qABNLMF+T4x4aTZ/ADfEm6SFBCtUwXOAprzdCebTqSth3nOlC78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/acjwv5eOF55RiotIx2eTw2gxIaQmMRsbNaynWedEMGsAzMgKmRqLDg3kvJIDLsVMaQY7yJ4JO1/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7jx74n85LJMrnJJtBs1UrWcm0rxEO4dUsvDHKprHl9u68pYFdS5Dkhmy5ogpdV4BaROOgRhnonnz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sk21vY1HF/5yAPMP0KwyXidIqzWLU3jEt8ztg/cn70zGhgx9o9T9cbsbpuJ6aRME/SArSPzNDhTN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5twW58iYt9YlClzfroyTJb0lO062L7I5R9F8hKQCI2SypIdEKi1unQIDAQABAoIBACCZThtMeQNH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOIVexZeVAfgEa6l7xZl5tMF5hTLEUsHnKw/G1TAXuFQO1lFajPls76qaaTZ8xCHTrz/lbqz9lo8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FcpHZKydcfHJfgZdyrAigIcmG4EJfV75LOGFjq2vUiOOVLWXcxYuudTXYKewdn/IhQADHuZ+eY5d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yjqlL4UqkKs8jKHaNW/iBv0AELU7XQSO3L4k6oFqBdauHCKfzRHzihuX3lSgMFQ4xp+8cfr88yca&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iItiuFSbU8FWr50Ac3cjDNGYJLJnf3UyGdsJ7XSNky+ipQHMibNg+9j6x4WLSP/CvYcpFT2kdMI/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0WsfAOW9NQmz41WtqqG4uGles4ECgYEA/dtcf0w2Gwl0lmosg7Ad0kpWE1UtZeQTg0HaLbIUuqw7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vwvVtzlXw/7SQU5R6SJlEJaKpsBMmh4tFR5SWa39gbnCb6Y45e8AfZUlKM8FYBAaH0ZPC+ZY4OfF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8MLnJkvGr2Fekc9/b0/OijC7C1R0Nz9E5AcsQDlrq5/2iuN6RVsCgYEA9p6QGmTD4yGk+7sX2nPq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dqYpm9b/l5VHGUrZVoSs92TZ0L3Zf4/s3TwAIx/NG4knFFQINQvPOOuRiMmsv5y8gB8WXRe4ghpI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;oPq4MGVt+z3QXpzDp7TRKBNnSQRVte3ahUcgJFIywS1TV1QN7v10+1SPj9kaik6/0R3JKM3+RWcC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gYEAgTJFLxxQZQ444dyDbzoQ01e12vz8r+CV9bVsHtmFJ0RE3ARf7nImsr9brpT3pxk0Km8Tfa5c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zgsRkq/t5WphnMY3qK8GQi+TJlbjpJNH/w3y3Xvg+wNutHgBC3mGPr1ODzAU+0yJZNNPIJGQgEGp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;K/ztSMhFwyH2JFCzHxiKwAUCgYEAmDY7WJ7yq//69Qd/bGv4vSxHKBElhWg0Dq88vwJ6QuLy8LwM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PogVOGKs7wDUtfcLsKdAvYTBbC8wjs1ymnzhdu44/lICpgIU645zGiOwIs3/CjYVKDAYm3SGXfGX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+QaJxZKliuVUwBf6hT6yrtuuVOTXCoCDufNqvmV034NsOWcCgYA73qiTnytkwry8fw9lpvn2o6o+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DAGdUvBNPkd3YS2eKZuLEFGD3ozxhgyYdgCzafvOwKjp0fRYbn3Ug7HnsXJayFOftCZWKAPI4+DF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Aw8ChjALGBPpMrR1+gqMdLgaFSpSsoTDtSl74FNPbl+jiVQXsBKcMZGu4Q/jvqH3hh7oew==&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----END RSA PRIVATE KEY-----&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
    
    </summary>
    
      <category term="hehe" scheme="http://www.lflxp.cn/categories/hehe/"/>
    
    
      <category term="key" scheme="http://www.lflxp.cn/tags/key/"/>
    
  </entry>
  
  <entry>
    <title>QQ IN DEBIAN</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-31-debian-qq/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-31-debian-qq/</id>
    <published>2016-04-06T10:31:45.186Z</published>
    <updated>2016-04-06T11:29:05.662Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://blog.fooleap.org/wineqq-for-debian.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;debian install QQ&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Debian-上安装-Wine-QQ&quot;&gt;&lt;a href=&quot;#Debian-上安装-Wine-QQ&quot; class=&quot;headerlink&quot; title=&quot;Debian 上安装 Wine QQ&quot;&gt;&lt;/a&gt;Debian 上安装 Wine QQ&lt;/h1&gt;&lt;p&gt;QQ 或许是无法离开 Windows 的借口之一，在 Linux 上也会想用 QQ，还好现在 Wine 版本的 QQ 还能使用，就没有去使用并不是很好用的 pidgin-lwqq。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;安装 Wine 1.7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很容易就能找到清风老师打包的 &lt;a href=&quot;http://phpcj.org/wineqq/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WineQQ 和安装教程&lt;/a&gt;，我用的是 Debian 8 64 位版本，直接采用 APT 安装 Wine 默认是 1.6 版本，可看样子 Wine QQ 依赖于 Wine 1.7，貌似也可以采用添加 PPA 源就可以安装 Wine 1.7，开撸。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# add-apt-repository ppa:ubuntu-wine/ppa
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;添加完 PPA 源执行更新，很完美地出现 404 错误，毕竟 PPA 是给 Ubuntu 用的，可以理解。只好手动编辑 /etc/apt/sources.list 添加源：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deb http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://ppa.launchpad.net/ubuntu-wine/ppa/ubuntu trusty main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里选择 trusty，也即是 Ubuntu 14.04 适用的，也不知道其他版本用的是否一样，但就用它，编辑之后执行更新软件包列表&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可能会出现“W: GPG 错误，由于没有公钥，无法验证下列签名”错误提示，导入加该 PPA 的公钥&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5A9A06AEF9CB8DB0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新更新成功，执行安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# apt-get install wine1.7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;出现“依赖: wine1.7-i386 (= 1:1.7.44-0ubuntu1) 但无法安装它”错误，这是因为没打开 32 位软件的支持。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# dpkg --add-architecture i386
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到此终于可以不怎么愉快地安装 Wine 1.7，为什么不愉快呢？这边访问 launchpad.net 太慢了，搞的不得不采用 aria2 加速 APT。&lt;/p&gt;
&lt;p&gt;安装过程中，经过长长的字符刷屏之后，终于安装完成。&lt;/p&gt;
&lt;h1 id=&quot;安装-QQ&quot;&gt;&lt;a href=&quot;#安装-QQ&quot; class=&quot;headerlink&quot; title=&quot;安装 QQ&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装 QQ&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;根据清风老师的教程下载自己喜欢的 WineQQ 版本 并解压。打开 QQ，提示安装 Mono，那就安装吧，等待之后，久违的 QQ 登录界面就见天日了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://source.fooleap.org/wineqq-for-debian-01.png&quot; alt=&quot;Wine QQ&quot;&gt;&lt;br&gt;▲Wine QQ&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备选&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你不想采用以上的版本，想要自己安装，那么可能需要的步骤有以下几点：&lt;/p&gt;
&lt;p&gt;安装 winetricks&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install winetricks
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置 Wine 使用 32 位环境（如果 64 位系统的话）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ export WINEARCH=win32
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装相关的组件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ winetricks -q riched20 ie6 mfc42
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;具体可以参考这篇文章： 使用 Wine 运行腾讯 TM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QQ 轻聊版&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为用其他 Windows 软件安装包能安装且正常使用，所以就想使用官方版的 QQ。个人并不是很喜欢用第三方修改过的软件版本，腾讯官方有个轻聊版（目前 7.5 版）感觉不错，所以就下下来安装。&lt;/p&gt;
&lt;p&gt;安装过程一切正常，就是在最后注册组件的时候有点慢，安装完成后正常打开。&lt;/p&gt;
&lt;p&gt;不过它并没有在 LXDE 的菜单创建快捷方式，模仿上面的写一个:~/.local/share/applications/QQ.desktop&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Categories=Network&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exec=wine &amp;quot;.wine/drive_c/Program Files/Tencent/QQLite/Bin/QQ.exe&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Icon=QQ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name=QQ&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NoDisplay=false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StartupNotify=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Terminal=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type=Application&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name[zh_CN]=QQ 轻聊版&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重启之后发现启动不了，也许是 QQ 有些程序是自启动的，安全校验什么的。找了一下，发现这个：&lt;a href=&quot;http://www.zdfans.com/589.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯QQ7.x 去整体安全校验补丁v5.0&lt;/a&gt;。只要将其放在 QQ 目录下的 Bin 文件夹里运行并应用之后便能正常启动 QQ。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://source.fooleap.org/wineqq-for-debian-02.png&quot; alt=&quot;QQ 轻聊版聊天窗口&quot;&gt;&lt;br&gt;▲QQ 轻聊版聊天窗口&lt;/p&gt;
&lt;p&gt;PS：我安装 QQ 轻聊版之前使用 winetricks 安装过一些函数库，所以不能保证只要安装 Wine 之后便能运行 QQ，具体也没去研究。再不济则可以下载清风老师的包除却 QQ 的相关文件，其他覆盖。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;另外，若喜欢更加简单粗暴，&lt;a href=&quot;http://source.fooleap.org/wineqq-for-debian-02.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TM 2013&lt;/a&gt; 也是可以正常安装的，表情能用，只是这货好久没更新了。&lt;/p&gt;
&lt;p&gt;无法使用表情（QQ 轻聊版启动后刚开始还可以点，后来就不行），可以使用快捷输表情的方式代替，设置快捷输入表情后，先输入 /，下拉菜单就出现表情。&lt;/p&gt;
&lt;p&gt;若在 QQ 中 Fcitx 无法输入，可参考这篇文章：&lt;a href=&quot;http://segmentfault.com/a/1190000000361008&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fcitx输入法在wps、wineqq中失灵问题的解决&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;至于字体啥的，日（jiu）后（shi）再（bu）说（shuo）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://blog.fooleap.org/wineqq-for-debian.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;debian install QQ&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Debian-上安装-Wine
    
    </summary>
    
      <category term="debian" scheme="http://www.lflxp.cn/categories/debian/"/>
    
    
      <category term="debian" scheme="http://www.lflxp.cn/tags/debian/"/>
    
  </entry>
  
  <entry>
    <title>第一章:介绍Django</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-30-%E4%BB%8B%E7%BB%8DDjango/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-30-介绍Django/</id>
    <published>2016-04-06T10:31:45.184Z</published>
    <updated>2016-04-06T12:43:56.987Z</updated>
    
    <content type="html">&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;本书所讲的是Django：一个可以使Web开发工作愉快并且高效的Web开发框架。 使用Django，使你能够以最小的代价构建和维护高质量的Web应用。&lt;/p&gt;
&lt;p&gt;从好的方面来看，Web 开发激动人心且富于创造性；从另一面来看，它却是份繁琐而令人生厌的工作。 通过减少重复的代码，Django 使你能够专注于 Web 应用上有 趣的关键性的东西。 为了达到这个目标，Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。 同时，Django 尝试留下一些方法，来让你根据需要在framework之外来开发。&lt;/p&gt;
&lt;p&gt;本书的目的是将你培养成Django专家。 主要侧重于两方面： 第一，我们深度解释 Django 到底做了哪些工作以及如何用她构建Web应用；第二，我们将会在适当的地方讨论更高级的概念，并解释如何 在自己的项目中高效的使用这些工具。 通过阅读此书，你将学会快速开发功能强大网站的技巧，并且你的代码将会十分 清晰，易于维护。 本书的代码清晰，易维护，通过学习，可以快速开发功能强大的网站。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;框架是什麼&quot;&gt;&lt;a href=&quot;#框架是什麼&quot; class=&quot;headerlink&quot; title=&quot;框架是什麼?&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;框架是什麼?&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;Django 在新一代的 Web框架 中非常出色，为什么这么说呢？&lt;/p&gt;
&lt;p&gt;为回答该问题，让我们考虑一下不使用框架设计 Python 网页应用程序的情形。 贯穿整本书，我们多次展示不使用框架实现网站基本功能的方法，让读者认识到框架开发的方便。 （不使用框架，更多情况是没有合适的框架可用。 最重要的是，理解实现的来龙去脉会使你成为一个优秀的web开发者。）&lt;/p&gt;
&lt;p&gt;使用Python开发Web，最简单，原始和直接的办法是使用CGI标准，在1998年这种方式很流行。 现在从应用角度解释它是如何工作： 首先做一个Python脚本，输出HTML代码，然后保存成.cgi扩展名的文件，通过浏览器访问此文件。 就是这样。&lt;/p&gt;
&lt;p&gt;如下示例，用Python CGI脚本显示数据库中最新出版的10本书： 不用关心语法细节；仅仅感觉一下基本实现的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import MySQLdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;Content-Type: text/html\n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Books&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;body&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;h1&amp;gt;Books&amp;lt;/h1&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;ul&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection = MySQLdb.connect(user=&amp;apos;me&amp;apos;, passwd=&amp;apos;letmein&amp;apos;, db=&amp;apos;my_db&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor = connection.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.execute(&amp;quot;SELECT name FROM books ORDER BY pub_date DESC LIMIT 10&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for row in cursor.fetchall():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print &amp;quot;&amp;lt;li&amp;gt;%s&amp;lt;/li&amp;gt;&amp;quot; % row[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;/ul&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print &amp;quot;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;connection.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先，用户请求CGI，脚本代码打印Content-Type行，后面跟着换行。 再接下 来是一些HTML的起始标签，然后连接数据库并执行一些查询操作，获取最新的十本书。 在遍历这些书的同时，生成一个书名的HTML列表项。 最后，输出HTML的结束标签并且关闭数据库连接。&lt;/p&gt;
&lt;p&gt;像这样的一次性的动态页面，从头写起的方法并非一定不好。 其中一点： 这些代码简单易懂，就算是一个初起步的 开发者都能读明白这16行的Python的代码，而且这些代码从头到尾做了什么都能了解得一清二楚。 不需要学习额外 的背景知识，没有额外的代码需要去了解。 同样，也易于部署这16行代码，只需要将它保存为一个 latestbooks.cgi 的 文件，上传到网络服务器上，通过浏览器访问即可。&lt;/p&gt;
&lt;p&gt;尽管实现很简单，还是暴露了一些问题和不便的地方。 问你自己这几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用中有多处需要连接数据库会怎样呢？ 每个独立的CGI脚本，不应该重复写数据库连接的代码。 比较实用的办法是写一个共享函数，可被多个代码调用。&lt;/li&gt;
&lt;li&gt;一个开发人员 确实 需要去关注如何输出Content-Type以及完成所有操作后去关闭数据 库么？ 此类问题只会降低开发人员的工作效率，增加犯错误的几率。 那些初始化和释放 相关的工作应该交给一些通用的框架来完成。&lt;/li&gt;
&lt;li&gt;如果这样的代码被重用到一个复合的环境中会发生什么？ 每个页面都分别对应独立的数据库和密码吗？&lt;/li&gt;
&lt;li&gt;如果一个Web设计师，完全没有Python开发经验，但是又需要重新设计页面的话，又将 发生什么呢？ 一个字符写错了，可能导致整个应用崩溃。 理想的情况是，页面显示的逻辑与从数据库中读取书本记录分隔开，这样 Web设计师的重新设计不会影响到之前的业务逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上正是Web框架致力于解决的问题。 Web框架为应用程序提供了一套程序框架， 这样你可以专注于编写清晰、易维护的代码，而无需从头做起。 简单来说，这就是Django所能做的。&lt;/p&gt;
&lt;h3 id=&quot;MVC-设计模式&quot;&gt;&lt;a href=&quot;#MVC-设计模式&quot; class=&quot;headerlink&quot; title=&quot;MVC 设计模式&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;MVC 设计模式&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;让我们来研究一个简单的例子，通过该实例，你可以分辨出，通过Web框架来实现的功能与之前的方式有何不同。 下面就是通过使用Django来完成以上功能的例子： 首先，我们分成4个Python的文件，(models.py , views.py , urls.py ) 和html模板文件 (latest_books.html )&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# models.py (the database tables)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.db import models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Book(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = models.CharField(max_length=50)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pub_date = models.DateField()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# views.py (the business logic)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.shortcuts import render_to_response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from models import Book&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def latest_books(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    book_list = Book.objects.order_by(&amp;apos;-pub_date&amp;apos;)[:10]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render_to_response(&amp;apos;latest_books.html&amp;apos;, &amp;#123;&amp;apos;book_list&amp;apos;: book_list&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# urls.py (the URL configuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import views&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (r&amp;apos;^latest/$&amp;apos;, views.latest_books),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# latest_books.html (the template)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Books&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1&amp;gt;Books&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% for book in book_list %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;li&amp;gt;&amp;#123;&amp;#123; book.name &amp;#125;&amp;#125;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，不用关心语法细节；只要用心感觉整体的设计。 这里只关注分割后的几个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;models.py 文件主要用一个 Python 类来描述数据表。 称为 模型(model) 。 运用这个类，你可以通过简单的 Python 的代码来创建、检索、更新、删除 数据库中的记录而无需写一条又一条的SQL语句。&lt;/li&gt;
&lt;li&gt;views.py文件包含了页面的业务逻辑。 latest_books()函数叫做视图。&lt;/li&gt;
&lt;li&gt;urls.py 指出了什么样的 URL 调用什么的视图。 在这个例子中 /latest/ URL 将会调用 latest_books() 这个函数。 换句话说，如果你的域名是example.com，任何人浏览网址&lt;a href=&quot;http://example.com/latest/将会调用latest_books()这个函数。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/latest/将会调用latest_books()这个函数。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;latest_books.html 是 html 模板，它描述了这个页面的设计是如何的。 使用带基本逻辑声明的模板语言，如&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合起来，这些部分松散遵循的模式称为模型-视图-控制器(MVC)。 简单的说， MVC 是一种软件开发的方法，它把代码的定义和数据访问的方法（模型）与请求逻辑 （控制器）还有用户接口（视图）分开来。 我们将在第5章更深入地讨论MVC。&lt;/p&gt;
&lt;p&gt;这种设计模式关键的优势在于各种组件都是 松散结合 的。这样，每个由 Django驱动 的Web应用都有着明确的目的，并且可独立更改而不影响到其它的部分。 比如，开发者 更改一个应用程序中的 URL 而不用影响到这个程序底层的实现。 设计师可以改变 HTML 页面 的样式而不用接触 Python 代码。 数据库管理员可以重新命名数据表并且只需更改一个地方，无需从一大堆文件中进行查找和替换。&lt;/p&gt;
&lt;p&gt;本书中，每个组件都有它自己的一个章节。 比如，第三章涵盖了视图，第四章是模板， 而第五章是模型。&lt;/p&gt;
&lt;h3 id=&quot;Django-历史&quot;&gt;&lt;a href=&quot;#Django-历史&quot; class=&quot;headerlink&quot; title=&quot;Django 历史&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Django 历史&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;在我们讨论代码之前我们需要先了解一下 Django 的历史。 从上面我们注意到：我们将向你展示如何不使用捷径来完成工作，以便能更好的理解捷径的原理 同样，理解Django产生的背景，历史有助于理解Django的实现方式。&lt;/p&gt;
&lt;p&gt;如果你曾编写过网络应用程序。 那么你很有可能熟悉之前我们的 CGI 例子。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从头开始编写网络应用程序。&lt;/li&gt;
&lt;li&gt;从头编写另一个网络应用程序。&lt;/li&gt;
&lt;li&gt;从第一步中总结（找出其中通用的代码），并运用在第二步中。&lt;/li&gt;
&lt;li&gt;重构代码使得能在第 2 个程序中使用第 1 个程序中的通用代码。&lt;/li&gt;
&lt;li&gt;重复 2-4 步骤若干次。&lt;/li&gt;
&lt;li&gt;意识到你发明了一个框架。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这正是为什么 Django 建立的原因！&lt;/p&gt;
&lt;p&gt;Django 是从真实世界的应用中成长起来的，它是由 堪萨斯（Kansas）州 Lawrence 城中的一个 网络开发小组编写的。 它诞生于 2003 年秋天，那时 Lawrence Journal-World 报纸的 程序员 Adrian Holovaty 和 Simon Willison 开始用 Python 来编写程序。&lt;/p&gt;
&lt;p&gt;当时他们的 World Online 小组制作并维护当地的几个新闻站点, 并在以新闻界特有的快节奏开发环境中逐渐发展。 这些站点包括有 LJWorld.com、Lawrence.com 和 KUsports.com， 记者（或管理层） 要求增加的特征或整个程序都能在计划时间内快速的被建立，这些时间通常只有几天 或几个小时。 因此，Adrian 和 Simon 开发了一种节省时间的网络程序开发框架， 这是在截止时间前能完成程序的唯一途径。&lt;/p&gt;
&lt;p&gt;2005 年的夏天，当这个框架开发完成时，它已经用来制作了很多个 World Online 的站点。 当时 World Online 小组中的 Jacob Kaplan-Moss 决定把这个框架发布为一个开源软件。&lt;/p&gt;
&lt;p&gt;从今往后数年，Django是一个有着数以万计的用户和贡献者，在世界广泛传播的完善开源项目。 原来的World Online的两个开发者（Adrian and Jacob）仍然掌握着Django，但是其发展方向受社区团队的影响更大。&lt;/p&gt;
&lt;p&gt;这些历史都是相关联的，因为她们帮助解释了很重要的两点。 第一，Django最可爱的地方。 Django诞生于新闻网站的环境中，因此它提供很多了特性（如第6章会说到的管理后台），非常适合内容类的网站，如Amazon.com, craigslist.org和washingtonpost.com，这些网站提供动态的，数据库驱动的信息。 （不要看到这就感到沮丧，尽管Django擅长于动态内容管理系统， 但并不表示Django主要的目的就是用来创建动态内容的网站。 某些方面 &lt;em&gt; 特别高效&lt;/em&gt; 与其他方面 &lt;em&gt; 不高效&lt;/em&gt; 是有区别的, Django在其他方面也同样高效。）&lt;/p&gt;
&lt;p&gt;第二，Django的起源造就了它的开源社区的文化。 因为Django来自于真实世界中的代码，而不是 来自于一个科研项目或者商业产品，她主要集中力量来解决Web开发中遇到的问题，同样 也是Django的开发者经常遇到的问题。 这样，Django每天在现有的基础上进步。 框架的开发者对于让开发人员节省时间，编写更加容易维护的程序，同时保证程序运行的效率具有极大的兴趣。 无他，开发者动力来源于自己的目标：节省时间，快乐工作。 （坦率地讲，他们使用了自己公司的产品。）&lt;/p&gt;
&lt;h3 id=&quot;如何阅读本书&quot;&gt;&lt;a href=&quot;#如何阅读本书&quot; class=&quot;headerlink&quot; title=&quot;如何阅读本书&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;如何阅读本书&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;在编写本书时，我们努力尝试在可读性和参考性间做一个平衡，当然本书会偏向于可 读性。 本书的目标，之前也提过，是要将你培养成一名Django专家，我们相信，最好 的方式就是提供文章和充足的实例，而不是一堆详尽却乏味的关于Django特色的手册。 （曾经有人说过，如果仅仅教字母表是无法教会别人说话的。&lt;/p&gt;
&lt;p&gt;按照这种思路，我们推荐按顺序阅读第 1-12 章。 这些章节构成了如何使用 Django 的基础；读过之后，你就可以搭建由 Django 支撑的网站了。 1-7章是核心课程，8-11章讲述Django的高级应用，12章讲述部署相关的知识。 剩下的13-20章，讲述Django特有的特点，可以任意顺序阅读。&lt;/p&gt;
&lt;p&gt;附录部分用作参考资料。 要回忆语法或查阅 Django 某部分的功能概要时，你偶尔可能会回来翻翻这些资料以及 &lt;a href=&quot;http://www.djangoproject.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.djangoproject.com/&lt;/a&gt; 上的免费文档&lt;/p&gt;
&lt;h3 id=&quot;所需编程知识&quot;&gt;&lt;a href=&quot;#所需编程知识&quot; class=&quot;headerlink&quot; title=&quot;所需编程知识&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;所需编程知识&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;本书读者需要理解基本的面向过程和面向对象编程： 流程控制（ if ， while 和 fors ），数据结构（列表，哈希表/字典），变量，类和对象。&lt;/p&gt;
&lt;p&gt;Web开发经验，正如你所想的，也是非常有帮助的，但是对于阅读本书，并不是必须的。 通过本书，我们尽量给缺乏经验的开发人员提供在Web开发中最好的实践。&lt;/p&gt;
&lt;h3 id=&quot;Python所需知识&quot;&gt;&lt;a href=&quot;#Python所需知识&quot; class=&quot;headerlink&quot; title=&quot;Python所需知识&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Python所需知识&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;本质上来说， Django 只不过是用 Python 编写的一组类库。 用 Django 开发站点就是使用这些类库编写 Python 代码。 因此，学习 Django 的关键就是学习如何进行 Python 编程并理解 Django 类库的运作方式。&lt;/p&gt;
&lt;p&gt;如果你有Python开发经验，在学习过程中应该不会有任何问题。 基本上,Django的代码并 没有使用一些黑色魔法（例如代码中的花哨技巧，某个实现解释或者理解起来十分困难）。 对你来说，学习Django就是学习她的命名规则和API。&lt;/p&gt;
&lt;p&gt;如果你没有使用 Python 编程的经验，你一定会学到很多东西。 它是非常易学易用的。 虽然这本书没有包括一个完整的 Python 教程， 但也算是一个恰当的介绍了 Python特征和 功能的集锦。 当然，我们推荐你读一下官方的 Python 教程，它可 以从 &lt;a href=&quot;http://docs.python.org/tut/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.python.org/tut/&lt;/a&gt; 在线获得。 另外我们也推荐 Mark Pilgrims的 书 Dive Into Python （ &lt;a href=&quot;http://www.diveintopython.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.diveintopython.org/&lt;/a&gt; ）&lt;/p&gt;
&lt;h3 id=&quot;Django版本支持&quot;&gt;&lt;a href=&quot;#Django版本支持&quot; class=&quot;headerlink&quot; title=&quot;Django版本支持&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Django版本支持&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;此书内容对Django 1.1兼容。&lt;/p&gt;
&lt;p&gt;Django的开发者保证主要版本号向后兼容。 这意味着，你用Django 1.1写的应用，可以用于1.2，1.3，1.9等所有以1开头的版本&lt;/p&gt;
&lt;p&gt;如果Django到了2.0，你的应用可能不再兼容，需要重写，但是，2.0是很遥远的事情。 对此，可以参考一下1.0的开发周期，整整3年的时间。 （这与Python语言的兼容策略非常像： 在python 2.0下写的代码可以在python 2.6下运行，但不一定能在python3.0下运行&lt;/p&gt;
&lt;p&gt;所以，此书覆盖1.1版本，可以使用很长时间。&lt;/p&gt;
&lt;h3 id=&quot;获取帮助&quot;&gt;&lt;a href=&quot;#获取帮助&quot; class=&quot;headerlink&quot; title=&quot;获取帮助&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;获取帮助&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;Django的最大的益处是,有一群乐于助人的人在Django社区上。 你可以毫无约束的提各种 问题在上面,如:django的安装,app 设计,db 设计,发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Django邮件列表是很多Django用户提出问题、回答问题的地方。 可以通过&lt;a href=&quot;http://www.djangoproject.com/r/django-users&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.djangoproject.com/r/django-users&lt;/a&gt; 来免费注册。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果Django用户遇到棘手的问题,希望得到及时地回复，可以使用Django IRC channel。 在Freenode IRC network加入#django&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;本书所讲的是Django：一个可以使Web开发工作愉快并且高效的Web开发框架。 使用Django，使你能够以最小的代价构建和维护高质量的Web应用。&lt;/p&gt;
&lt;p&gt;从好的方面来看，Web 开发激动人心且富于创造性；从另一面来看，它却是份繁琐而令人生厌的工作。 通过减少重复的代码，Django 使你能够专注于 Web 应用上有 趣的关键性的东西。 为了达到这个目标，Django 提供了通用Web开发模式的高度抽象，提供了频繁进行的编程作业的快速解决方法，以及为“如何解决问题”提供了清晰明了的约定。 同时，Django 尝试留下一些方法，来让你根据需要在framework之外来开发。&lt;/p&gt;
&lt;p&gt;本书的目的是将你培养成Django专家。 主要侧重于两方面： 第一，我们深度解释 Django 到底做了哪些工作以及如何用她构建Web应用；第二，我们将会在适当的地方讨论更高级的概念，并解释如何 在自己的项目中高效的使用这些工具。 通过阅读此书，你将学会快速开发功能强大网站的技巧，并且你的代码将会十分 清晰，易于维护。 本书的代码清晰，易维护，通过学习，可以快速开发功能强大的网站。&lt;br&gt;
    
    </summary>
    
      <category term="Django book 2.0" scheme="http://www.lflxp.cn/categories/Django-book-2-0/"/>
    
    
      <category term="django" scheme="http://www.lflxp.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>第三章 视图和URL配置</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-30-%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E8%A7%86%E5%9B%BE%E5%92%8CURL%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-30-第三章 视图和URL配置/</id>
    <published>2016-04-06T10:31:45.183Z</published>
    <updated>2016-04-06T11:25:47.763Z</updated>
    
    <content type="html">&lt;h1 id=&quot;第三章&quot;&gt;&lt;a href=&quot;#第三章&quot; class=&quot;headerlink&quot; title=&quot;第三章&quot;&gt;&lt;/a&gt;第三章&lt;/h1&gt;&lt;p&gt;前一章中，我们解释了如何建立一个 Django 项目并启动 Django 开发服务器。 在这一章，你将会学到用Django创建动态网页的基本知识。&lt;/p&gt;
&lt;h3 id=&quot;你的第一个基于Django的页面：-Hello-World&quot;&gt;&lt;a href=&quot;#你的第一个基于Django的页面：-Hello-World&quot; class=&quot;headerlink&quot; title=&quot;你的第一个基于Django的页面： Hello World&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;你的第一个基于Django的页面： Hello World&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;正如我们的第一个目标，创建一个网页，用来输出这个著名的示例信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hello world.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你曾经发布过Hello world页面，但是没有使用网页框架，只是简单的在hello.html文本文件中输入Hello World，然后上传到任意的一个网页服务器上。 注意，在这个过程中，你已经说明了两个关于这个网页的关键信息： 它包括（字符串 “Hello world”）和它的URL( &lt;a href=&quot;http://www.example.com/hello.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.com/hello.html&lt;/a&gt; , 如果你把文件放在子目录，也可能是 &lt;a href=&quot;http://www.example.com/files/hello.html)。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.com/files/hello.html)。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Django，你会用不同的方法来说明这两件事 页面的内容是靠view function（视图函数） 来产生，URL定义在 URLconf 中。首先，我们先写一个Hello World视图函数。&lt;/p&gt;
&lt;h3 id=&quot;第一份视图：&quot;&gt;&lt;a href=&quot;#第一份视图：&quot; class=&quot;headerlink&quot; title=&quot;第一份视图：&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;第一份视图：&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;在上一章使用django-admin.py startproject制作的mysite文件夹中，创建一个叫做views.py的空文件。这个Python模块将包含这一章的视图。 请留意，Django对于view.py的文件命名没有特别的要求，它不在乎这个文件叫什么。但是根据约定，把它命名成view.py是个好主意，这样有利于其他开发者读懂你的代码，正如你很容易的往下读懂本文。&lt;/p&gt;
&lt;p&gt;我们的Hello world视图非常简单。 这些是完整的函数和导入声明，你需要输入到views.py文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.http import HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def hello(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(&amp;quot;Hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们逐行逐句地分析一遍这段代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先，我们从 django.http 模块导入（import） HttpResponse 类。参阅附录 H 了解更多关于 HttpRequest 和 HttpResponse 的细节。 我们需要导入这些类，因为我们会在后面用到。&lt;/p&gt;
&lt;p&gt;接下来，我们定义一个叫做hello 的视图函数。&lt;/p&gt;
&lt;p&gt;每个视图函数至少要有一个参数，通常被叫作request。 这是一个触发这个视图、包含当前Web请求信息的对象，是类django.http.HttpRequest的一个实例。在这个示例中，我们虽然不用request做任何事情，然而它仍必须是这个视图的第一个参数。&lt;/p&gt;
&lt;p&gt;注意视图函数的名称并不重要；并不一定非得以某种特定的方式命名才能让 Django 识别它。 在这里我们把它命名为：hello，是因为这个名称清晰的显示了视图的用意。同样地，你可以用诸如：hello_wonderful_beautiful_world，这样难看的短句来给它命名。 在下一小节（Your First URLconf），将告诉你Django是如何找到这个函数的。&lt;/p&gt;
&lt;p&gt;这个函数只有简单的一行代码： 它仅仅返回一个HttpResponse对象，这个对象包含了文本“Hello world”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里主要讲的是： 一个视图就是Python的一个函数。这个函数第一个参数的类型是HttpRequest；它返回一个HttpResponse实例。为了使一个Python的函数成为一个Django可识别的视图，它必须满足这两个条件。 （也有例外，但是我们稍后才会接触到。&lt;/p&gt;
&lt;h3 id=&quot;你的第一个URLconf&quot;&gt;&lt;a href=&quot;#你的第一个URLconf&quot; class=&quot;headerlink&quot; title=&quot;你的第一个URLconf&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;你的第一个URLconf&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;现在，如果你再运行：python manage.py runserver，你还将看到Django的欢迎页面，而看不到我们刚才写的Hello world显示页面。 那是因为我们的mysite项目还对hello视图一无所知。我们需要通过一个详细描述的URL来显式的告诉它并且激活这个视图。 （继续我们刚才类似发布静态HTML文件的例子。现在我们已经创建了HTML文件，但还没有把它上传至服务器的目录。）为了绑定视图函数和URL，我们使用URLconf。&lt;/p&gt;
&lt;p&gt;URLconf 就像是 Django 所支撑网站的目录。 它的本质是 URL 模式以及要为该 URL 模式调用的视图函数之间的映射表。 你就是以这种方式告诉 Django，对于这个 URL 调用这段代码，对于那个 URL 调用那段代码。 例如，当用户访问/foo/时，调用视图函数foo_view()，这个视图函数存在于Python模块文件view.py中。&lt;/p&gt;
&lt;p&gt;前一章中执行 django-admin.py startproject 时，该脚本会自动为你建了一份 URLconf（即 urls.py 文件）。 默认的urls.py会像下面这个样子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Uncomment the next two lines to enable the admin:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# from django.contrib import admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# admin.autodiscover()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Example:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # (r&amp;apos;^mysite/&amp;apos;, include(&amp;apos;mysite.foo.urls&amp;apos;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Uncomment the admin/doc line below and add &amp;apos;django.contrib.admindocs&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # to INSTALLED_APPS to enable admin documentation:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # (r&amp;apos;^admin/doc/&amp;apos;, include(&amp;apos;django.contrib.admindocs.urls&amp;apos;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # Uncomment the next line to enable the admin:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # (r&amp;apos;^admin/&amp;apos;, include(admin.site.urls)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认的URLconf包含了一些被注释起来的Django中常用的功能，仅仅只需去掉这些注释就可以开启这些功能. 下面是URLconf中忽略被注释的行后的实际内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让我们逐行解释一下代码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;第一行导入django.conf.urls.defaults下的所有模块，它们是Django URLconf的基本构造。 这包含了一个patterns函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二行调用 patterns() 函数并将返回结果保存到 urlpatterns 变量。patterns函数当前只有一个参数—一个空的字符串。 （这个字符串可以被用来表示一个视图函数的通用前缀。具体我们将在第八章里面介绍。）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前应该注意是 urlpatterns 变量， Django 期望能从 ROOT_URLCONF 模块中找到它。 该变量定义了 URL 以及用于处理这些 URL 的代码之间的映射关系。 默认情况下，URLconf 所有内容都被注释起来了——Django 应用程序还是白版一块。 （注：那是上一节中Django怎么知道显示欢迎页面的原因。 如果 URLconf 为空，Django 会认定你才创建好新项目，因此也就显示那种信息。&lt;/p&gt;
&lt;p&gt;如果想在URLconf中加入URL和view，只需增加映射URL模式和view功能的Python tuple即可. 这里演示如何添加view中hello功能.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from mysite.views import hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^hello/$&amp;apos;, hello),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请留意：为了简洁，我们移除了注释代码。 如果你喜欢的话，你可以保留那些行。）&lt;/p&gt;
&lt;p&gt;我们做了两处修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先，我们从模块 (在 Python 的 import 语法中， mysite/views.py 转译为 mysite.views ) 中引入了 hello 视图。 （这假设mysite/views.py在你的Python搜索路径上。关于搜索路径的解释，请参照下文。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接下来，我们为urlpatterns加上一行： (‘^hello/$’, hello), 这行被称作URLpattern，它是一个Python的元组。元组中第一个元素是模式匹配字符串（正则表达式）；第二个元素是那个模式将使用的视图函数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单来说，我们只是告诉 Django，所有指向 URL /hello/ 的请求都应由 hello 这个视图函数来处理。&lt;/p&gt;
&lt;p&gt;Python 搜索路径&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Python&lt;/em&gt; 搜索路径 就是使用 import 语句时，Python 所查找的系统目录清单。&lt;/p&gt;
&lt;p&gt;举例来说，假定你将 Python 路径设置为 &lt;/p&gt;
&lt;font color=&quot;#008000&quot;&gt;[‘’,’/usr/lib/python2.4/site-packages’,’/home/username/djcode/‘] 。如果执行代码 from foo import bar &lt;/font&gt;，Python 将会首先在当前目录查找 foo.py 模块( Python 路径第一项的空字符串表示当前目录)。 如果文件不存在，Python将查找 &lt;font color=&quot;#008000&quot;&gt;/usr/lib/python2.4/site-packages/foo.py &lt;/font&gt;文件。&lt;br&gt;&lt;br&gt;如果你想看Python搜索路径的值，运行Python交互解释器，然后输入：&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print sys.path&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;通常，你不必关心 Python 搜索路径的设置。 Python 和 Django 会在后台自动帮你处理好。&lt;br&gt;&lt;br&gt;讨论一下URLpattern的语法是值得的，因为它不是显而易见的。 虽然我们想匹配地址/hello/，但是模式看上去与这有点差别。 这就是为什么：&lt;br&gt;&lt;br&gt;&amp;gt; Django在检查URL模式前，移除每一个申请的URL开头的斜杠(/)。 这意味着我们为/hello/写URL模式不用包含斜杠(/)。（刚开始，这样可能看起来不直观，但这样的要求简化了许多工作，如URL模式内嵌，我们将在第八章谈及。）&lt;br&gt;&lt;br&gt;&amp;gt; 模式包含了一个尖号(^)和一个美元符号($)。这些都是正则表达式符号，并且有特定的含义： 上箭头要求表达式对字符串的头部进行匹配，美元符号则要求表达式对字符串的尾部进行匹配。&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; 最好还是用范例来说明一下这个概念。 如果我们用尾部不是$的模式’^hello/’，那么任何以/hello/开头的URL将会匹配，例如：/hello/foo 和/hello/bar，而不仅仅是/hello/。类似地，如果我们忽略了尖号(^)，即’hello/$’，那么任何以hello/结尾的URL将会匹配，例如：/foo/bar/hello/。如果我们简单使用hello/，即没有^开头和$结尾，那么任何包含hello/的URL将会匹配，如：/foo/hello/bar。因此，我们使用这两个符号以确保只有/hello/匹配，不多也不少。&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; 你大多数的URL模式会以^开始、以$结束，但是拥有复杂匹配的灵活性会更好。&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; 你可能会问：如果有人申请访问/hello（尾部没有斜杠/）会怎样。 因为我们的URL模式要求尾部有一个斜杠(/)，那个申请URL将不匹配。 然而，默认地，任何不匹配或尾部没有斜杠(/)的申请URL，将被重定向至尾部包含斜杠的相同字眼的URL。 （这是受配置文件setting中APPEND_SLASH项控制的，参见附件D。）&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; 如果你是喜欢所有URL都以’/’结尾的人（Django开发者的偏爱），那么你只需要在每个URL后添加斜杠，并且设置”APPEND_SLASH”为”True”. 如果不喜欢URL以斜杠结尾或者根据每个URL来决定，那么需要设置”APPEND_SLASH”为”False”,并且根据你自己的意愿来添加结尾斜杠/在URL模式后.&lt;br&gt;&lt;br&gt;另外需要注意的是，我们把hello视图函数作为一个对象传递，而不是调用它。 这是 Python (及其它动态语言的) 的一个重要特性： 函数是一级对象（first-class objects）， 也就是说你可以像传递其它变量一样传递它们。 很酷吧？&lt;br&gt;&lt;br&gt;启动Django开发服务器来测试修改好的 URLconf, 运行命令行 python manage.py runserver 。 (如果你让它一直运行也可以，开发服务器会自动监测代码改动并自动重新载入，所以不需要手工重启） 开发服务器的地址是 &lt;a href=&quot;http://127.0.0.1:8000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt; ，打开你的浏览器访问 &lt;a href=&quot;http://127.0.0.1:8000/hello/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/hello/&lt;/a&gt; 。 你就可以看到输出结果了。 开发服务器将自动检测Python代码的更改来做必要的重新加载， 所以你不需要重启Server在代码更改之后。服务器运行地址&lt;code&gt;http://127.0.0.1:8000/&lt;/code&gt; ，所以打开浏览器直接输入&lt;code&gt;http://127.0.0.1:8000/hello/&lt;/code&gt; ，你将看到由你的Django视图输出的Hello world。&lt;br&gt;&lt;br&gt;万岁！ 你已经创建了第一个Django的web页面。&lt;br&gt;&lt;br&gt;正则表达式&lt;br&gt;&lt;br&gt;正则表达式 (或 regexes ) 是通用的文本模式匹配的方法。 Django URLconfs 允许你 使用任意的正则表达式来做强有力的URL映射，不过通常你实际上可能只需要使用很少的一 部分功能。 这里是一些基本的语法。&lt;br&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;        &lt;th&gt;符号&lt;/th&gt;&lt;br&gt;        &lt;th&gt;匹配&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;. (dot) &lt;/td&gt;&lt;td&gt;任意单一字符&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;\d&lt;/td&gt;&lt;td&gt;任意一位数字&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;[A-Z] &lt;/td&gt;A 到 Z中任意一个字符（大写）&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;[a-z] &lt;/td&gt;a 到 z中任意一个字符（小写）&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;[A-Za-z] &lt;/td&gt;&lt;td&gt;a 到 z中任意一个字符（不区分大小写）&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;+ &lt;/td&gt;&lt;td&gt;匹配一个或更多 (例如, \d+ 匹配一个或 多个数字字符)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;[^/]+  &lt;/td&gt;一个或多个不为‘/’的字符&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;&lt;em&gt; &lt;/em&gt;&lt;/td&gt;&lt;td&gt;零个或一个之前的表达式（例如：\d? 匹配零个或一个数字）&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;匹配0个或更多 (例如, \d* 匹配0个 或更多数字字符)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;td&gt;{1,3}&lt;/td&gt;&lt;td&gt;介于一个和三个（包含）之前的表达式（例如，\d{1,3}匹配一个或两个或三个数字）&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&lt;br&gt;有关正则表达式的更多内容，请访问 &lt;a href=&quot;http://www.djangoproject.com/r/python/re-module/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.djangoproject.com/r/python/re-module/&lt;/a&gt;.&lt;br&gt;&lt;br&gt;### &lt;font color=&quot;#008000&quot;&gt;关于“404错误”的快速参考&lt;/font&gt;&lt;br&gt;目前，我们的URLconf只定义了一个单独的URL模式： 处理URL /hello/ 。 当请求其他URL会怎么样呢？&lt;br&gt;&lt;br&gt;让我们试试看，运行Django开发服务器并访问类似 &lt;a href=&quot;http://127.0.0.1:8000/goodbye/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/goodbye/&lt;/a&gt; 或者 &lt;a href=&quot;http://127.0.0.1:8000/hello/subdirectory/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/hello/subdirectory/&lt;/a&gt; ，甚至 &lt;a href=&quot;http://127.0.0.1:8000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/&lt;/a&gt; (网站根目录)。 你将会看到一个 “Page not found” 页面（图 3－2）。 因为你的URL申请在URLconf中没有定义，所以Django显示这条信息。&lt;br&gt;&lt;br&gt;Djangos 404 页面截屏.&lt;br&gt;&lt;br&gt;图3-1： Django的404 Error页&lt;br&gt;&lt;br&gt;这个页面比原始的404错误信息更加实用。 它同时精确的告诉你Django调用哪个URLconf及其包含的每个模式。 这样，你应该能了解到为什么这个请求会抛出404错误。&lt;br&gt;&lt;br&gt;当然，这些敏感的信息应该只呈现给你－开发者。 如果是部署到了因特网上的站点就不应该暴露 这些信息。 出于这个考虑，这个“Page not found”页面只会在 调试模式（debug mode） 下 显示。 我们将在以后说明怎么关闭调试模式。&lt;br&gt;&lt;br&gt;### &lt;font color=&quot;#008000&quot;&gt;关于网站根目录的快速参考。&lt;/font&gt;

&lt;p&gt;在最后一节，如果你想通过&lt;a href=&quot;http://127.0.0.1:8000/看网站根目录你将看到一个404错误消息。Django不会增加任何东西在网站根目录，在任何情况下这个URL都不是特殊的&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/看网站根目录你将看到一个404错误消息。Django不会增加任何东西在网站根目录，在任何情况下这个URL都不是特殊的&lt;/a&gt; 就像在URLconf中的其他条目一样，它也依赖于指定给它的URL模式.&lt;/p&gt;
&lt;p&gt;尽管匹配网站根目录的URL模式不能想象，但是还是值得提一下的. 当为网站根目录实现一个视图，你需要使用URL模式&lt;code&gt;‘^$’&lt;/code&gt; , 它代表一个空字符串。 例如:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from mysite.views import hello, my_homepage_view&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^$&amp;apos;, my_homepage_view),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Django是怎么处理请求的&quot;&gt;&lt;a href=&quot;#Django是怎么处理请求的&quot; class=&quot;headerlink&quot; title=&quot;Django是怎么处理请求的&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Django是怎么处理请求的&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;在继续我们的第二个视图功能之前，让我们暂停一下去了解更多一些有关Django是怎么工作的知识. 具体地说，当你通过在浏览器里敲&lt;a href=&quot;http://127.0.0.1:8000/hello/来访问Hello&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/hello/来访问Hello&lt;/a&gt; world消息得时候，Django在后台有些什么动作呢？&lt;/p&gt;
&lt;p&gt;所有均开始于setting文件。当你运行python manage.py runserver，脚本将在于manage.py同一个目录下查找名为setting.py的文件。这个文件包含了所有有关这个Django项目的配置信息，均大写： TEMPLATE_DIRS , DATABASE_NAME , 等. 最重要的设置时ROOT_URLCONF，它将作为URLconf告诉Django在这个站点中那些Python的模块将被用到&lt;/p&gt;
&lt;p&gt;还记得什么时候django-admin.py startproject创建文件settings.py和urls.py吗？自动创建的settings.py包含一个ROOT_URLCONF配置用来指向自动产生的urls.py. 打开文件settings.py你将看到如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ROOT_URLCONF = &amp;apos;mysite.urls&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;相对应的文件是mysite/urls.py&lt;/p&gt;
&lt;p&gt;当访问 URL /hello/ 时，Django 根据 ROOT_URLCONF 的设置装载 URLconf 。 然后按顺序逐个匹配URLconf里的URLpatterns，直到找到一个匹配的。 当找到这个匹配 的URLpatterns就调用相关联的view函数，并把 HttpRequest 对象作为第一个参数。 （稍后再给出 HttpRequest 的更多信息） （我们将在后面看到HttpRequest的标准）&lt;/p&gt;
&lt;p&gt;正如我们在第一个视图例子里面看到的，一个视图功能必须返回一个HttpResponse。 一旦做完，Django将完成剩余的转换Python的对象到一个合适的带有HTTP头和body的Web Response，（例如，网页内容）。&lt;/p&gt;
&lt;p&gt;总结一下：&lt;/p&gt;
&lt;p&gt;1.进来的请求转入/hello/.&lt;/p&gt;
&lt;p&gt;2.Django通过在ROOT_URLCONF配置来决定根URLconf.&lt;/p&gt;
&lt;p&gt;3.Django在URLconf中的所有URL模式中，查找第一个匹配/hello/的条目。&lt;/p&gt;
&lt;p&gt;4.如果找到匹配，将调用相应的视图函数&lt;/p&gt;
&lt;p&gt;5.视图函数返回一个HttpResponse&lt;/p&gt;
&lt;p&gt;6.Django转换HttpResponse为一个适合的HTTP response， 以Web page显示出来&lt;/p&gt;
&lt;p&gt;你现在知道了怎么做一个 Django-powered 页面了，真的很简单，只需要写视图函数并用 URLconfs把它们和URLs对应起来。 你可能会认为用一系列正则表达式将URLs映射到函数也许会比较慢，但事实却会让你惊讶。&lt;/p&gt;
&lt;h3 id=&quot;第二个视图：-动态内容&quot;&gt;&lt;a href=&quot;#第二个视图：-动态内容&quot; class=&quot;headerlink&quot; title=&quot;第二个视图： 动态内容&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;第二个视图： 动态内容&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;我们的Hello world视图是用来演示基本的Django是如何工作的，但是它不是一个动态网页的例子，因为网页的内容一直是一样的. 每次去查看/hello/，你将会看到相同的内容，它类似一个静态HTML文件。&lt;/p&gt;
&lt;p&gt;我们的第二个视图，将更多的放些动态的东西例如当前日期和时间显示在网页上 这将非常好，简单的下一步，因为它不引入了数据库或者任何用户的输入，仅仅是输出显示你的服务器的内部时钟. 它仅仅有限度的比Helloworld刺激一些，但是它将演示一些新的概念&lt;/p&gt;
&lt;p&gt;这个视图需要做两件事情： 计算当前日期和时间，并返回包含这些值的HttpResponse 如果你对python很有经验，那肯定知道在python中需要利用datetime模块去计算时间 下面演示如何去使用它：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; now = datetime.datetime.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime(2008, 12, 13, 14, 9, 39, 2731)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2008-12-13 14:09:39.002731&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码很简单，并没有涉及Django。 它仅仅是Python代码。 需要强调的是，你应该意识到哪些是纯Python代码，哪些是Django特性代码。 （见上） 因为你学习了Django，希望你能将Django的知识应用在那些不一定需要使用Django的项目上。&lt;/p&gt;
&lt;p&gt;为了让Django视图显示当前日期和时间，我们仅需要把语句：datetime.datetime.now()放入视图函数，然后返回一个HttpResponse对象即可。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.http import HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def current_datetime(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    now = datetime.datetime.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;It is now %s.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot; % now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(html)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正如我们的hello函数一样，这个函数也保存在view.py中。为了简洁，上面我们隐藏了hello函数。下面是完整的view.py文件内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.http import HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def hello(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(&amp;quot;Hello world&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def current_datetime(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    now = datetime.datetime.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;It is now %s.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot; % now&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(html)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（从现在开始，如非必要，本文不再重复列出先前的代码。 你应该懂得识别哪些是新代码，哪些是先前的。） （见上）&lt;/p&gt;
&lt;p&gt;让我们分析一下改动后的views.py：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在文件顶端，我们添加了一条语句：import datetime。这样就可以计算日期了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;函数中的第一行代码计算当前日期和时间，并以 datetime.datetime 对象的形式保存为局部变量 now 。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;函数的第二行代码用 Python 的格式化字符串（format-string）功能构造了一段 HTML 响应。 字符串中的%s是占位符，字符串后面的百分号表示用它后面的变量now的值来代替%s。变量%s是一个datetime.datetime对象。它虽然不是一个字符串，但是%s（格式化字符串）会把它转换成字符串，如：2008-12-13 14:09:39.002731。这将导致HTML的输出字符串为：It is now 2008-12-13 14:09:39.002731。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;（目前HTML是有错误的，但我们这样做是为了保持例子的简短。）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最后，正如我们刚才写的hello函数一样，视图返回一个HttpResponse对象，它包含生成的响应。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加上述代码之后，还要在urls.py中添加URL模式，以告诉Django由哪一个URL来处理这个视图。 用/time/之类的字眼易于理解：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from mysite.views import hello, current_datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^hello/$&amp;apos;, hello),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/$&amp;apos;, current_datetime),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里，我们修改了两个地方。 首先，在顶部导入current_datetime函数； 其次，也是比较重要的：添加URL模式来映射URL中的/time/和新视图。 理解了么？&lt;/p&gt;
&lt;p&gt;写好视图并且更新URLconf之后，运行命令python manage.py runserver以启动服务，在浏览器中输入&lt;a href=&quot;http://127.0.0.1:8000/time/。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/。&lt;/a&gt; 你将看到当前的日期和时间。&lt;/p&gt;
&lt;h3 id=&quot;Django时区&quot;&gt;&lt;a href=&quot;#Django时区&quot; class=&quot;headerlink&quot; title=&quot;Django时区&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Django时区&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;视乎你的机器，显示的日期与时间可能和实际的相差几个小时。 这是因为Django是有时区意识的，并且默认时区为America/Chicago。 （它必须有个值，它的默认值是Django的诞生地：美国/芝加哥）如果你处在别的时区，你需要在settings.py文件中更改这个值。请参见它里面的注释，以获得最新世界时区列表。&lt;/p&gt;
&lt;h3 id=&quot;URL配置和松耦合&quot;&gt;&lt;a href=&quot;#URL配置和松耦合&quot; class=&quot;headerlink&quot; title=&quot;URL配置和松耦合&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;URL配置和松耦合&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;现在是好时机来指出Django和URL配置背后的哲学： 松耦合 原则。 简单的说，松耦合是一个 重要的保证互换性的软件开发方法。&lt;/p&gt;
&lt;p&gt;Django的URL配置就是一个很好的例子。 在Django的应用程序中，URL的定义和视图函数之间是松 耦合的，换句话说，决定URL返回哪个视图函数和实现这个视图函数是在两个不同的地方。 这使得 开发人员可以修改一块而不会影响另一块。&lt;/p&gt;
&lt;p&gt;例如，考虑一下current_datetime视图。 如果我们想把它的URL 从原来的 /time/ 改变到 /currenttime/ ，我们只需要快速的修改一下URL配置即可， 不用担心这个函数的内部实现。 同样的，如果我们想要修改这个函数的内部实现也不用担心会影响 到对应的URL。&lt;/p&gt;
&lt;p&gt;此外，如果我们想要输出这个函数到 一些 URL， 我们只需要修改URL配置而不用 去改动视图的代码。 在这个例子里，current_datetime被两个URL使用。 这是一个故弄玄虚的例子，但这个方法迟早会用得上。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^hello/$&amp;apos;, hello),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/$&amp;apos;, current_datetime),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^another-time-page/$&amp;apos;, current_datetime),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;URLconf和视图是松耦合的。 我们将在本书中继续给出这一重要哲学的相关例子。&lt;/p&gt;
&lt;h3 id=&quot;第三个视图-动态URL&quot;&gt;&lt;a href=&quot;#第三个视图-动态URL&quot; class=&quot;headerlink&quot; title=&quot;第三个视图 动态URL&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;第三个视图 动态URL&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;在我们的&lt;code&gt;current_datetime&lt;/code&gt; 视图范例中，尽管内容是动态的，但是URL （ /time/ ）是静态的。 在 大多数动态web应用程序，URL通常都包含有相关的参数。 举个例子，一家在线书店会为每一本书提供一个URL，如：/books/243/、/books/81196/。&lt;/p&gt;
&lt;p&gt;让我们创建第三个视图来显示当前时间和加上时间偏差量的时间，设计是这样的： /time/plus/1/ 显示当前时间＋1个小时的页面 /time/plus/2/ 显示当前时间＋2个小时的页面 /time/plus/3/ 显示当前时间＋3个小时的页面，以此类推。&lt;/p&gt;
&lt;p&gt;新手可能会考虑写不同的视图函数来处理每个时间偏差量，URL配置看起来就象这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/$&amp;apos;, current_datetime),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/plus/1/$&amp;apos;, one_hour_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/plus/2/$&amp;apos;, two_hours_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/plus/3/$&amp;apos;, three_hours_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&amp;apos;^time/plus/4/$&amp;apos;, four_hours_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很明显，这样处理是不太妥当的。 不但有很多冗余的视图函数，而且整个应用也被限制了只支持 预先定义好的时间段，2小时，3小时，或者4小时。 如果哪天我们要实现 5 小时，我们就 不得不再单独创建新的视图函数和配置URL，既重复又混乱。 我们需要在这里做一点抽象，提取 一些共同的东西出来。&lt;/p&gt;
&lt;p&gt;关于漂亮URL的一点建议&lt;/p&gt;
&lt;p&gt;如果你有其它web平台的开发经验（如PHP或Java），你可能会想：嘿！让我们用查询字符串参数吧！ 就像/time/plus?hours=3里面的小时应该在查询字符串中被参数hours指定（问号后面的是参数）。&lt;/p&gt;
&lt;p&gt;你 可以 在Django里也这样做 (如果你真的想要这样做，我们稍后会告诉你怎么做）， 但是Django的一个核心理念就是URL必须看起来漂亮。 URL /time/plus/3/ 更加清晰， 更简单，也更有可读性，可以很容易的大声念出来，因为它是纯文本，没有查询字符串那么 复杂。 漂亮的URL就像是高质量的Web应用的一个标志。&lt;/p&gt;
&lt;p&gt;Django的URL配置系统可以使你很容易的设置漂亮的URL，而尽量不要考虑它的 反面 。&lt;/p&gt;
&lt;p&gt;那么，我们如何设计程序来处理任意数量的时差？ 答案是：使用通配符（wildcard URLpatterns）。正如我们之前提到过，一个URL模式就是一个正则表达式。因此，这里可以使用d+来匹配1个以上的数字。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (r&amp;apos;^time/plus/\d+/$&amp;apos;, hours_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里使用# …来表示省略了其它可能存在的URL模式定义。 （见上）&lt;/p&gt;
&lt;p&gt;这个URL模式将匹配类似 /time/plus/2/ , /time/plus/25/ ,甚至 /time/plus/100000000000/ 的任何URL。 更进一步，让我们把它限制在最大允许99个小时， 这样我们就只允许一个或两个数字，正则表达式的语法就是 \d{1,2} :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(r&amp;apos;^time/plus/\d{1,2}/$&amp;apos;, hours_ahead),
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;备注&lt;/p&gt;
&lt;p&gt;在建造Web应用的时候，尽可能多考虑可能的数据输入是很重要的，然后决定哪些我们可以接受。 在这里我们就设置了99个小时的时间段限制。&lt;/p&gt;
&lt;p&gt;另外一个重点，正则表达式字符串的开头字母“r”。 它告诉Python这是个原始字符串，不需要处理里面的反斜杠（转义字符）。 在普通Python字符串中，反斜杠用于特殊字符的转义。比如n转义成一个换行符。 当你用r把它标示为一个原始字符串后，Python不再视其中的反斜杠为转义字符。也就是说，“n”是两个字符串：“”和“n”。由于反斜杠在Python代码和正则表达式中有冲突，因此建议你在Python定义正则表达式时都使用原始字符串。 从现在开始，本文所有URL模式都用原始字符串。&lt;/p&gt;
&lt;p&gt;现在我们已经设计了一个带通配符的URL，我们需要一个方法把它传递到视图函数里去，这样 我们只用一个视图函数就可以处理所有的时间段了。 我们使用圆括号把参数在URL模式里标识 出来。 在这个例子中，我们想要把这些数字作为参数，用圆括号把 \d{1,2} 包围起来：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(r&amp;apos;^time/plus/(\d{1,2})/$&amp;apos;, hours_ahead),
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你熟悉正则表达式，那么你应该已经了解，正则表达式也是用圆括号来从文本里 提取 数据的。&lt;/p&gt;
&lt;p&gt;最终的URLconf包含上面两个视图，如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls.defaults import *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from mysite.views import hello, current_datetime, hours_ahead&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = patterns(&amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (r&amp;apos;^hello/$&amp;apos;, hello),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (r&amp;apos;^time/$&amp;apos;, current_datetime),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (r&amp;apos;^time/plus/(\d&amp;#123;1,2&amp;#125;)/$&amp;apos;, hours_ahead),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在开始写 hours_ahead 视图。&lt;/p&gt;
&lt;p&gt;编码次序&lt;/p&gt;
&lt;p&gt;这个例子中，我们先写了URLpattern ，然后是视图，但是在前面的例子中， 我们先写了视图，然后是URLpattern 。 哪一种方式比较好？&lt;/p&gt;
&lt;p&gt;嗯，怎么说呢，每个开发者是不一样的。&lt;/p&gt;
&lt;p&gt;如果你是喜欢从总体上来把握事物（注： 或译为“大局观”）类型的人，你应该会想在项目开始 的时候就写下所有的URL配置。&lt;/p&gt;
&lt;p&gt;如果你从更像是一个自底向上的开发者，你可能更喜欢先写视图， 然后把它们挂接到URL上。 这同样是可以的。&lt;/p&gt;
&lt;p&gt;最后，取决与你喜欢哪种技术，两种方法都是可以的。 (见上)&lt;/p&gt;
&lt;p&gt;hours_ahead 和我们以前写的 current_datetime 很象，关键的区别在于： 它多了一个额外参数，时间差。 以下是view代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.http import Http404, HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def hours_ahead(request, offset):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        offset = int(offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    except ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        raise Http404()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dt = datetime.datetime.now() + datetime.timedelta(hours=offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;In %s hour(s), it will be %s.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot; % (offset, dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(html)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让我们逐行分析一下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;视图函数, hours_ahead , 有 两个 参数: request 和 offset . (见上)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request 是一个 HttpRequest 对象, 就像在 current_datetime 中一样. 再说一次好了: 每一个视图 总是 以一个 HttpRequest 对象作为 它的第一个参数。 (见上)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    offset 是从匹配的URL里提取出来的。 例如：如果请求URL是/time/plus/3/，那么offset将会是3；如果请求URL是/time/plus/21/，那么offset将会是21。请注意：捕获值永远都是字符串（string）类型，而不会是整数（integer）类型，即使这个字符串全由数字构成（如：“21”）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    （从技术上来说，捕获值总是Unicode objects，而不是简单的Python字节串，但目前不需要担心这些差别。）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    在这里我们命名变量为 offset ，你也可以任意命名它，只要符合Python 的语法。 变量名是无关紧要的，重要的是它的位置，它是这个函数的第二个 参数 (在 request 的后面）。 你还可以使用关键字来定义它，而不是用 位置。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我们在这个函数中要做的第一件事情就是在 offset 上调用 int() . 这会把这个字符串值转换为整数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请留意：如果你在一个不能转换成整数类型的值上调用int()，Python将抛出一个ValueError异常。如：int(‘foo’)。在这个例子中，如果我们遇到ValueError异常，我们将转为抛出django.http.Http404异常——正如你想象的那样：最终显示404页面（提示信息：页面不存在）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;机灵的读者可能会问： 我们在URL模式中用正则表达式(d&amp;#123;1,2&amp;#125;)约束它，仅接受数字怎么样？这样无论如何，offset都是由数字构成的。 答案是：我们不会这么做，因为URLpattern提供的是“适度但有用”级别的输入校验。万一这个视图函数被其它方式调用，我们仍需自行检查ValueError。 实践证明，在实现视图函数时，不臆测参数值的做法是比较好的。 松散耦合，还记得么？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;下一行，计算当前日期/时间，然后加上适当的小时数。 在current_datetime视图中，我们已经见过datetime.datetime.now()。这里新的概念是执行日期/时间的算术操作。我们需要创建一个datetime.timedelta对象和增加一个datetime.datetime对象。 结果保存在变量dt中。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这一行还说明了，我们为什么在offset上调用int()——datetime.timedelta函数要求hours参数必须为整数类型。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这行和前面的那行的的一个微小差别就是，它使用带有两个值的Python的格式化字符串功能， 而不仅仅是一个值。 因此，在字符串中有两个 %s 符号和一个以进行插入的值的元组： (offset, dt) 。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最终，返回一个HTML的HttpResponse。 如今，这种方式已经过时了。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在完成视图函数和URL配置编写后，启动Django开发服务器，用浏览器访问 &lt;a href=&quot;http://127.0.0.1:8000/time/plus/3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/plus/3/&lt;/a&gt; 来确认它工作正常。 然后是 &lt;a href=&quot;http://127.0.0.1:8000/time/plus/5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/plus/5/&lt;/a&gt; 。再然后是 &lt;a href=&quot;http://127.0.0.1:8000/time/plus/24/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/plus/24/&lt;/a&gt; 。最后，访问 &lt;a href=&quot;http://127.0.0.1:8000/time/plus/100/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/plus/100/&lt;/a&gt; 来检验URL配置里设置的模式是否只 接受一个或两个数字；Django会显示一个 Page not found error 页面, 和以前看到的 404 错误一样。 访问URL &lt;a href=&quot;http://127.0.0.1:8000/time/plus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8000/time/plus/&lt;/a&gt; (没有 定义时间差) 也会抛出404错误。&lt;/p&gt;
&lt;h3 id=&quot;Django-漂亮的出错页面&quot;&gt;&lt;a href=&quot;#Django-漂亮的出错页面&quot; class=&quot;headerlink&quot; title=&quot;Django 漂亮的出错页面&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;Django 漂亮的出错页面&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;花几分钟时间欣赏一下我们写好的Web应用程序，然后我们再来搞点小破坏。 我们故意在 views.py 文件中引入一项 Python 错误，注释掉 hours_ahead 视图中的 offset = int(offset) 一行。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def hours_ahead(request, offset):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #     offset = int(offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # except ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #     raise Http404()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dt = datetime.datetime.now() + datetime.timedelta(hours=offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;In %s hour(s), it will be %s.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot; % (offset, dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(html)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动开发服务器，然后访问 /time/plus/3/ 。你会看到一个包含大量信息的出错页，最上面 的一条 TypeError 信息是： “unsupported type for timedelta hours component:  unicode” .&lt;/p&gt;
&lt;p&gt;怎么回事呢？ 是的， datetime.timedelta 函数要求 hours 参数必须为整型， 而我们注释掉了将 offset 转为整型的代码。 这样导致 datetime.timedelta 弹出 TypeError 异常。&lt;/p&gt;
&lt;p&gt;这个例子是为了展示 Django 的出错页面。 我们来花些时间看一看这个出错页，了解一下其中 给出了哪些信息。&lt;/p&gt;
&lt;p&gt;以下是值得注意的一些要点：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在页面顶部，你可以得到关键的异常信息： 异常数据类型、异常的参数 (如本例中的 &amp;quot;unsupported type&amp;quot; ）、在哪个文件中引发了异常、出错的行号等等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在关键异常信息下方，该页面显示了对该异常的完整 Python 追踪信息。 这类似于你在 Python 命令行解释器中获得的追溯信息，只不过后者更具交互性。 对栈中的每一帧，Django 均显示了其文件名、函数或方法名、行号及该行源代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;点击该行代码 (以深灰色显示)，你可以看到出错行的前后几行，从而得知相关上下文情况。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;点击栈中的任何一帧的“Local vars”可以看到一个所有局部变量的列表，以及在出错 那一帧时它们的值。 这些调试信息相当有用。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注意“Traceback”下面的“Switch to copy-and-paste view”文字。 点击这些字，追溯会 切换另一个视图，它让你很容易地复制和粘贴这些内容。 当你想同其他人分享这些异常 追溯以获得技术支持时（比如在 Django 的 IRC 聊天室或邮件列表中），可以使用它。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;你按一下下面的“Share this traceback on a public Web site”按钮，它将会完成这项工作。 点击它以传回追溯信息至http://www.dpaste.com/，在那里你可以得到一个单独的URL并与其他人分享你的追溯信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;接下来的“Request information”部分包含了有关产生错误的 Web 请求的大量信息： GET 和 POST、cookie 值、元数据（象 CGI 头）。 在附录H里给出了request的对象的 完整参考。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Request信息的下面，“Settings”列出了 Django 使用的具体配置信息。 （我们已经提及过ROOT_URLCONF，接下来我们将向你展示各式的Django设置。 附录D覆盖了所有可用的设置。）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Django 的出错页某些情况下有能力显示更多的信息，比如模板语法错误。 我们讨论 Django 模板系统时再说它们。 现在，取消 offset = int(offset) 这行的注释，让它重新正常 工作。&lt;/p&gt;
&lt;p&gt;不知道你是不是那种使用小心放置的 print 语句来帮助调试的程序员？ 你其实可以用 Django 出错页来做这些，而不用 print 语句。 在你视图的任何位置，临时插入一个 assert False 来触发出错页。 然后，你就可以看到局部变量和程序语句了。 这里有个使用hours_ahead视图的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def hours_ahead(request, offset):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        offset = int(offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    except ValueError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        raise Http404()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dt = datetime.datetime.now() + datetime.timedelta(hours=offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    assert False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html = &amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;In %s hour(s), it will be %s.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot; % (offset, dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(html)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，很显然这些信息很多是敏感的，它暴露了你 Python 代码的内部结构以及 Django 配置，在 Internet 上公开这信息是很愚蠢的。 不怀好意的人会尝试使用它攻击你的 Web 应用程序，做些下流之事。 因此，Django 出错信息仅在 debug 模式下才会显现。 我们稍后 说明如何禁用 debug 模式。 现在，你只要知道 Django 服务器在你开启它时默认运行在 debug 模式就行了。 （听起来很熟悉？ 页面没有发现错误，如前所述，工作正常。）&lt;/p&gt;
&lt;h3 id=&quot;下一章&quot;&gt;&lt;a href=&quot;#下一章&quot; class=&quot;headerlink&quot; title=&quot;下一章&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#008000&quot;&gt;&lt;a href=&quot;http://djangobook.py3k.cn/2.0/chapter04/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下一章&lt;/a&gt;&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;目前为止，我们已经写好了视图函数和硬编码的HTML。 在演示核心概念时，我们所作的是为了保持简单。但是在现实世界中，这差不多总是个坏主意。&lt;/p&gt;
&lt;p&gt;幸运的是，Django内建有一个简单有强大的模板处理引擎来让你分离两种工作： 下一章，我们将学习模板引擎。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第三章&quot;&gt;&lt;a href=&quot;#第三章&quot; class=&quot;headerlink&quot; title=&quot;第三章&quot;&gt;&lt;/a&gt;第三章&lt;/h1&gt;&lt;p&gt;前一章中，我们解释了如何建立一个 Django 项目并启动 Django 开发服务器。 在这一章，你将会学到用Django创建动态网
    
    </summary>
    
      <category term="Django book 2.0" scheme="http://www.lflxp.cn/categories/Django-book-2-0/"/>
    
    
      <category term="django" scheme="http://www.lflxp.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>mysqlfailover+vip高可用设想</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-29-mysqlfailover/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-29-mysqlfailover/</id>
    <published>2016-04-06T10:31:45.180Z</published>
    <updated>2016-04-06T11:29:31.731Z</updated>
    
    <content type="html">&lt;h4 id=&quot;MySQL-Auto-Failover-功能测试&quot;&gt;&lt;a href=&quot;#MySQL-Auto-Failover-功能测试&quot; class=&quot;headerlink&quot; title=&quot;MySQL Auto-Failover 功能测试&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ttlsa.com/mysql/the-mysql-auto-failover-function-test/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL Auto-Failover 功能测试&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;MySQL-Utilities-1-6-Manual-下载&quot;&gt;&lt;a href=&quot;#MySQL-Utilities-1-6-Manual-下载&quot; class=&quot;headerlink&quot; title=&quot;MySQL Utilities 1.6 Manual 下载&quot;&gt;&lt;/a&gt;MySQL Utilities 1.6 Manual &lt;a href=&quot;http://dev.mysql.com/downloads/utilities/1.6.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;mysqlfailover-Automatic-replication-health-monitoring-and-failover&quot;&gt;&lt;a href=&quot;#mysqlfailover-Automatic-replication-health-monitoring-and-failover&quot; class=&quot;headerlink&quot; title=&quot;mysqlfailover Automatic replication health monitoring and failover&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://dev.mysql.com/doc/mysql-utilities/1.5/en/mysqlfailover.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysqlfailover&lt;/a&gt; Automatic replication health monitoring and failover&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This utility permits users to perform replication health monitoring and automatic failover on a replication topology consisting of a master and its slaves. The utility is designed to run interactively or continuously refreshing the health information at periodic intervals. Its primary mission is to monitor the master for failure and when a failure occurs, execute failover to the best slave available. The utility accepts a list of slaves to be considered the candidate slave.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This utility is designed to work exclusively for servers that support global transaction identifiers (GTIDs) and have gtid_mode=ON. MySQL server versions 5.6.5 and higher support GTIDs. See Replication with Global Transaction Identifiers for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The user can specify the interval in seconds to use for detecting the master status and generating the health report using the --interval option. At each interval, the utility will check to see if the server is alive via a ping operation followed by a check of the connector to detect if the server is still reachable. The ping operation can be controlled with the --ping option (see below).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If the master is found to be offline or unreachable, the utility will execute one of the following actions based on the --failover-mode option value. The available values are:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto (default): Execute automatic failover to the list of candidates first and if no slaves are viable, continue to locate a viable candidate from the list of slaves. If no slaves are found to be a viable candidate, the utility will generate and error and exit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Once a candidate is found, the utility will conduct failover to the best slave. The command will test each candidate slave listed for the prerequisites. Once a candidate slave is elected, it is made a slave of each of the other slaves thereby collecting any transactions executed on other slaves but not the candidate. In this way, the candidate becomes the most up-to-date slave.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elect: This mode is the same as auto, except if no candidates specified in the list of candidate slaves are viable, then it does not check the remaining slaves, and instead generates an error and then exits.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail: This mode produces an error and does not failover when the master is downed. This mode is used to provide periodic health monitoring without the failover action taken.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;For all options that permit specifying multiple servers, the options require a comma-separated list of connection parameters in the following form (where the password, port, and socket are optional).:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;*user*&amp;gt;[:&amp;lt;*passwd*&amp;gt;]@&amp;lt;*host*&amp;gt;[:&amp;lt;*port*&amp;gt;][:&amp;lt;*socket*&amp;gt;] or &amp;lt;*login-path*&amp;gt;[:&amp;lt;*port*&amp;gt;][:&amp;lt;*socket*&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&quot;安装mysqlfailover&quot;&gt;&lt;a href=&quot;#安装mysqlfailover&quot; class=&quot;headerlink&quot; title=&quot;安装mysqlfailover&quot;&gt;&lt;/a&gt;安装mysqlfailover&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;下载MySQL Utilities 1.6 Manual &lt;a href=&quot;http://dev.mysql.com/downloads/utilities/1.6.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;选择&lt;a href=&quot;http://cdn.mysql.com//Downloads/Connector-Python/mysql-connector-python_2.1.3-1debian8.2_all.deb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Debian Linux 8.2 (Architecture Independent), DEB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 dpkg -i mysql-connector-python_2.1.3-1debian8.2_all.deb &lt;/li&gt;
&lt;li&gt;创建用户并给予权限： &lt;strong&gt;grant SUPER, GRANT OPTION, REPLICATION SLAVE, SELECT, RELOAD, DROP, CREATE, INSERT on &lt;em&gt;.&lt;/em&gt; to root@’localhost’ identified by ‘system’;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;运行 mysqlfailover –master=root:system@localhost:3306 –discover-slaves-login=&lt;font color=&quot;#8B0000&quot;&gt;&lt;strong&gt;root:pass&lt;/strong&gt;&lt;/font&gt; –log=/tmp/log.txt –force –verbose –daemon=start&lt;/li&gt;
&lt;li&gt;failover Percona 搭建&lt;a href=&quot;https://www.percona.com/blog/2014/07/03/failover-mysql-utilities-part-2-mysqlfailover/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;搭建主从注意事项&quot;&gt;&lt;a href=&quot;#搭建主从注意事项&quot; class=&quot;headerlink&quot; title=&quot;搭建主从注意事项:&quot;&gt;&lt;/a&gt;搭建主从注意事项:&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;搭建主从主机名全部用主机名，即dns域名，如果端口不一致则使用master_port=6666 mysqlfailover会自动发现从的端口(不一样也可以)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; change master to master_host=&amp;apos;**com.cstonline.oper.default.data.MHA-01**&amp;apos;,&amp;lt;font color=#8B0000&amp;gt;**master_port=6666**&amp;lt;/font&amp;gt;,master_user=&amp;apos;**root**&amp;apos;,master_password=&amp;apos;**pass**&amp;apos;,master_auto_position=1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&quot;遇到问题以及解决办法&quot;&gt;&lt;a href=&quot;#遇到问题以及解决办法&quot; class=&quot;headerlink&quot; title=&quot;遇到问题以及解决办法&quot;&gt;&lt;/a&gt;遇到问题以及解决办法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;报错: &lt;a href=&quot;http://stackoverflow.com/questions/24267017/importerror-no-module-named-connector-conversion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImportError: No module named connector.conversion&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;From Can&amp;apos;t run MySql Utilities:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MYSQL Utilities assumes that the MySQL Connector for Python has been installed. If you install it (http://dev.mysql.com/downloads/connector/python/), MySQL Utilities should run OK.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;报错: Discovering slaves for master at localhost:6666&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WARNING: There are slaves that have not been registered with --report-host or --report-port (--verbose for more details).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;报错 ERROR: User root on 172.16.1.89@3307 does not have sufficient privileges to execute the failover command (required: SUPER, GRANT OPTION, REPLICATION SLAVE, SELECT, RELOAD, DROP, CREATE, INSERT).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grant SUPER, GRANT OPTION, REPLICATION SLAVE, SELECT, RELOAD, DROP, CREATE, INSERT on *.* to root@&amp;apos;localhost&amp;apos; identified by &amp;apos;system&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;报错 ERROR Failover requires –master-info-repository=TABLE for all slaves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;在从端添加参数master_info_repository=TABLE #将master.info文件用table来存储，件事刷新这个文件的频率，5.7也建议，默认FILE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The utility will check to see if the slaves are using the option --master-info-repository=TABLE. If they are not, the utility will stop with an error.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;报错 &lt;a href=&quot;http://blog.chinaunix.net/uid-26435987-id-3178010.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ERROR: Query failed. 1406 (22001): Data too long for column ‘host’ at row 1&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;解决办法：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE `student` (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `sno`    int(11)     NOT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `sname`  varchar(20) NOT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `***`    varchar(20) NOT NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)DEFAULT CHARSET=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;上面`***`是性别的英文，被网站系统屏蔽掉了&amp;gt;T_T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;就是在上面这个语句后加入DEFAULT CHARSET=utf8即可。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;机制&quot;&gt;&lt;a href=&quot;#机制&quot; class=&quot;headerlink&quot; title=&quot;机制&quot;&gt;&lt;/a&gt;机制&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. 自动检测 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 18:59:18 PM INFO Master may be down. Waiting for 3 seconds.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;切换日志&quot;&gt;&lt;a href=&quot;#切换日志&quot; class=&quot;headerlink&quot; title=&quot;切换日志&quot;&gt;&lt;/a&gt;切换日志&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Failed to reconnect to the master after 3 attemps.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM CRITICAL Master is confirmed to be down or unreachable.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Failover starting in &amp;apos;auto&amp;apos; mode...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Checking eligibility of slave debian:3306 for candidate.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO GTID_MODE=ON ... Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Replication user exists ... Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Candidate slave debian:3306 will become the new master.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Checking slaves status (before failover).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Preparing candidate for failover.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO No missing transactions found on com.cstonline.oper.default.data.MHA-02:3306. Skipping connection of candidate as slave.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Creating replication user if it does not exist.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Stopping slaves.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Performing STOP on all slaves.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM WARNING Executing stop on slave debian:3306 WARN - slave is not configured with this master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Executing stop on slave debian:3306 Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM WARNING Executing stop on slave com.cstonline.oper.default.data.MHA-02:3306 WARN - slave is not configured with this master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Executing stop on slave com.cstonline.oper.default.data.MHA-02:3306 Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Switching slaves to new master.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Disconnecting new master as slave.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Execute on debian:3306: RESET SLAVE ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Starting slaves.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Performing START on all slaves.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Executing start on slave com.cstonline.oper.default.data.MHA-02:3306 Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Checking slaves for errors.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO com.cstonline.oper.default.data.MHA-02:3306 status: Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Failover complete.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Discovering slaves for master at debian:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Discovering slave at com.cstonline.oper.default.data.MHA-02:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Found slave: com.cstonline.oper.default.data.MHA-02:3306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:41 PM INFO Server &amp;apos;com.cstonline.oper.default.data.MHA-02:3306&amp;apos; is using MySQL version 5.6.12-log.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:46 PM INFO Unregistering existing instances from slaves.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:46 PM INFO Registering instance on master.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:46 PM INFO Getting health for master: debian:3306.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:47 PM INFO Master status: binlog: binlog.000004, position:1292&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:47 PM INFO Getting health for master: debian:3306.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:57 PM INFO Getting health for master: debian:3306.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:57 PM INFO Master status: binlog: binlog.000004, position:1292&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2016-01-29 19:57:57 PM INFO Master status: binlog: binlog.000004, position:1292&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&quot;OPTIONS&quot;&gt;&lt;a href=&quot;#OPTIONS&quot; class=&quot;headerlink&quot; title=&quot;OPTIONS&quot;&gt;&lt;/a&gt;OPTIONS&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysqlfailover accepts the following command-line options:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --help&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display a help message and exit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --license&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display license information and exit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --candidates=&amp;lt;candidate slave connections&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection information for candidate slave servers. Valid only with failover command. List multiple slaves in comma-separated list.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To connect to a server, it is necessary to specify connection parameters such as user name, host name, password, and either a port or socket. MySQL Utilities provides a number of ways to supply this information. All of the methods require specifying your choice via a command-line option such as --server, --master, --slave, etc. The methods include the following in order of most secure to least secure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use login-paths from your .mylogin.cnf file (encrypted, not visible). Example : &amp;lt;login-path&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use a configuration file (unencrypted, not visible) Note: available in release-1.5.0. Example : &amp;lt;configuration-file-path&amp;gt;[:&amp;lt;section&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify the data on the command-line (unencrypted, visible). Example : &amp;lt;user&amp;gt;[:&amp;lt;passwd&amp;gt;]@&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --daemon=&amp;lt;command&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Run as a daemon. The command can be start (start daemon), stop (stop daemon), restart (stop then start the daemon) or nodetach (start but do not detach the process). This option is only available for POSIX systems.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --discover-slaves-login=&amp;lt;user:password&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;At startup, query master for all registered slaves and use the user name and password specified to connect. Supply the user and password in the form &amp;lt;user&amp;gt;[:&amp;lt;passwd&amp;gt;] or &amp;lt;login-path&amp;gt;. For example, --discover=joe:secret will use &amp;apos;joe&amp;apos; as the user and &amp;apos;secret&amp;apos; as the password for each discovered slave.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --exec-after=&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name of script to execute after failover or switchover. Script name may include the path.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --exec-before=&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name of script to execute before failover or switchover. Script name may include the path.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --exec-fail-check=&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name of script to execute on each interval to invoke failover.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --exec-post-failover=&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Name of script to execute after failover is complete and the utility has refreshed the health report.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --failover-mode=&amp;lt;mode&amp;gt;, -f &amp;lt;mode&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Action to take when the master fails. &amp;apos;auto&amp;apos; = automatically fail to best slave, &amp;apos;elect&amp;apos; = fail to candidate list or if no candidate meets criteria fail, &amp;apos;fail&amp;apos; = take no action and stop when master fails. Default = &amp;apos;auto&amp;apos;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --force&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Override the registration check on master for multiple instances of the console monitoring the same master. See notes.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --interval=&amp;lt;seconds&amp;gt;, -i &amp;lt;seconds&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Interval in seconds for polling the master for failure and reporting health. Default = 15 seconds. Minimum is 5 seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --log=&amp;lt;log_file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify a log file to use for logging messages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --log-age=&amp;lt;days&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify maximum age of log entries in days. Entries older than this will be purged on startup. Default = 7 days.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --master=&amp;lt;connection&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection information for the master server.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To connect to a server, it is necessary to specify connection parameters such as user name, host name, password, and either a port or socket. MySQL Utilities provides a number of ways to supply this information. All of the methods require specifying your choice via a command-line option such as --server, --master, --slave, etc. The methods include the following in order of most secure to least secure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use login-paths from your .mylogin.cnf file (encrypted, not visible). Example : &amp;lt;login-path&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use a configuration file (unencrypted, not visible) Note: available in release-1.5.0. Example : &amp;lt;configuration-file-path&amp;gt;[:&amp;lt;section&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify the data on the command-line (unencrypted, visible). Example : &amp;lt;user&amp;gt;[:&amp;lt;passwd&amp;gt;]@&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --max-position=&amp;lt;position&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Used to detect slave delay. The maximum difference between the master&amp;apos;s log position and the slave&amp;apos;s reported read position of the master. A value greater than this means the slave is too far behind the master. Default = 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --pedantic, -p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Used to stop failover if some inconsistencies are found, such as errant transactions on slaves or SQL thread errors, during server checks. By default, the utility only generates warnings if issues are found when checking a slave&amp;apos;s status during failover, and it will continue its execution unless this option is specified.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --pidfile=&amp;lt;pidfile&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pidfile for running mysqlfailover as a daemon. This file contains the PID (process identifier), that uniquely identifies a process. It is needed to identify and control the process forked by mysqlfailover.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --ping=&amp;lt;number&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Number of ping attempts for detecting a downed server. Default is 3 seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;On some platforms, this is the same as number of seconds to wait for ping to return.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --report-values=&amp;lt;report_values&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Report values used in mysqlfailover running as a daemon. It can be health, gtid or uuid. Multiple values can be used separated by commas.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;health&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display the replication health of the topology.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gtid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display the master&amp;apos;s list of executed GTIDs, contents of the GTID variables; @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_PURGED and @@GLOBAL.GTID_OWNED.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uuid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display universally unique identifiers (UUIDs) for all servers.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default = health.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --rpl-user=:&amp;lt;replication_user&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The user and password for the replication user requirement, in the form: &amp;lt;user&amp;gt;[:&amp;lt;password&amp;gt;] or &amp;lt;login-path&amp;gt;. E.g. rpl:passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default = None.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --script-threshold=&amp;lt;return_code&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Value for external scripts to trigger aborting the operation if result is greater than or equal to the threshold.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default = None (no threshold checking).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --seconds-behind=&amp;lt;seconds&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Used to detect slave delay (only for health reporting purposes). The maximum number of seconds behind the master permitted before slave is considered behind the master in the health report state. Default = 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --slaves=&amp;lt;slave connections&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection information for slave servers. List multiple slaves in comma-separated list. The list will be evaluated literally whereby each server is considered a slave to the master listed regardless if they are a slave of the master.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To connect to a server, it is necessary to specify connection parameters such as user name, host name, password, and either a port or socket. MySQL Utilities provides a number of ways to supply this information. All of the methods require specifying your choice via a command-line option such as --server, --master, --slave, etc. The methods include the following in order of most secure to least secure.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use login-paths from your .mylogin.cnf file (encrypted, not visible). Example : &amp;lt;login-path&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Use a configuration file (unencrypted, not visible) Note: available in release-1.5.0. Example : &amp;lt;configuration-file-path&amp;gt;[:&amp;lt;section&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify the data on the command-line (unencrypted, visible). Example : &amp;lt;user&amp;gt;[:&amp;lt;passwd&amp;gt;]@&amp;lt;host&amp;gt;[:&amp;lt;port&amp;gt;][:&amp;lt;socket&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --ssl-ca&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The path to a file that contains a list of trusted SSL CAs.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --ssl-cert&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The name of the SSL certificate file to use for establishing a secure connection.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --ssl-key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The name of the SSL key file to use for establishing a secure connection.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --ssl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specifies if the server connection requires use of SSL. If an encrypted connection cannot be established, the connection attempt fails. Default setting is 0 (SSL not required).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --timeout=&amp;lt;seconds&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Maximum timeout in seconds to wait for each replication command to complete. For example, timeout for slave waiting to catch up to master.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Default = 3.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --verbose, -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Specify how much information to display. Use this option multiple times to increase the amount of information. For example, -v = verbose, -vv = more verbose, -vvv = debug.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Display version information and exit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NOTES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The login user must have the appropriate permissions for the utility to check servers and monitor their status (e.g., SHOW SLAVE STATUS, SHOW MASTER STATUS). The user must also have permissions to execute the failover procedure (e.g., STOP SLAVE, START SLAVE, WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS, CHANGE MASTER TO ...). Lastly, the user must have the REPLICATE SLAVE privilege for slaves to connect to their master. The same permissions are required by the failover utility for master and slaves in order to run successfully. In particular, users connected to slaves, candidates and master require SUPER, GRANT OPTION, REPLICATION SLAVE, RELOAD, DROP, CREATE, INSERT and SELECT privileges.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The DROP, CREATE, INSERT and SELECT privileges are required to register the failover instance on the initial master or the new master (after a successful failover). Therefore, since any slave can become the new master, slaves and candidates also require those privileges. The utility checks permissions for the master, slaves, and candidates at startup.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;MySQL-Auto-Failover-功能测试&quot;&gt;&lt;a href=&quot;#MySQL-Auto-Failover-功能测试&quot; class=&quot;headerlink&quot; title=&quot;MySQL Auto-Failover 功能测试&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http:
    
    </summary>
    
      <category term="mysql" scheme="http://www.lflxp.cn/categories/mysql/"/>
    
    
      <category term="dba" scheme="http://www.lflxp.cn/tags/dba/"/>
    
  </entry>
  
  <entry>
    <title>命令解释</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-29-django%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-29-django命令汇总/</id>
    <published>2016-04-06T10:31:45.179Z</published>
    <updated>2016-04-06T10:31:33.761Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Django项目创建命令&quot;&gt;&lt;a href=&quot;#Django项目创建命令&quot; class=&quot;headerlink&quot; title=&quot;Django项目创建命令&quot;&gt;&lt;/a&gt;Django项目创建命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;查看Django版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ python -c &amp;quot;import django; print(django.get_version())&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建一个project&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ django-admin startproject mysite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;创建目录结构如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysite/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    manage.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mysite/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        __init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        settings.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        urls.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        wsgi.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;运行服务&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#可以指定端口 并且自动加载文件 不用手动重启服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py runserver 0.0.0.0:8000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Performing system checks...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System check identified no issues (0 silenced).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You have unapplied migrations; your app may not work properly until they are applied.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Run &amp;apos;python manage.py migrate&amp;apos; to apply them.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;January 27, 2016 - 15:50:53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Django version 1.9, using settings &amp;apos;mysite.settings&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Starting development server at http://127.0.0.1:8000/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Quit the server with CONTROL-C.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建一个应用(app)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py startapp polls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;目录结构如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;polls/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    admin.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    apps.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    migrations/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        __init__.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    models.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tests.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    views.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;写一个简单试图VIEW&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;第一步：创建一个http相应结果hello world&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;polls/views.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.http import HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def index(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(&amp;quot;Hello, world. You&amp;apos;re at the polls index.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;第二步：添加url路径&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;polls/urls.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls import url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from . import views&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^$&amp;apos;, views.index, name=&amp;apos;index&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;第三步：将app路径加入项目路径中include()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysite/urls.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.conf.urls import include, url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib import admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^polls/&amp;apos;, include(&amp;apos;polls.urls&amp;apos;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url(r&amp;apos;^admin/&amp;apos;, admin.site.urls),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;第四步：运行服务 访问路径&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://localhost:8000/polls/ i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;数据库设置-mysite-settings-py&quot;&gt;&lt;a href=&quot;#数据库设置-mysite-settings-py&quot; class=&quot;headerlink&quot; title=&quot;数据库设置 mysite/settings.py&quot;&gt;&lt;/a&gt;数据库设置 mysite/settings.py&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;引擎选项&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ENGINE &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.db.backends.sqlite3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.db.backends.postgresql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.db.backends.mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.db.backends.oracle&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;INSTALLED_APPS &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.admin – The admin site. You’ll use it shortly.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.auth – An authentication system.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.contenttypes – A framework for content types.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.sessions – A session framework.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.messages – A messaging framework.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;django.contrib.staticfiles – A framework for managing static files.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;数据库操作model创建 python manage.py migrate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;创建model操作&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;polls/models.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.db import models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Question(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    question_text = models.CharField(max_length=200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pub_date = models.DateTimeField(&amp;apos;date published&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Choice(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    question = models.ForeignKey(Question, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    choice_text = models.CharField(max_length=200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    votes = models.IntegerField(default=0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;初始化/激活model&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysite/settings.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INSTALLED_APPS = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;polls.apps.PollsConfig&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.admin&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.auth&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.contenttypes&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.sessions&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.messages&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;apos;django.contrib.staticfiles&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;初始化执行SQL命令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py makemigrations polls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Migrations for &amp;apos;polls&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  0001_initial.py:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - Create model Choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - Create model Question&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - Add field question to choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;查看初始化SQL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#The sqlmigrate command takes migration names and returns their SQL:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py sqlmigrate polls 0001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BEGIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- Create model Choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE &amp;quot;polls_choice&amp;quot; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;id&amp;quot; serial NOT NULL PRIMARY KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;choice_text&amp;quot; varchar(200) NOT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;votes&amp;quot; integer NOT NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- Create model Question&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE &amp;quot;polls_question&amp;quot; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;id&amp;quot; serial NOT NULL PRIMARY KEY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;question_text&amp;quot; varchar(200) NOT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;pub_date&amp;quot; timestamp with time zone NOT NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- Add field question to choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE &amp;quot;polls_choice&amp;quot; ADD COLUMN &amp;quot;question_id&amp;quot; integer NOT NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE &amp;quot;polls_choice&amp;quot; ALTER COLUMN &amp;quot;question_id&amp;quot; DROP DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE INDEX &amp;quot;polls_choice_7aa0f6ee&amp;quot; ON &amp;quot;polls_choice&amp;quot; (&amp;quot;question_id&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER TABLE &amp;quot;polls_choice&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ADD CONSTRAINT &amp;quot;polls_choice_question_id_246c99a640fbbd72_fk_polls_question_id&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FOREIGN KEY (&amp;quot;question_id&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    REFERENCES &amp;quot;polls_question&amp;quot; (&amp;quot;id&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEFERRABLE INITIALLY DEFERRED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMMIT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;初始化数据库表结构&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#run migrate again to create those model tables in your database:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py migrate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Operations to perform:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Apply all migrations: admin, contenttypes, polls, auth, sessions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running migrations:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Rendering model states... DONE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying polls.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#####################################&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Run python manage.py makemigrations to create migrations for those changes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Run python manage.py migrate to apply those changes to the database.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;Playing with the API&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from polls.models import Question, Choice   # Import the model classes we just wrote.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# No questions are in the system yet.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Question.objects.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Create a new Question.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Support for time zones is enabled in the default settings file, so&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Django expects a datetime with tzinfo for pub_date. Use timezone.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# instead of datetime.datetime.now() and it will do the right thing.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from django.utils import timezone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q = Question(question_text=&amp;quot;What&amp;apos;s new?&amp;quot;, pub_date=timezone.now())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Save the object into the database. You have to call save() explicitly.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Now it has an ID. Note that this might say &amp;quot;1L&amp;quot; instead of &amp;quot;1&amp;quot;, depending&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# on which database you&amp;apos;re using. That&amp;apos;s no biggie; it just means your&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# database backend prefers to return integers as Python long integer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# objects.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Access model field values via Python attributes.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.question_text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;What&amp;apos;s new?&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.pub_date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=&amp;lt;UTC&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Change values by changing the attributes, then calling save().&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.question_text = &amp;quot;What&amp;apos;s up?&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; q.save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# objects.all() displays all the questions in the database.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; Question.objects.all()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&amp;lt;Question: Question object&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Django-Admin&quot;&gt;&lt;a href=&quot;#Django-Admin&quot; class=&quot;headerlink&quot; title=&quot;Django Admin&quot;&gt;&lt;/a&gt;Django Admin&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;创建管理员用户&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ python manage.py createsuperuser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#Enter your desired username and press enter.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Username: admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#You will then be prompted for your desired email address:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Email address: admin@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#启动服务 访问管理员url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http://127.0.0.1:8000/admin/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;添加应用 Make the poll app modifiable in the admin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://docs.djangoproject.com/en/1.9/_images/admin03t.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://docs.djangoproject.com/en/1.9/_images/admin04t.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://docs.djangoproject.com/en/1.9/_images/admin05t.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://docs.djangoproject.com/en/1.9/_images/admin06t.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you’re comfortable with the models API and have familiarized yourself with the admin site, read part 3 of this tutorial to learn about how to add more views to our polls app.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;But where’s our poll app? It’s not displayed on the admin index page.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Just one thing to do: we need to tell the admin that Question objects have an admin interface. To do this, open the polls/admin.py file, and edit it to look like this:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;polls/admin.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.contrib import admin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from .models import Question&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;admin.site.register(Question)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Writing-more-views&quot;&gt;&lt;a href=&quot;#Writing-more-views&quot; class=&quot;headerlink&quot; title=&quot;Writing more views&quot;&gt;&lt;/a&gt;Writing more views&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;1.polls/views.py&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;polls/views.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def detail(request, question_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(&amp;quot;You&amp;apos;re looking at question %s.&amp;quot; % question_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def results(request, question_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response = &amp;quot;You&amp;apos;re looking at the results of question %s.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(response % question_id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def vote(request, question_id):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return HttpResponse(&amp;quot;You&amp;apos;re voting on question %s.&amp;quot; % question_id)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Django项目创建命令&quot;&gt;&lt;a href=&quot;#Django项目创建命令&quot; class=&quot;headerlink&quot; title=&quot;Django项目创建命令&quot;&gt;&lt;/a&gt;Django项目创建命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;查看Django版本&lt;/li&gt;
&lt;/ul&gt;
&lt;f
    
    </summary>
    
      <category term="django" scheme="http://www.lflxp.cn/categories/django/"/>
    
    
  </entry>
  
  <entry>
    <title>Django web 学习</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-29-django-web/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-29-django-web/</id>
    <published>2016-04-06T10:31:45.177Z</published>
    <updated>2016-04-06T10:31:33.760Z</updated>
    
    <content type="html">&lt;h1 id=&quot;基于Django的数据库监控系统&quot;&gt;&lt;a href=&quot;#基于Django的数据库监控系统&quot; class=&quot;headerlink&quot; title=&quot;基于Django的数据库监控系统&quot;&gt;&lt;/a&gt;&lt;strong&gt;基于Django的数据库监控系统&lt;/strong&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;先学习官网案例，然后把模板嵌入django框架&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;安装和环境配置&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/install/#install-django&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考官网&lt;/a&gt;……………………………..1&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pip.pypa.io/en/stable/installing/#installing-with-get-pip-py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pip 安装&lt;/a&gt;……………………………..2&lt;/li&gt;
&lt;li&gt;搭建&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial01/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;案例&lt;/a&gt;……………………………..3&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial01/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing your first Django app, part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/intro/tutorial02/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing your first Django app, part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;安装和环境配置&quot;&gt;&lt;a href=&quot;#安装和环境配置&quot; class=&quot;headerlink&quot; title=&quot;安装和环境配置&quot;&gt;&lt;/a&gt;安装和环境配置&lt;/h2&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;Quick-install-guide&quot;&gt;&lt;a href=&quot;#Quick-install-guide&quot; class=&quot;headerlink&quot; title=&quot;Quick install guide&quot;&gt;&lt;/a&gt;&lt;strong&gt;Quick install guide&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Before you can use Django, you’ll need to get it installed. We have a &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;complete installation&lt;/a&gt; guide that covers all the possibilities; this guide will guide you to a simple, minimal installation that’ll work while you walk through the introduction.&lt;/p&gt;
&lt;h2 id=&quot;Install-Python&quot;&gt;&lt;a href=&quot;#Install-Python&quot; class=&quot;headerlink&quot; title=&quot;Install Python&quot;&gt;&lt;/a&gt;&lt;strong&gt;Install Python&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Being a Python Web framework, Django requires Python. See &lt;a href=&quot;https://docs.djangoproject.com/en/1.9/faq/install/#faq-python-version-support&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What Python version can I use with Django?&lt;/a&gt; for details. Python includes a lightweight database called &lt;a href=&quot;https://sqlite.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SQLite&lt;/a&gt; so you won’t need to set up a database just yet.&lt;/p&gt;
&lt;p&gt;Get the latest version of Python at &lt;a href=&quot;https://www.python.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.python.org/download/&lt;/a&gt; or with your operating system’s package manager.&lt;/p&gt;
&lt;p&gt;You can verify that Python is installed by typing &lt;strong&gt;python&lt;/strong&gt; from your shell; you should see something like:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Python 3.4.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[GCC 4.x] on linux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Writing-your-first-Django-app-part-2&quot;&gt;&lt;a href=&quot;#Writing-your-first-Django-app-part-2&quot; class=&quot;headerlink&quot; title=&quot;Writing your first Django app, part 2&quot;&gt;&lt;/a&gt;Writing your first Django app, part 2&lt;/h1&gt;&lt;h2 id=&quot;Database-setup&quot;&gt;&lt;a href=&quot;#Database-setup&quot; class=&quot;headerlink&quot; title=&quot;Database setup&quot;&gt;&lt;/a&gt;&lt;strong&gt;Database setup&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Now, open up &lt;strong&gt;mysite/settings.py&lt;/strong&gt;. It’s a normal Python module with module-level variables representing Django settings.&lt;/p&gt;
&lt;p&gt;By default, the configuration uses SQLite. If you’re new to databases, or you’re just interested in trying Django, this is the easiest choice. SQLite is included in Python, so you won’t need to install anything else to support your database. When starting your first real project, however, you may want to use a more robust database like PostgreSQL, to avoid database-switching headaches down the road.&lt;/p&gt;
&lt;p&gt;If you wish to use another database, install the appropriate database bindings and change the following keys in the &lt;strong&gt;DATABASES ‘default’&lt;/strong&gt; item to match your database connection settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ENGINE&lt;/strong&gt; – Either ‘django.db.backends.sqlite3’, ‘django.db.backends.postgresql’, ‘django.db.backends.mysql’, or ‘django.db.backends.oracle’. Other backends are also available.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NAME&lt;/strong&gt; – The name of your database. If you’re using SQLite, the database will be a file on your computer; in that case, NAME should be the full absolute path, including filename, of that file. The default value, os.path.join(BASE_DIR, ‘db.sqlite3’), will store the file in your project directory.&lt;br&gt;If you are not using SQLite as your database, additional settings such as USER, PASSWORD, and HOST must be added. For more details, see the reference documentation for DATABASES.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While you’re editing mysite/settings.py, set TIME_ZONE to your time zone.&lt;/p&gt;
&lt;p&gt;Also, note the INSTALLED_APPS setting at the top of the file. That holds the names of all Django applications that are activated in this Django instance. Apps can be used in multiple projects, and you can package and distribute them for use by others in their projects.&lt;/p&gt;
&lt;p&gt;By default, INSTALLED_APPS contains the following apps, all of which come with Django:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.admin&lt;/strong&gt; – The admin site. You’ll use it shortly.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.auth&lt;/strong&gt; – An authentication system.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.contenttypes&lt;/strong&gt; – A framework for content types.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.sessions&lt;/strong&gt; – A session framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.messages&lt;/strong&gt; – A messaging framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;django.contrib.staticfiles&lt;/strong&gt; – A framework for managing static files.&lt;br&gt;These applications are included by default as a convenience for the common case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these applications make use of at least one database table, though, so we need to create the tables in the database before we can use them. To do that, run the following command:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@debian:/home/go/src/django_web# python manage.py migrate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Operations to perform:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Apply all migrations: admin, contenttypes, polls, auth, sessions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running migrations:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Rendering model states... DONE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying contenttypes.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying admin.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying admin.0002_logentry_remove_auto_add... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying contenttypes.0002_remove_content_type_name... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0002_alter_permission_name_max_length... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0003_alter_user_email_max_length... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0004_alter_user_username_opts... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0005_alter_user_last_login_null... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0006_require_contenttypes_0002... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying auth.0007_alter_validators_add_error_messages... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying polls.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Applying sessions.0001_initial... OK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;关键点&quot;&gt;&lt;a href=&quot;#关键点&quot; class=&quot;headerlink&quot; title=&quot;关键点&quot;&gt;&lt;/a&gt;关键点&lt;/h1&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysite/mysite/settings.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DATABASES = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # &amp;apos;default&amp;apos;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #     &amp;apos;ENGINE&amp;apos;: &amp;apos;django.db.backends.sqlite3&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #     &amp;apos;NAME&amp;apos;: os.path.join(BASE_DIR, &amp;apos;db.sqlite3&amp;apos;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;apos;default&amp;apos;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;ENGINE&amp;apos;: &amp;apos;django.db.backends.mysql&amp;apos;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;NAME&amp;apos;: &amp;apos;django&amp;apos;,   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;USER&amp;apos;: &amp;apos;root&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;PASSWORD&amp;apos;: &amp;apos;system&amp;apos;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;HOST&amp;apos;: &amp;apos;172.16.4.51&amp;apos;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;PORT&amp;apos;: &amp;apos;3306&amp;apos;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;建立一个Model&quot;&gt;&lt;a href=&quot;#建立一个Model&quot; class=&quot;headerlink&quot; title=&quot;建立一个Model&quot;&gt;&lt;/a&gt;建立一个Model&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;In our simple poll app, we’ll create two models: &lt;strong&gt;Question&lt;/strong&gt; and &lt;strong&gt;Choice&lt;/strong&gt;. A &lt;strong&gt;Question&lt;/strong&gt; has a question and a publication date. A &lt;strong&gt;Choice&lt;/strong&gt; has two fields: the text of the choice and a vote tally. Each &lt;strong&gt;Choice&lt;/strong&gt; is associated with a &lt;strong&gt;Question&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;These concepts are represented by simple Python classes. Edit the &lt;strong&gt;polls/models.py&lt;/strong&gt; file so it looks like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;polls/models.py&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.db import models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Question(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    question_text = models.CharField(max_length=200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pub_date = models.DateTimeField(&amp;apos;date published&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Choice(models.Model):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    question = models.ForeignKey(Question, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    choice_text = models.CharField(max_length=200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    votes = models.IntegerField(default=0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于Django的数据库监控系统&quot;&gt;&lt;a href=&quot;#基于Django的数据库监控系统&quot; class=&quot;headerlink&quot; title=&quot;基于Django的数据库监控系统&quot;&gt;&lt;/a&gt;&lt;strong&gt;基于Django的数据库监控系统&lt;/strong&gt;&lt;/h1&gt;
    
    </summary>
    
      <category term="django" scheme="http://www.lflxp.cn/categories/django/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown字体颜色</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-28-markdown-color/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-28-markdown-color/</id>
    <published>2016-04-06T10:31:45.176Z</published>
    <updated>2016-04-06T11:29:39.336Z</updated>
    
    <content type="html">&lt;h1 id=&quot;markdown编辑器语法——字体、字号与颜色&quot;&gt;&lt;a href=&quot;#markdown编辑器语法——字体、字号与颜色&quot; class=&quot;headerlink&quot; title=&quot;markdown编辑器语法——字体、字号与颜色&quot;&gt;&lt;/a&gt;markdown编辑器语法——字体、字号与颜色&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;Markdown&lt;/strong&gt;是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。但是它本身是不支持修改字体、字号与颜色等功能的！&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;CSDN-markdown&lt;/strong&gt;编辑器是其衍生版本，扩展了Markdown的功能（如表格、脚注、内嵌HTML等等）！对，就是&lt;strong&gt;内嵌HTML&lt;/strong&gt;，接下来要讲的功能就需要使用&lt;strong&gt;内嵌HTML&lt;/strong&gt;的方法来实现。&lt;/p&gt;
&lt;h1 id=&quot;字体、字号与颜色&quot;&gt;&lt;a href=&quot;#字体、字号与颜色&quot; class=&quot;headerlink&quot; title=&quot;字体、字号与颜色&quot;&gt;&lt;/a&gt;字体、字号与颜色&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. &amp;lt;font face=&amp;quot;黑体&amp;quot;&amp;gt;我是黑体字&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. &amp;lt;font face=&amp;quot;微软雅黑&amp;quot;&amp;gt;我是微软雅黑&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. &amp;lt;font face=&amp;quot;STCAIYUN&amp;quot;&amp;gt;我是华文彩云&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. &amp;lt;font color=#0099ff size=7 face=&amp;quot;黑体&amp;quot;&amp;gt;color=#0099ff size=72 face=&amp;quot;黑体&amp;quot;&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. &amp;lt;font color=#00ffff size=72&amp;gt;color=#00ffff&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6. &amp;lt;font color=gray size=72&amp;gt;color=gray&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。&lt;br&gt;呈现效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot; size=&quot;7&quot; face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=”黑体”&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#00ffff&quot; size=&quot;72&quot;&gt;color=#00ffff&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;gray&quot; size=&quot;72&quot;&gt;color=gray&lt;/font&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;color=#0099ff size=72 face=”黑体”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;color=#00ffff 可以用十六位颜色值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;color=gray 也可以用已知颜色名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;颜色名列表&quot;&gt;&lt;a href=&quot;#颜色名列表&quot; class=&quot;headerlink&quot; title=&quot;颜色名列表&quot;&gt;&lt;/a&gt;颜色名列表&lt;/h1&gt;&lt;table&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;    &lt;th&gt;颜色名&lt;/th&gt;&lt;br&gt;    &lt;th&gt;十六进制颜色值&lt;/th&gt;&lt;br&gt;    &lt;th&gt;颜色&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;AliceBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F0F8FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(240, 248, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;AntiqueWhite    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FAEBD7&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(250, 235, 215)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Aqua    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00FFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 255, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Aquamarine    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#7FFFD4&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(127, 255, 212)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Azure    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F0FFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(240, 255, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Beige    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F5F5DC&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(245, 245, 220)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Bisque    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFE4C4&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 228, 196)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Black    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#000000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 0, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;BlanchedAlmond    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFEBCD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 235, 205)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Blue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#0000FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 0, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;BlueViolet    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8A2BE2&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(138, 43, 226)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Brown    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#A52A2A&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(165, 42, 42)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;BurlyWood    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DEB887&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(222, 184, 135)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;CadetBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#5F9EA0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(95, 158, 160)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Chartreuse    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#7FFF00&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(127, 255, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Chocolate    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D2691E&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(210, 105, 30)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Coral    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF7F50&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 127, 80)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;CornflowerBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#6495ED&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(100, 149, 237)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Cornsilk    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFF8DC&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 248, 220)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Crimson    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DC143C&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(220, 20, 60)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Cyan    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00FFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 255, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00008B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 0, 139)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkCyan    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#008B8B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 139, 139)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkGoldenRod    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#B8860B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(184, 134, 11)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkGray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#A9A9A9&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(169, 169, 169)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#006400&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 100, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkKhaki    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#BDB76B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(189, 183, 107)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkMagenta    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8B008B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(139, 0, 139)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkOliveGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#556B2F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(85, 107, 47)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Darkorange    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF8C00&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 140, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkOrchid    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#9932CC&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(153, 50, 204)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8B0000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(139, 0, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkSalmon    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#E9967A&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(233, 150, 122)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkSeaGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8FBC8F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(143, 188, 143)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkSlateBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#483D8B&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(72, 61, 139)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkSlateGray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#2F4F4F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(47, 79, 79)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkTurquoise    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00CED1&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 206, 209)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DarkViolet    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#9400D3&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(148, 0, 211)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DeepPink    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF1493&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 20, 147)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DeepSkyBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00BFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 191, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DimGray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#696969&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(105, 105, 105)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;DodgerBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#1E90FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(30, 144, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Feldspar    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D19275&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(209, 146, 117)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;FireBrick    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#B22222&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(178, 34, 34)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;FloralWhite    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFAF0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 250, 240)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;ForestGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#228B22&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(34, 139, 34)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Fuchsia    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF00FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 0, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Gainsboro    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DCDCDC&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(220, 220, 220)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;GhostWhite    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F8F8FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(248, 248, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Gold    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFD700&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 215, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;GoldenRod    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DAA520&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(218, 165, 32)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Gray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#808080&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(128, 128, 128)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Green    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#008000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 128, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;GreenYellow    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#ADFF2F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(173, 255, 47)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;HoneyDew    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F0FFF0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(240, 255, 240)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;HotPink    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF69B4&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 105, 180)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;IndianRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#CD5C5C&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(205, 92, 92)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Indigo    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#4B0082&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(75, 0, 130)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Ivory    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFFF0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 255, 240)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Khaki    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F0E68C&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(240, 230, 140)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Lavender    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#E6E6FA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(230, 230, 250)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LavenderBlush    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFF0F5&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 240, 245)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LawnGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#7CFC00&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(124, 252, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LemonChiffon    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFACD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 250, 205)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#ADD8E6&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(173, 216, 230)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightCoral    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F08080&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(240, 128, 128)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightCyan    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#E0FFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(224, 255, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightGoldenRodYellow    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FAFAD2&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(250, 250, 210)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightGrey    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D3D3D3&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(211, 211, 211)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#90EE90&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(144, 238, 144)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightPink    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFB6C1&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 182, 193)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSalmon    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFA07A&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 160, 122)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSeaGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#20B2AA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(32, 178, 170)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSkyBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#87CEFA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(135, 206, 250)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSlateBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8470FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(132, 112, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSlateGray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#778899&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(119, 136, 153)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightSteelBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#B0C4DE&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(176, 196, 222)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LightYellow    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFFE0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 255, 224)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Lime    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00FF00&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 255, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;LimeGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#32CD32&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(50, 205, 50)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Linen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FAF0E6&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(250, 240, 230)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Magenta    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF00FF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 0, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Maroon    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#800000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(128, 0, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumAquaMarine    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#66CDAA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(102, 205, 170)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#0000CD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 0, 205)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumOrchid    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#BA55D3&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(186, 85, 211)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumPurple    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#9370D8&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(147, 112, 216)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumSeaGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#3CB371&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(60, 179, 113)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumSlateBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#7B68EE&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(123, 104, 238)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumSpringGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00FA9A&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 250, 154)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumTurquoise    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#48D1CC&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(72, 209, 204)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MediumVioletRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#C71585&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(199, 21, 133)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MidnightBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#191970&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(25, 25, 112)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MintCream    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F5FFFA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(245, 255, 250)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;MistyRose    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFE4E1&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 228, 225)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Moccasin    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFE4B5&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 228, 181)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;NavajoWhite    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFDEAD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 222, 173)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Navy    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#000080&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 0, 128)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;OldLace    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FDF5E6&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(253, 245, 230)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Olive    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#808000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(128, 128, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;OliveDrab    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#6B8E23&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(107, 142, 35)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Orange    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFA500&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 165, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;OrangeRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF4500&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 69, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Orchid    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DA70D6&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(218, 112, 214)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PaleGoldenRod    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#EEE8AA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(238, 232, 170)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PaleGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#98FB98&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(152, 251, 152)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PaleTurquoise    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#AFEEEE&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(175, 238, 238)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PaleVioletRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D87093&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(216, 112, 147)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PapayaWhip    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFEFD5&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 239, 213)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PeachPuff    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFDAB9&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 218, 185)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Peru    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#CD853F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(205, 133, 63)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Pink    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFC0CB&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 192, 203)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Plum    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#DDA0DD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(221, 160, 221)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;PowderBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#B0E0E6&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(176, 224, 230)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Purple    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#800080&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(128, 0, 128)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Red    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF0000&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 0, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;RosyBrown    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#BC8F8F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(188, 143, 143)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;RoyalBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#4169E1&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(65, 105, 225)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SaddleBrown    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#8B4513&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(139, 69, 19)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Salmon    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FA8072&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(250, 128, 114)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SandyBrown    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F4A460&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(244, 164, 96)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SeaGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#2E8B57&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(46, 139, 87)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SeaShell    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFF5EE&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 245, 238)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Sienna    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#A0522D&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(160, 82, 45)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Silver    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#C0C0C0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(192, 192, 192)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SkyBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#87CEEB&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(135, 206, 235)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SlateBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#6A5ACD&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(106, 90, 205)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SlateGray    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#708090&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(112, 128, 144)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Snow    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFAFA&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 250, 250)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SpringGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#00FF7F&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 255, 127)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;SteelBlue    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#4682B4&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(70, 130, 180)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Tan    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D2B48C&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(210, 180, 140)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Teal    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#008080&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(0, 128, 128)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Thistle    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D8BFD8&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(216, 191, 216)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Tomato    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FF6347&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 99, 71)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Turquoise    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#40E0D0&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(64, 224, 208)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Violet    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#EE82EE&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(238, 130, 238)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;VioletRed    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#D02090&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(208, 32, 144)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Wheat    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F5DEB3&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(245, 222, 179)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;White    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFFFF&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 255, 255)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;WhiteSmoke    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#F5F5F5&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(245, 245, 245)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;Yellow    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#FFFF00&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(255, 255, 0)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;td&gt;YellowGreen    &lt;/td&gt;&lt;td&gt;&lt;font color=&quot;#9ACD32&quot;&gt;我变&lt;/font&gt;&lt;/td&gt;&lt;td&gt;rgb(154, 205, 50)&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;markdown编辑器语法——字体、字号与颜色&quot;&gt;&lt;a href=&quot;#markdown编辑器语法——字体、字号与颜色&quot; class=&quot;headerlink&quot; title=&quot;markdown编辑器语法——字体、字号与颜色&quot;&gt;&lt;/a&gt;markdown编辑器语法——字体
    
    </summary>
    
      <category term="markdown" scheme="http://www.lflxp.cn/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://www.lflxp.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>博客记录什么 写点什么</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-27-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-27-准备工作/</id>
    <published>2016-04-06T10:31:45.174Z</published>
    <updated>2016-04-06T11:29:56.785Z</updated>
    
    <content type="html">&lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;第一次写博客，我准备把我接下来的工作理一理。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;&lt;strong&gt;计划&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;完成一批量的博客写作，学习&lt;em&gt;markdown&lt;/em&gt;语法&lt;/li&gt;
&lt;li&gt;规划数据库存储的表结构&lt;/li&gt;
&lt;li&gt;学习图片幻灯片显示和背景音乐的插入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微信接口开发&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;将gin_adminTle完善&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;完善模板插件&lt;/li&gt;
&lt;li&gt;将邮件信息加入系统中&lt;/li&gt;
&lt;li&gt;暂时不修改&lt;a href=&quot;http://lixueping.win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;监控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;增加gin_adminTle的邮件信息收集功能&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;已完成&quot;&gt;&lt;a href=&quot;#已完成&quot; class=&quot;headerlink&quot; title=&quot;已完成&quot;&gt;&lt;/a&gt;&lt;strong&gt;已完成&lt;/strong&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;font color=&quot;#FF7F50&quot;&gt;博客部署完成&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#FF7F50&quot;&gt;临时研究一下altas&lt;/font&gt;





&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
      <category term="一切的开始" scheme="http://www.lflxp.cn/categories/%E4%B8%80%E5%88%87%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    
    
      <category term="微信平台" scheme="http://www.lflxp.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Markdown</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-01-27-markdown/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-01-27-markdown/</id>
    <published>2016-04-06T10:31:45.172Z</published>
    <updated>2016-04-06T11:29:45.240Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Markdown语法&quot;&gt;&lt;a href=&quot;#Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法&quot;&gt;&lt;/a&gt;Markdown语法&lt;/h1&gt;&lt;h1 id=&quot;标题-Setting&quot;&gt;&lt;a href=&quot;#标题-Setting&quot; class=&quot;headerlink&quot; title=&quot;标题  Setting&quot;&gt;&lt;/a&gt;&lt;strong&gt;标题&lt;/strong&gt; &lt;i class=&quot;icon-cog&quot;&gt;&lt;/i&gt; &lt;strong&gt;Setting&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;Note&quot;&gt;&lt;a href=&quot;#Note&quot; class=&quot;headerlink&quot; title=&quot;Note:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;StackEdit is accessible offline after the application has been loaded for the first time.&lt;/li&gt;
&lt;li&gt;Your local documents are not shared between different browsers or computers.&lt;/li&gt;
&lt;li&gt;Clearing your browser’s data may &lt;strong&gt;delete all your local documents!&lt;/strong&gt; Make sure your documents are synchronized with &lt;strong&gt;Google Drive&lt;/strong&gt; or &lt;strong&gt;Dropbox&lt;/strong&gt; (check out the &lt;a href=&quot;#synchronization&quot;&gt;&lt;i class=&quot;icon-refresh&quot;&gt;&lt;/i&gt; Synchronization&lt;/a&gt; section).&lt;/li&gt;
&lt;li&gt;All your local documents are listed in the document panel. You can switch from one to another by clicking a document in the list or you can toggle documents using &lt;kbd&gt;Ctrl+[&lt;/kbd&gt; and &lt;kbd&gt;Ctrl+]&lt;/kbd&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;http://www.baidu.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;二级标题&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;&lt;em&gt;三级标题&lt;/em&gt;&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题&quot;&gt;&lt;/a&gt;&lt;em&gt;四级标题&lt;/em&gt;&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题&quot;&gt;&lt;/a&gt;五级标题&lt;/h5&gt;&lt;hr&gt;
&lt;h1 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h1&gt;&lt;p&gt;-（+&lt;em&gt;） 第一项 -（+&lt;/em&gt;） 第二项 - （+*）第三项&lt;/p&gt;
&lt;h1 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;&lt;strong&gt;无序列表&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;列表一&lt;/li&gt;
&lt;li&gt;列表二&lt;/li&gt;
&lt;li&gt;列表三&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;&lt;strong&gt;有序列表&lt;/strong&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;列表一&lt;/li&gt;
&lt;li&gt;列表二&lt;/li&gt;
&lt;li&gt;列表三&lt;blockquote&gt;
&lt;p&gt;###区块引用&lt;br&gt;注：-、1.和文本之间要保留一个字符的空格。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;#段落&lt;br&gt;&lt;strong&gt;一个空行的或者一个回车*&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;——————————&quot;&gt;&lt;a href=&quot;#——————————&quot; class=&quot;headerlink&quot; title=&quot;——————————&quot;&gt;&lt;/a&gt;——————————&lt;/h1&gt;&lt;p&gt;#代码区块&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落：&quot;&gt;&lt;a href=&quot;#代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落：&quot; class=&quot;headerlink&quot; title=&quot;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落：*&quot;&gt;&lt;/a&gt;&lt;em&gt;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落：*&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;void main()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;printf(“Hello, Markdown.”);&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;#强调&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;，&lt;em&gt;斜体&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;粗体&lt;/strong&gt;，&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;链接和图片&quot;&gt;&lt;a href=&quot;#链接和图片&quot; class=&quot;headerlink&quot; title=&quot;链接和图片&quot;&gt;&lt;/a&gt;链接和图片&lt;/h1&gt;&lt;blockquote&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;链接可以由两种形式生成：行内式和参考式。&quot;&gt;&lt;a href=&quot;#链接可以由两种形式生成：行内式和参考式。&quot; class=&quot;headerlink&quot; title=&quot;链接可以由两种形式生成：行内式和参考式。&quot;&gt;&lt;/a&gt;链接可以由两种形式生成：行内式和参考式。&lt;/h3&gt;&lt;h4 id=&quot;行内式：&quot;&gt;&lt;a href=&quot;#行内式：&quot; class=&quot;headerlink&quot; title=&quot;行内式：&quot;&gt;&lt;/a&gt;行内式：&lt;/h4&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;younghz的Markdown库。&quot;&gt;&lt;a href=&quot;#younghz的Markdown库。&quot; class=&quot;headerlink&quot; title=&quot;younghz的Markdown库。&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库&lt;/a&gt;。&lt;/h4&gt;&lt;h4 id=&quot;参考式：&quot;&gt;&lt;a href=&quot;#参考式：&quot; class=&quot;headerlink&quot; title=&quot;参考式：&quot;&gt;&lt;/a&gt;参考式：&lt;/h4&gt;&lt;h4 id=&quot;younghz的Markdown库1&quot;&gt;&lt;a href=&quot;#younghz的Markdown库1&quot; class=&quot;headerlink&quot; title=&quot;younghz的Markdown库1&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库1&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;younghz的Markdown库2&quot;&gt;&lt;a href=&quot;#younghz的Markdown库2&quot; class=&quot;headerlink&quot; title=&quot;younghz的Markdown库2&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库2&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;参考式-2-must-not-set-within-gt-gt-gt&quot;&gt;&lt;a href=&quot;#参考式-2-must-not-set-within-gt-gt-gt&quot; class=&quot;headerlink&quot; title=&quot;参考式 2 must not set within &amp;gt;&amp;gt;&amp;gt;&quot;&gt;&lt;/a&gt;参考式 &lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2&lt;/a&gt; must not set within &amp;gt;&amp;gt;&amp;gt;&lt;/h4&gt;&lt;p&gt;注意：上述的&lt;a href=&quot;http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1&lt;/a&gt;:https:://github.com/younghz/Markdown “Markdown”不出现在区块中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;h3 id=&quot;简书&quot;&gt;&lt;a href=&quot;#简书&quot; class=&quot;headerlink&quot; title=&quot;简书&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;http://lixueping.win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;添加图片的形式和链接相似，只需在链接的基础上前方加一个！。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;#引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一盏灯， 一片昏黄； 一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。&lt;/p&gt;
&lt;p&gt;锄禾日当午&lt;br&gt;汗滴禾下土&lt;br&gt;谁之盘中餐&lt;br&gt;粒粒皆辛苦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#粗体和斜体&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;一盏灯&lt;/em&gt;， 一片昏黄；&lt;strong&gt;一简书&lt;/strong&gt;， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#表格&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;##相关代码：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;dog&lt;/th&gt;
&lt;th&gt;bird&lt;/th&gt;
&lt;th&gt;cat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;#显示链接中带括号的图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;fengexian&quot;&gt;&lt;a href=&quot;#fengexian&quot; class=&quot;headerlink&quot; title=&quot;fengexian&quot;&gt;&lt;/a&gt;fengexian&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;分割线最常使用就是三个或以上*，还可以使用-和_。&lt;/p&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;反斜杠&quot;&gt;&lt;a href=&quot;#反斜杠&quot; class=&quot;headerlink&quot; title=&quot;反斜杠\&quot;&gt;&lt;/a&gt;反斜杠\&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;相当于反转义作用。使符号成为普通符号。&lt;/p&gt;
&lt;h6 id=&quot;粗体&quot;&gt;&lt;a href=&quot;#粗体&quot; class=&quot;headerlink&quot; title=&quot;&gt; [] *粗体*&quot;&gt;&lt;/a&gt;&gt; [] *粗体*&lt;/h6&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;符号’’&quot;&gt;&lt;a href=&quot;#符号’’&quot; class=&quot;headerlink&quot; title=&quot;符号’’&quot;&gt;&lt;/a&gt;符号’’&lt;/h1&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;起到标记作用。如：&quot;&gt;&lt;a href=&quot;#起到标记作用。如：&quot; class=&quot;headerlink&quot; title=&quot;起到标记作用。如：&quot;&gt;&lt;/a&gt;起到标记作用。如：&lt;/h3&gt;&lt;h3 id=&quot;ctrl-a&quot;&gt;&lt;a href=&quot;#ctrl-a&quot; class=&quot;headerlink&quot; title=&quot;ctrl+a&quot;&gt;&lt;/a&gt;ctrl+a&lt;/h3&gt;&lt;h6 id=&quot;cat-etc-message-grep-v-grep-grep-log-awk-‘-print-1-2-3-100-’-find-name-gogogo-mtime-6-type-d-exec-rm-f&quot;&gt;&lt;a href=&quot;#cat-etc-message-grep-v-grep-grep-log-awk-‘-print-1-2-3-100-’-find-name-gogogo-mtime-6-type-d-exec-rm-f&quot; class=&quot;headerlink&quot; title=&quot;cat /etc/message|grep -v grep|grep log|awk ‘{print $1,$2,$3/100}’|find / -name gogogo -mtime +6 -type d -exec rm -f {} \;&quot;&gt;&lt;/a&gt;cat /etc/message|grep -v grep|grep log|awk ‘{print $1,$2,$3/100}’|find / -name gogogo -mtime +6 -type d -exec rm -f {} \;&lt;/h6&gt;&lt;/blockquote&gt;
&lt;p&gt;Chrome下的stackedit插件可以离线使用，很爽。也不用担心平台受限。 &lt;/p&gt;
&lt;p&gt;在线的dillinger.io算是评价好的了，可是不能离线使用。&lt;/p&gt;
&lt;p&gt;Windowns下的MarkdownPad也用过，不过免费版的体验不是很好。&lt;/p&gt;
&lt;p&gt;Mac下的Mou是国人贡献的，口碑很好。推荐。&lt;/p&gt;
&lt;p&gt;Linux下的ReText不错。&lt;/p&gt;
&lt;h1 id=&quot;详细语法&quot;&gt;&lt;a href=&quot;#详细语法&quot; class=&quot;headerlink&quot; title=&quot;详细语法&quot;&gt;&lt;/a&gt;详细语法&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;『Markdown 语法说明』&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;unonline-editor&quot;&gt;&lt;a href=&quot;#unonline-editor&quot; class=&quot;headerlink&quot; title=&quot;unonline editor&quot;&gt;&lt;/a&gt;unonline editor&lt;/h1&gt;&lt;h2 id=&quot;chormeEditor&quot;&gt;&lt;a href=&quot;#chormeEditor&quot; class=&quot;headerlink&quot; title=&quot;chormeEditor&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://stackedit.io/editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chormeEditor&lt;/a&gt;&lt;/h2&gt;&lt;h1 id=&quot;Content&quot;&gt;&lt;a href=&quot;#Content&quot; class=&quot;headerlink&quot; title=&quot;Content&quot;&gt;&lt;/a&gt;Content&lt;/h1&gt;&lt;h3 id=&quot;Table-of-contents&quot;&gt;&lt;a href=&quot;#Table-of-contents&quot; class=&quot;headerlink&quot; title=&quot;Table of contents&quot;&gt;&lt;/a&gt;Table of contents&lt;/h3&gt;&lt;p&gt;You can insert a table of contents using the marker [TOC]:&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To make sure mathematical expressions are rendered properly on your website, include &lt;strong&gt;MathJax&lt;/strong&gt; into your template:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can find more information about &lt;strong&gt;LaTeX&lt;/strong&gt; mathematical expressions [here][4].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;sequence&lt;br&gt;Alice-&amp;gt;Bob: Hello Bob, how are you?&lt;br&gt;Note right of Bob: Bob thinks&lt;br&gt;Bob–&amp;gt;Alice: I am good thanks!&lt;/p&gt;
&lt;h1 id=&quot;其它：&quot;&gt;&lt;a href=&quot;#其它：&quot; class=&quot;headerlink&quot; title=&quot;其它：&quot;&gt;&lt;/a&gt;其它：&lt;/h1&gt;&lt;p&gt;列表的使用(非traditonal markdown)：&lt;/p&gt;
&lt;p&gt;用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。&lt;br&gt;关于其它扩展语法可参见具体工具的使用说明。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;代码库&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MarkDown&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/younghz/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/younghz/Markdown&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;moos-young&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/younghz/moos-young&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/younghz/moos-young&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1 id=&quot;GOOD-STUDY-SITE&quot;&gt;&lt;a href=&quot;#GOOD-STUDY-SITE&quot; class=&quot;headerlink&quot; title=&quot;GOOD STUDY SITE&quot;&gt;&lt;/a&gt;GOOD STUDY SITE&lt;/h1&gt;&lt;h3 id=&quot;搭建一个免费的，无限流量的Blog—-github-Pages和Jekyll入门&quot;&gt;&lt;a href=&quot;#搭建一个免费的，无限流量的Blog—-github-Pages和Jekyll入门&quot; class=&quot;headerlink&quot; title=&quot;搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;阮一峰的网络日志&quot;&gt;&lt;a href=&quot;#阮一峰的网络日志&quot; class=&quot;headerlink&quot; title=&quot;阮一峰的网络日志&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;My-Blog&quot;&gt;&lt;a href=&quot;#My-Blog&quot; class=&quot;headerlink&quot; title=&quot;My Blog&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.lixueping.win/jekyll_demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Blog&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;数据库的最简单实现&quot;&gt;&lt;a href=&quot;#数据库的最简单实现&quot; class=&quot;headerlink&quot; title=&quot;数据库的最简单实现 &quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://url.cn/jDncwD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据库的最简单实现 &lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;GitHub-Jekyll&quot;&gt;&lt;a href=&quot;#GitHub-Jekyll&quot; class=&quot;headerlink&quot; title=&quot;GitHub + Jekyll&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/on_1y/article/details/19259435&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub + Jekyll&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;为-Jekyll-添加多说评论系统&quot;&gt;&lt;a href=&quot;#为-Jekyll-添加多说评论系统&quot; class=&quot;headerlink&quot; title=&quot;为 Jekyll 添加多说评论系统&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://havee.me/internet/2013-07/add-duoshuo-commemt-system-into-jekyll.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为 Jekyll 添加多说评论系统&lt;/a&gt;&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown语法&quot;&gt;&lt;a href=&quot;#Markdown语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法&quot;&gt;&lt;/a&gt;Markdown语法&lt;/h1&gt;&lt;h1 id=&quot;标题-Setting&quot;&gt;&lt;a href=&quot;#标题-Setting&quot;
    
    </summary>
    
      <category term="markdown" scheme="http://www.lflxp.cn/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://www.lflxp.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Java 中的并发</title>
    <link href="http://www.lflxp.cn/2016/04/06/2014-09-20-java-concurrency/"/>
    <id>http://www.lflxp.cn/2016/04/06/2014-09-20-java-concurrency/</id>
    <published>2016-04-06T10:31:45.170Z</published>
    <updated>2016-04-06T11:30:02.886Z</updated>
    
    <content type="html">&lt;h2 id=&quot;如何创建一个线程&quot;&gt;&lt;a href=&quot;#如何创建一个线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建一个线程&quot;&gt;&lt;/a&gt;如何创建一个线程&lt;/h2&gt;&lt;p&gt;按 Java 语言规范中的说法，创建线程只有一种方式，就是创建一个 Thread 对象。而从 HotSpot 虚拟机的角度看，创建一个虚拟机线程&lt;br&gt;有两种方式，一种是创建 Thread 对象，另一种是创建 一个本地线程，加入到虚拟机线程中。&lt;/p&gt;
&lt;p&gt;如果从 Java 语法的角度。有两种方法。&lt;/p&gt;
&lt;p&gt;第一是继承 Thread 类，实现 run 方法，并创建子类对象。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startThreadUseSubClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;start thread using Subclass of Thread&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	MyThread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一种是传递给 Thread 构造函数一个 Runnable 对象。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startThreadUseRunnalbe&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Thread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;start thread using runnable&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	thread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然， Runnalbe 对象，也不是只有这一种形式，例如如果我们想要线程执行时返回一个值，就需要用到另一种 Runnalbe 对象，它&lt;br&gt;对原来的 Runnalbe 对象进行了包装。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;startFutureTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FutureTask&amp;lt;Integer&amp;gt; task = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FutureTask&amp;lt;&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callable&amp;lt;Integer&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(task).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Integer result = task.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;future result &quot;&lt;/span&gt; + result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ExecutionException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结束线程&quot;&gt;&lt;a href=&quot;#结束线程&quot; class=&quot;headerlink&quot; title=&quot;结束线程&quot;&gt;&lt;/a&gt;结束线程&lt;/h2&gt;&lt;h2 id=&quot;wait-与-sleep&quot;&gt;&lt;a href=&quot;#wait-与-sleep&quot; class=&quot;headerlink&quot; title=&quot;wait 与 sleep&quot;&gt;&lt;/a&gt;wait 与 sleep&lt;/h2&gt;&lt;p&gt;sleep 会使得当前线程休眠一段时间，但并不会释放已经得到的锁。&lt;/p&gt;
&lt;p&gt;wait 会阻塞住，并释放已经得到的锁。一直到有人调用 notify 或者 notifyAll，它会重新尝试得到锁，然后再唤醒。&lt;/p&gt;
&lt;h2 id=&quot;线程池&quot;&gt;&lt;a href=&quot;#线程池&quot; class=&quot;headerlink&quot; title=&quot;线程池&quot;&gt;&lt;/a&gt;线程池&lt;/h2&gt;&lt;h3 id=&quot;好处&quot;&gt;&lt;a href=&quot;#好处&quot; class=&quot;headerlink&quot; title=&quot;好处&quot;&gt;&lt;/a&gt;好处&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;复用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线程池中有一系列线程，这些线程在执行完任务后，并不会被销毁，而会从任务队列中取出任务，执行这些任务。这样，就避免为每个任务&lt;br&gt;都创建线程，销毁线程。 在有大量短命线程的场景下，如果创建线程和销毁线程的时间比线程执行任务的时间还长，显然是不划算的，这时候，使用线程池就会有明显&lt;br&gt;的好处。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，可以设置线程数目，这样，线程不会增大到影响系统整体性能的程度。当任务太多时，可以在队列中排队，&lt;br&gt;如果有空闲线程，他们会从队列中取出任务执行。&lt;/p&gt;
&lt;h3 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;线程数目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么，线程的数目要设置成多少呢？这需要根据任务类型的不同来设置，假如是大量计算型的任务，他们不会阻塞，那么可以将线程数目设置&lt;br&gt;为处理器数目。而如果任务中涉及大量IO，有些线程会阻塞住，这样就要根据阻塞线程数目与运行线程数目的比例，以及处理器数目来设置&lt;br&gt;线程总数目。例如阻塞线程数目与运行线程数目之比为n, 处理器数目为p，那么可以设置 n * (p + 1) 个线程，保证有 n 个线程处于运行&lt;br&gt;状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Executors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JDK 的 java.util.concurrent.Executors 类提供了几个静态的方法，用于创建不同类型的线程池。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ExecutorService service = Executors.newFixedThreadPool(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ArrayList&amp;lt;Future&amp;lt;Integer&amp;gt;&amp;gt; results = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Future&amp;lt;Integer&amp;gt; r = service.submit(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callable&amp;lt;Integer&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Random().nextInt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	results.add(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;newFixedThreadPool&lt;/code&gt; 可以创建固定数目的线程，一旦创建不会自动销毁线程，即便长期没有任务。除非显式关闭线程池。如果任务队列中有任务，就取出任务执行。&lt;/p&gt;
&lt;p&gt;另外，还可以使用 &lt;code&gt;newCachedThreadPool&lt;/code&gt; 方法创建一个不设定固定线程数目的线程池，它有一个特性，线程完成任务后，如果一分钟之内又有新任务，就会复用这个线程执行新任务。如果超过一分钟还没有任务执行，就会自动销毁。&lt;/p&gt;
&lt;p&gt;另外，还提供了 &lt;code&gt;newSingleThreadExecutor&lt;/code&gt; 创建有一个工作线程的线程池。&lt;/p&gt;
&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;JDK 中的线程池通过 HashSet 存储工作者线程，通过 BlockingQueue 来存储待处理任务。&lt;/p&gt;
&lt;p&gt;通过核心工作者数目(corePoolSize) 和 最大工作者数目(maximumPoolSize) 来确定如何处理任务。如果当前工作者线程数目&lt;br&gt;小于核心工作者数目，则创建一个工作者线程执行这个任务。否则，将这个任务放入待处理队列。如果入队失败，再看看当前工作&lt;br&gt;者数目是不是小于最大工作者数目，如果小于，则创建工作者线程执行这个任务。否则，拒绝执行这个任务。&lt;/p&gt;
&lt;p&gt;另外，如果待处理队列中没有任务要处理，并且工作者线程数目超过了核心工作者数目，那么，需要减少工作者线程数目。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何创建一个线程&quot;&gt;&lt;a href=&quot;#如何创建一个线程&quot; class=&quot;headerlink&quot; title=&quot;如何创建一个线程&quot;&gt;&lt;/a&gt;如何创建一个线程&lt;/h2&gt;&lt;p&gt;按 Java 语言规范中的说法，创建线程只有一种方式，就是创建一个 Thread 对象。而从
    
    </summary>
    
      <category term="技术" scheme="http://www.lflxp.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://www.lflxp.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-03-15-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-03-15-快速排序/</id>
    <published>2016-04-06T10:31:45.169Z</published>
    <updated>2016-04-06T11:28:45.642Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;def test(func):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = [3,451,12356,78,3,5,7,8,9,5,321,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x=func(s,0,len(s)-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def quickSort(L, low, high):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = low &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    j = high&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if i &amp;gt;= j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key = L[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while i &amp;lt; j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        while i &amp;lt; j and L[j] &amp;gt;= key:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j = j-1                                                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L[i] = L[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        while i &amp;lt; j and L[i] &amp;lt;= key:    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i = i+1 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        L[j] = L[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    L[i] = key &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quickSort(L, low, i-1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quickSort(L, j+1, high)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return L&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if __name__==&amp;quot;__main__&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = [3,451,12356,78,3,5,7,8,9,5,321,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print quickSort(s,0,len(s)-1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
    
    </summary>
    
      <category term="大数据" scheme="http://www.lflxp.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="http://www.lflxp.cn/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>婚礼筹备计划</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-26-%E5%A9%9A%E7%A4%BC%E8%AE%A1%E5%88%92/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-26-婚礼计划/</id>
    <published>2016-04-06T10:31:45.167Z</published>
    <updated>2016-04-06T11:28:14.351Z</updated>
    
    <content type="html">&lt;h1 id=&quot;一-婚礼的6个月前，你要做以下8件事：&quot;&gt;&lt;a href=&quot;#一-婚礼的6个月前，你要做以下8件事：&quot; class=&quot;headerlink&quot; title=&quot;一 婚礼的6个月前，你要做以下8件事：&quot;&gt;&lt;/a&gt;一 婚礼的6个月前，你要做以下8件事：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;8&quot;&gt;婚礼前6个月&lt;/th&gt;&lt;br&gt;    &lt;td&gt;决定婚期&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号1&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;决定婚礼形式和预算&lt;/td&gt;&lt;td&gt;编号2&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;草拟客人名单，最好想的全一点，再进行筛选&lt;/td&gt;&lt;td&gt;编号3&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;择定结婚照地点和摄影师&lt;/td&gt;&lt;td&gt;编号4&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;选择礼服或者采购面料，不妨听听设计师的意见&lt;/td&gt;&lt;td&gt;编号5&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;安排蜜月行程，如果需要办护照，现在应该申请了&lt;/td&gt;&lt;td&gt;编号6&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;婚前检查，并且不妨为自己选择一个健身计划，为了婚礼时的良好感觉而坚持不懈的努力锻炼&lt;/td&gt;&lt;td&gt;编号7&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;着手装修，布置新房，这是你最该花心思的地方&lt;/td&gt;&lt;td&gt;编号8&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;二-结婚3个月前，你要做5件事：&quot;&gt;&lt;a href=&quot;#二-结婚3个月前，你要做5件事：&quot; class=&quot;headerlink&quot; title=&quot;二 结婚3个月前，你要做5件事：&quot;&gt;&lt;/a&gt;二 结婚3个月前，你要做5件事：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;5&quot;&gt;结婚前3个月&lt;/th&gt;&lt;br&gt;    &lt;td&gt;选购结婚戒指和首饰&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号9&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;试穿结婚礼服，如果不合适还可以再改&lt;/td&gt;&lt;td&gt;编号10&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;选择头纱、鞋、包等配饰以及婚车&lt;/td&gt;&lt;td&gt;编号11&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;做一次全身美容护理，并咨询一下在三个月内该做什么日常保养&lt;/td&gt;&lt;td&gt;编号12&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;办理蜜月行程机票或者车船票&lt;/td&gt;&lt;td&gt;编号13&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;三-结婚两个月前，你要做4件事：&quot;&gt;&lt;a href=&quot;#三-结婚两个月前，你要做4件事：&quot; class=&quot;headerlink&quot; title=&quot;三 结婚两个月前，你要做4件事：&quot;&gt;&lt;/a&gt;三 结婚两个月前，你要做4件事：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;4&quot;&gt;结婚前2个月&lt;/th&gt;&lt;br&gt;    &lt;td&gt;选定化装师，发型师，试一下装&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号14&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;拍摄结婚照&lt;/td&gt;&lt;td&gt;编号15&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;确定伴郎和伴娘，注意他们应该是未婚男女&lt;/td&gt;&lt;td&gt;编号16&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;精心为自己选购几套内衣&lt;/td&gt;&lt;td&gt;编号17&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;四-1个月前，你要做4件事：&quot;&gt;&lt;a href=&quot;#四-1个月前，你要做4件事：&quot; class=&quot;headerlink&quot; title=&quot;四 1个月前，你要做4件事：&quot;&gt;&lt;/a&gt;四 1个月前，你要做4件事：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;4&quot;&gt;结婚前1个月&lt;/th&gt;&lt;br&gt;    &lt;td&gt;向主婚人发出邀请&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号18&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;确定婚礼的细节，想想是否有什么疏漏&lt;/td&gt;&lt;td&gt;编号19&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;确定现场摄影、摄像人员，和他们充分沟通，他们将要制造的是你一生的回忆&lt;/td&gt;&lt;td&gt;编号20&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;购置蜜月所需物品&lt;/td&gt;&lt;td&gt;编号21&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;五-两个星期前，你要做两件事情：&quot;&gt;&lt;a href=&quot;#五-两个星期前，你要做两件事情：&quot; class=&quot;headerlink&quot; title=&quot;五 两个星期前，你要做两件事情：&quot;&gt;&lt;/a&gt;五 两个星期前，你要做两件事情：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;2&quot;&gt;结婚前两个星期&lt;/th&gt;&lt;br&gt;    &lt;td&gt;做好一切确认工作，包括：酒席、人数、现场摄相人员，化装师、婚车&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号22&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;发出喜帖并通知客人，确认他们是否出席&lt;/td&gt;&lt;td&gt;编号23&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;六-一个星期前，你要做3件事情：&quot;&gt;&lt;a href=&quot;#六-一个星期前，你要做3件事情：&quot; class=&quot;headerlink&quot; title=&quot;六 一个星期前，你要做3件事情：&quot;&gt;&lt;/a&gt;六 一个星期前，你要做3件事情：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;3&quot;&gt;结婚前一个星期&lt;/th&gt;&lt;br&gt;    &lt;td&gt;准备蜜月的行装&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号24&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;确定好一个人处理婚礼后归还东西或结帐等事宜，逐渐脱离项目经理的角色&lt;/td&gt;&lt;td&gt;编号25&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;尽可能的放松自己&lt;/td&gt;&lt;td&gt;编号26&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;七-婚礼前一天，你需要做3件事情：&quot;&gt;&lt;a href=&quot;#七-婚礼前一天，你需要做3件事情：&quot; class=&quot;headerlink&quot; title=&quot;七 婚礼前一天，你需要做3件事情：&quot;&gt;&lt;/a&gt;七 婚礼前一天，你需要做3件事情：&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;3&quot;&gt;结婚前一天&lt;/th&gt;&lt;br&gt;    &lt;td&gt;做个手部美容护理，一双美手能给你带来意想不到的幸福感&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号27&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;把明天穿的衣服都拿出来摊在椅子背上&lt;/td&gt;&lt;td&gt;编号28&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;吃好，睡好&lt;/td&gt;&lt;td&gt;编号29&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;八-婚礼当天&quot;&gt;&lt;a href=&quot;#八-婚礼当天&quot; class=&quot;headerlink&quot; title=&quot;八 婚礼当天&quot;&gt;&lt;/a&gt;八 婚礼当天&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;婚礼当天&lt;/th&gt;&lt;br&gt;    &lt;td&gt;尽情享受每一个瞬间&lt;/td&gt;&lt;br&gt;    &lt;td&gt;编号30&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;/table&gt;

&lt;h1 id=&quot;九-其它注意事项&quot;&gt;&lt;a href=&quot;#九-其它注意事项&quot; class=&quot;headerlink&quot; title=&quot;九 其它注意事项&quot;&gt;&lt;/a&gt;九 其它注意事项&lt;/h1&gt;&lt;table border=&quot;1&quot;&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th&gt;时间&lt;/th&gt;&lt;br&gt;    &lt;th colspan=&quot;2&quot;&gt;需要安排的事情&lt;/th&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;7&quot;&gt;结婚请柬的措辞&lt;/th&gt;&lt;br&gt;    &lt;td&gt;正规的请柬遵循一套固定的用辞格式。婚礼办得越体面正式，结婚请柬就更应遵循正规的请柬套用模式&lt;/td&gt;&lt;br&gt;    &lt;td&gt;1&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;姓名用全称：不能用任何小名昵称或姓名的缩写&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;家庭成员的顺序写清&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;“和”字要出现&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;日期、星期、时间写清&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;年份不必出现在请帖上&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在请帖一角附上婚宴的地点、时间顺序等或在卡里另附一页加以说明&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;6&quot;&gt;新娘美容记要&lt;/th&gt;&lt;br&gt;    &lt;td&gt;结婚的那一天是最重要的一天，新娘一定要美丽动人，但是不要过于粉饰。那么这里我们说说新娘的美容化装需要注意的方面有哪些。&lt;/td&gt;&lt;br&gt;  &lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;首先，在结婚的一个月以前，你应该去找美容师，请他们帮助你选择你所需要的化妆品，也请他们帮助你预先化一次妆，这样可以避免结婚当天你觉得化妆品和效果不好，头发也要请理发师先做一次看效果。&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;然后，在结婚前的一个星期，你应该保养一下你的手，修剪指甲，每天涂抹一些护手膏，晚上临睡时多抹一些，再戴个棉布的手套睡觉，因为结婚当天很多人会看到你的结婚戒指，如果手粗糙就不雅观了。这段时间你还要修好眉毛，并清洁你的牙齿，如果你不经常穿高跟鞋，那么从现在开始每天在家试穿半小时，否则新鞋子在结婚当天会让你脚疼的。&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在结婚的前一天，你要修好指甲，然后涂抹指甲油，注意指甲油的颜色要和你的口红搭配好，要用同一色系的颜色，衣服和鞋子再试穿一次，不合适的地方还可以修改。&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;结婚的当天，去化装之前，记得往眼睛里滴一些眼药水，可以使你的眼睛一天都保持明亮有神，吃东西的时候要小心饭菜里的油把口红化开。&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;只要你这些地方准备的充分，您就可以做个美丽迷人的新娘了！&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;7&quot;&gt;选择伴娘八项注意&lt;/th&gt;&lt;br&gt;    &lt;td&gt;你家里关系怎么样？如果姐妹或姑嫂关系好的话，为什么不请她们做伴娘呢？&lt;/td&gt;&lt;br&gt;    &lt;td&gt;家庭优先&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;你完全没必要因为人家举行婚礼时请了你，这回你结婚也必须要请上她&lt;/td&gt;&lt;td&gt;不还人情&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;你要想好伴娘为你做什么。是单纯给你以精神支持呢，还是期望她们能成为你的得力助手，若是后者，那你可不要请那些住得很远或是忙得不可开交的朋友。因为她们可能不能帮你及时地做好这些事情。&lt;/td&gt;&lt;td&gt;地点因素&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;不要觉得个别朋友可能买不起礼服就把她们排除在外。如果你想邀请的那位朋友恰好手头拮据，那你也可以自己掏钱给她们把礼服买好呀。&lt;/td&gt;&lt;td&gt;不要小气&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;伴娘不一定必须是女性。如果你的好友是位男性，不要立刻把他列为不合格人选。当前许多伴亲队伍中都有异性成员。在这种情况下，新娘这边的男性称做新娘伴郎，新娘那一方的女性称做新郎伴娘。&lt;/td&gt;&lt;td&gt;男性伴娘&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;你还要认识到你的好友在你婚礼上可以做其它的事情，比如朗诵诗歌，分发程序安排表或者让他们唱歌助兴等等。&lt;/td&gt;&lt;td&gt;其它事务&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;一旦决定好了伴娘名单，那就可以公布了。唯一糟糕的事就是被邀请了的同事理所当然地认为自己是要来作伴娘的。不要担心会伤害她的感情，真心真意的朋友终会理解你的任何决定。决定一经作出，就要马上在你那张似乎永无尽兴的结婚清单上划掉这一项。任务就是这样一项项来完成的。&lt;/td&gt;&lt;td&gt;发布消息&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;给新郎提个醒&lt;/th&gt;&lt;br&gt;    &lt;td&gt;订婚后新郎应该立即着手选择男傧相和其他伴郎。男傧相是新郎得力的助手，应该理智地挑选。男傧相通常要帮助新郎的穿着，在婚礼中保持镇静，在典礼前告诫新郎，拿着结婚戒指和主婚人的酬金，在婚宴上向新郎新娘祝酒。而伴郎们的首要任务是婚礼迎宾员。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于伴郎的穿着&lt;/th&gt;&lt;br&gt;    &lt;td&gt;一旦男傧相和伴郎确定下来，新郎就应该为他们挑选衣服。他们的衣服必须适宜在正式场合穿着。他们必须自己掏钱买衣服，除非新郎或新娘想把衣服作为礼物送给他们。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于宾客名单&lt;/th&gt;&lt;br&gt;    &lt;td&gt;新郎同样应该负责确定他这半部分的宾客名单。最好新郎先草拟一个较长的名单，然后与新娘一起，根据预算的多少逐步缩减这个名单。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于交通工具&lt;/th&gt;&lt;br&gt;    &lt;td&gt;新郎负责安排典礼和婚宴的车辆，婚礼前四个月就可开始。有关服务的费用、长度。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于伴郎的礼物&lt;/th&gt;&lt;br&gt;    &lt;td&gt;为了感谢伴郎的支持，新郎将会在彩排宴会上给他们每人一件礼物。钢笔是被反复使用的最佳礼品，但任何个性化的东西该是最合适的。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于蜜月&lt;/th&gt;&lt;br&gt;    &lt;td&gt;今天，夫妇俩通常一起决定有关蜜月的事情，不过受传统的影响，新郎仍然在蜜月的计划和预约方面承担了大部分的工作，令新娘满意。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;关于协助新娘&lt;/th&gt;&lt;br&gt;    &lt;td&gt;只要新郎乐意，除了自己分内的活，他可以帮新娘做各种事情。最重要的是新郎必须支持和理解新娘。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;“吉日”的确定&lt;/th&gt;&lt;br&gt;    &lt;td&gt;已经决定&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;婚宴策划方案&lt;/th&gt;&lt;br&gt;    &lt;td&gt;现代人社会生活比较繁忙，很多新人都选择在酒店举行婚宴，既减轻了负担，又给人以好印象。选择携手步上红地毯与相爱的人共度一生，是人间何等的美事，而一场精致浪漫的婚宴更是多数新人心中的美梦。不过婚宴是两家人共同参与的大事，于是事前的计划和协商是必要的。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;五星级婚宴&lt;/th&gt;&lt;br&gt;    &lt;td&gt;选择五星级饭店办终身大事？费用固然不低，却可以让人美梦成真。在当新人的那一天，真的就会如王子、公主般，享受到至高无上的照顾与艳羡。五星级婚宴的重点是“全方位包办”，有多项优惠，如提供司仪、婚宴策划、免费蜜月套房等等。喜宴的菜色和服务当然是一流水准，足令宾主尽欢。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;1&quot;&gt;下午茶式午宴&lt;/th&gt;&lt;br&gt;    &lt;td&gt;结婚喜宴不一定要摆在华灯初上以后，很西式地选择在下午的温馨时分也不错！准备一些精致的糕点、水果、饮料，大家聚在一起聊一聊，认识两方的亲友，是很轻松自在的方式。把地点转移到户外的草坪上，使气氛更为活跃，设计一些小游戏或谈一谈新人的趣事，新人切蛋糕、丢鲜花、把香槟倒入香槟塔将把宴会气氛推向高潮。&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;11&quot;&gt;令婚礼完美的细节&lt;/th&gt;&lt;br&gt;    &lt;td&gt;结婚无疑是令人雀跃万分的日子，可是为了筹办婚礼，准新郎准新娘都会被一大堆事务烦扰着，往往忽略了许多细节。为了让婚礼更加完善，请注意以下各项：&lt;/td&gt;&lt;br&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;写一封信，记下你们对新生活的展望和梦想，并将它收藏起来。直至你们以后的岁月。如二十五周年纪念，一起打开它，看你俩生活是否如当初的祈望。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在请贴上印上路线图，让嘉宾们清楚的知道婚礼举行的正确位置。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;为你们的怀念拟定一个主题吧！还有鲜花的配合是很重要的，要注意不同的鲜花有不同的特别意思。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;婚礼的当天，可以为自己和伴侣喷上喜欢的香水，可使大家精神抖擞。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;如果新婚夫妇喜欢打破传统，那么为自己拟订一份别开生面的讲词吧！&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在会场内预备一间新娘房，可作新娘休息之用，也可存放首饰和衣服。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;由新郎带领父母进入会场就坐，以示尊重。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;请一位朋友或家属将你们初次见面的照片或录象带剪辑好，在会场中播放。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;安排乐队献唱或在场中播放音乐。&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;当你和伴侣欢度蜜月旅行期间，不要忘记为父母带来惊喜——寄张明信片给他们吧！&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;5&quot;&gt;喜宴上新人应酬技巧&lt;/th&gt;&lt;br&gt;    &lt;td&gt;喜宴通常在婚礼后举行，多半没有一定的程序，新娘通常要换3-5套不同的礼服，新人要注意来来往往的人，要敬酒、谢客、送客，所以多半都吃不到什么东东。关于喜宴上的一些应酬技巧你可要注意哟！&lt;/td&gt;&lt;br&gt;    &lt;td&gt;准备&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在喜宴前对来宾有个大概的了解是非常重要的，因为来的既有男方的朋友，也有女方的朋友，可能有一些是他们对方此前没有接触过的，所以事先对着请柬名册和相薄互相了解一番可大大避免在婚宴中产生尴尬的场面。&lt;/td&gt;&lt;td&gt;了解来宾背景&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;宾客中有的性格外向，有的性格内向，不尽而一，对于他们应分别对待：外向的朋友尽可能与内向朋友相配而坐，最好是相识过的坐在同一桌，在婚宴中不要忘记内向的朋友，适时地与他们打个招呼，但不要过于着意于他们，例如强行敬酒等。&lt;/td&gt;&lt;td&gt;分析来宾的性格&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在婚宴中新郎新娘免不了要受到亲朋好友的敬酒，但一定要半推半就，开始的时候一定不能表现出杯杯都干的豪爽，否则零仃大醉不但会影响整个婚宴的进行，更坏了洞房的“好事”！所以在婚宴前就要做好准备，挑两个会喝且能说会道的伴郎伴娘做为挡箭牌，这可很重要哦！&lt;/td&gt;&lt;td&gt;巧妙应付酒水仗&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;在婚宴的后段，一定少不了些小游戏做为插曲戏弄新人，这可是最难应付过去的一段时间。这时新人应该尽量表现出大方累落的样子，尽力迎合，即使有些较为三级的节目，如当众亲吻等，否则越扭捏，众人越会起哄，这段时节就是一个节目一个节目快点完成，越快越好，只要新人齐心协力，共渡人生第一个“患难”，便完成婚宴的历史使命了。&lt;/td&gt;&lt;td&gt;携手应付娱乐节目&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;  &lt;tr&gt;&lt;br&gt;    &lt;th rowspan=&quot;11&quot;&gt;婚宴时的注意事项&lt;/th&gt;&lt;br&gt;    &lt;td&gt;婚宴前的准备通常婚宴场所分为三个重点，即入门接待处、宴席场合、新娘房。这三个地方，招待人员都应该多关照，互相保持密切联系，当天的婚礼才能够万无一失。尤其新娘房更是要特别注意，因为当天新人身上都会穿戴许多金饰，常常就在人多吵杂的场合中，遗失取换下来的首饰。&lt;/td&gt;&lt;br&gt;    &lt;td&gt;准备&lt;/td&gt;&lt;br&gt;  &lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;签名台的人手分配相当重要，一般来说收礼人员通常约四人左右，其中两位收礼金两位写回卡。如果宴请桌数超过20桌以上，最好增加签名台的台数，以免宾客人潮蜂拥而入，造成宾客皆聚集在签名台，不仅收取礼金纷乱，收礼人员也会出现手忙脚乱的窘状。&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;接待人员最好选则与新郎与新娘的亲朋好友皆熟识的人选，如新郎的朋友联络人、新娘的朋友联络人、新郎的亲戚联络人、新娘的亲戚联络人等。使得来参加婚宴的亲戚朋友一进门即能被招呼及安排入座，不至于受到冷场之虞。&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;  &lt;tr&gt;&lt;td&gt;喜宴的确定人数，要在一个月前就要推算出来，才不至于发生临时增桌或撤桌，造成婚宴场合拥挤或过于空旷现象。由于现在越来越越多新人选择在大饭店结婚，以至于每当固定假日或黄历上的黄道吉日时，饭店都会大爆满而起桌价也较高。因此，不仿将婚礼采简单而隆重的公证结婚；而婚宴则最好选在普通的日子举行，一来订桌容易，二来在价格上也比较划算。&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一-婚礼的6个月前，你要做以下8件事：&quot;&gt;&lt;a href=&quot;#一-婚礼的6个月前，你要做以下8件事：&quot; class=&quot;headerlink&quot; title=&quot;一 婚礼的6个月前，你要做以下8件事：&quot;&gt;&lt;/a&gt;一 婚礼的6个月前，你要做以下8件事：&lt;/h1&gt;&lt;tabl
    
    </summary>
    
      <category term="婚礼安排" scheme="http://www.lflxp.cn/categories/%E5%A9%9A%E7%A4%BC%E5%AE%89%E6%8E%92/"/>
    
    
      <category term="结婚" scheme="http://www.lflxp.cn/tags/%E7%BB%93%E5%A9%9A/"/>
    
  </entry>
  
  <entry>
    <title>nginx 一机多实例配置</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-26-nginx%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-26-nginx配置/</id>
    <published>2016-04-06T10:31:45.165Z</published>
    <updated>2016-04-06T11:28:21.350Z</updated>
    
    <content type="html">&lt;h1 id=&quot;ubuntu-安装&quot;&gt;&lt;a href=&quot;#ubuntu-安装&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 安装&quot;&gt;&lt;/a&gt;ubuntu 安装&lt;/h1&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;apt-get install nginx -y&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;配置路径-etc-nginx-conf-d-django-conf&quot;&gt;&lt;a href=&quot;#配置路径-etc-nginx-conf-d-django-conf&quot; class=&quot;headerlink&quot; title=&quot;配置路径 /etc/nginx/conf.d/django.conf&quot;&gt;&lt;/a&gt;配置路径 /etc/nginx/conf.d/django.conf&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;通过配置nginx可以将一台物理机或者很多太内网的项目通过反向代理的方式通过一个IP的80端口匹配域名进行访问 正好让我的aws主机利用率最大化
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream django&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server 127.0.0.1:8080;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        client_max_body_size 50M; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name aws.lflxp.cn; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	server_name_in_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	error_log /tmp/error.log debug; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	proxy_pass http://django/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	proxy_set_header X-Real-IP $remote_addr; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	proxy_set_header Host $http_host; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listen 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	client_max_body_size 50M;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server_name jiehun.lflxp.cn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server_name_in_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        error_log /tmp/error.log debug;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	root /tmp/jiehun;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	index index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ubuntu-安装&quot;&gt;&lt;a href=&quot;#ubuntu-安装&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 安装&quot;&gt;&lt;/a&gt;ubuntu 安装&lt;/h1&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;apt
    
    </summary>
    
      <category term="nginx" scheme="http://www.lflxp.cn/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://www.lflxp.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>第九章 模板高级进阶</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-24-%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E6%A8%A1%E6%9D%BF%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-24-第九章 模板高级进阶/</id>
    <published>2016-04-06T10:31:45.163Z</published>
    <updated>2016-04-06T11:28:07.074Z</updated>
    
    <content type="html">&lt;p&gt;虽然大多数和Django模板语言的交互都是模板作者的工作，但你可能想定制和扩展模板引擎，让它做一些它不能做的事情，或者是以其他方式让你的工作更轻松。&lt;/p&gt;
&lt;p&gt;本章深入探讨Django的模板系统。 如果你想扩展模板系统或者只是对它的工作原理感觉到好奇，本章涉及了你需要了解的东西。 它也包含一个自动转意特征，如果你继续使用django，随着时间的推移你一定会注意这个安全考虑。&lt;/p&gt;
&lt;p&gt;如果你想把Django的模版系统作为另外一个应用程序的一部分（就是说，仅使用Django的模板系统而不使用Django框架的其他部分），那你一定要读一下“配置独立模式下的模版系统”这一节。&lt;/p&gt;
&lt;h1 id=&quot;模板语言回顾&quot;&gt;&lt;a href=&quot;#模板语言回顾&quot; class=&quot;headerlink&quot; title=&quot;模板语言回顾&quot;&gt;&lt;/a&gt;模板语言回顾&lt;/h1&gt;&lt;p&gt;变量 是一个在模板里用来输出值的标记。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;变量标签被 &amp;#123;&amp;#123; 和 &amp;#125;&amp;#125; 包围：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;My first name is &amp;#123;&amp;#123; first_name &amp;#125;&amp;#125;. My last name is &amp;#123;&amp;#123; last_name &amp;#125;&amp;#125;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;context 是一个传递给模板的名称到值的映射（类似Python字典）。&lt;/p&gt;
&lt;p&gt;模板 渲染 就是是通过从context获取值来替换模板中变量并执行所有的模板标签。&lt;/p&gt;
&lt;p&gt;关于这些基本概念更详细的内容，请参考第四章。&lt;/p&gt;
&lt;p&gt;本章的其余部分讨论了扩展模板引擎的方法。 首先，我们快速的看一下第四章遗留的内容。&lt;/p&gt;
&lt;p&gt;RequestContext和Context处理器&lt;br&gt;你需要一段context来解析模板。 一般情况下，这是一个 django.template.Context 的实例，不过在Django中还可以用一个特殊的子类， django.template.RequestContext ，这个用起来稍微有些不同。 RequestContext 默认地在模板context中加入了一些变量，如 HttpRequest 对象或当前登录用户的相关信息。3&lt;/p&gt;
&lt;p&gt;当你不想在一系例模板中都明确指定一些相同的变量时，你应该使用 RequestContext 。 例如，考虑这两个视图：1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.template import loader, Context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_1(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t = loader.get_template(&amp;apos;template1.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = Context(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;app&amp;apos;: &amp;apos;My app&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;user&amp;apos;: request.user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;ip_address&amp;apos;: request.META[&amp;apos;REMOTE_ADDR&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;message&amp;apos;: &amp;apos;I am view 1.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return t.render(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_2(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t = loader.get_template(&amp;apos;template2.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = Context(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;app&amp;apos;: &amp;apos;My app&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;user&amp;apos;: request.user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;ip_address&amp;apos;: request.META[&amp;apos;REMOTE_ADDR&amp;apos;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;message&amp;apos;: &amp;apos;I am the second view.&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return t.render(c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（注意，在这些例子中，我们故意 不 使用 render_to_response() 这个快捷方法，而选择手动载入模板，手动构造context对象然后渲染模板。 是为了能够清晰的说明所有步骤。）&lt;/p&gt;
&lt;p&gt;每个视图都给模板传入了三个相同的变量：app、user和ip_address。 如果我们把这些冗余去掉会不会更好？&lt;/p&gt;
&lt;p&gt;创建 RequestContext 和 context处理器 就是为了解决这个问题。 Context处理器允许你设置一些变量，它们会在每个context中自动被设置好，而不必每次调用 render_to_response() 时都指定。 要点就是，当你渲染模板时，你要用 RequestContext 而不是 Context 。4&lt;/p&gt;
&lt;p&gt;最直接的做法是用context处理器来创建一些处理器并传递给 RequestContext 。上面的例子可以用context processors改写如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.template import loader, RequestContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def custom_proc(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;A context processor that provides &amp;apos;app&amp;apos;, &amp;apos;user&amp;apos; and &amp;apos;ip_address&amp;apos;.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;app&amp;apos;: &amp;apos;My app&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;user&amp;apos;: request.user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;ip_address&amp;apos;: request.META[&amp;apos;REMOTE_ADDR&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_1(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t = loader.get_template(&amp;apos;template1.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = RequestContext(request, &amp;#123;&amp;apos;message&amp;apos;: &amp;apos;I am view 1.&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processors=[custom_proc])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return t.render(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_2(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t = loader.get_template(&amp;apos;template2.html&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = RequestContext(request, &amp;#123;&amp;apos;message&amp;apos;: &amp;apos;I am the second view.&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processors=[custom_proc])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return t.render(c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们来通读一下代码：&lt;/p&gt;
&lt;p&gt;首先，我们定义一个函数 custom_proc 。这是一个context处理器，它接收一个 HttpRequest 对象，然后返回一个字典，这个字典中包含了可以在模板context中使用的变量。 它就做了这么多。&lt;/p&gt;
&lt;p&gt;我们在这两个视图函数中用 RequestContext 代替了 Context 。在context对象的构建上有两个不同点。 一， RequestContext 的第一个参数需要传递一个 HttpRequest 对象，就是传递给视图函数的第一个参数（ request ）。二， RequestContext 有一个可选的参数 processors ，这是一个包含context处理器函数的列表或者元组。 在这里，我们传递了我们之前定义的处理器函数 curstom_proc 。1&lt;/p&gt;
&lt;p&gt;每个视图的context结构里不再包含 app 、 user 、 ip_address 等变量，因为这些由 custom_proc 函数提供了。&lt;/p&gt;
&lt;p&gt;每个视图 仍然 具有很大的灵活性，可以引入我们需要的任何模板变量。 在这个例子中， message 模板变量在每个视图中都不一样。&lt;/p&gt;
&lt;p&gt;在第四章，我们介绍了 render_to_response() 这个快捷方式，它可以简化调用 loader.get_template() ,然后创建一个 Context 对象，最后再调用模板对象的 render()过程。 为了讲解context处理器底层是如何工作的，在上面的例子中我们没有使用 render_to_response() 。但是建议选择 render_to_response() 作为context的处理器。这就需要用到context_instance参数：1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from django.shortcuts import render_to_response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from django.template import RequestContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def custom_proc(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;A context processor that provides &amp;apos;app&amp;apos;, &amp;apos;user&amp;apos; and &amp;apos;ip_address&amp;apos;.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;app&amp;apos;: &amp;apos;My app&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;user&amp;apos;: request.user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;ip_address&amp;apos;: request.META[&amp;apos;REMOTE_ADDR&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_1(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render_to_response(&amp;apos;template1.html&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;apos;message&amp;apos;: &amp;apos;I am view 1.&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context_instance=RequestContext(request, processors=[custom_proc]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def view_2(request):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return render_to_response(&amp;apos;template2.html&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&amp;apos;message&amp;apos;: &amp;apos;I am the second view.&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context_instance=RequestContext(request, processors=[custom_proc]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这，我们将每个视图的模板渲染代码写成了一个单行。&lt;/p&gt;
&lt;p&gt;虽然这是一种改进，但是，请考虑一下这段代码的简洁性，我们现在不得不承认的是在 另外 一方面有些过分了。 我们以代码冗余（在 processors 调用中）的代价消除了数据上的冗余（我们的模板变量）。 由于你不得不一直键入 processors ，所以使用context处理器并没有减少太多的输入量。&lt;/p&gt;
&lt;p&gt;Django因此提供对 全局 context处理器的支持。 TEMPLATE_CONTEXT_PROCESSORS 指定了哪些context processors总是默认被使用。这样就省去了每次使用 RequestContext 都指定 processors 的麻烦。7&lt;/p&gt;
&lt;p&gt;默认情况下， TEMPLATE_CONTEXT_PROCESSORS 设置如下：&lt;/p&gt;
&lt;p&gt;TEMPLATE_CONTEXT_PROCESSORS = (&lt;br&gt;    ‘django.core.context_processors.auth’,&lt;br&gt;    ‘django.core.context_processors.debug’,&lt;br&gt;    ‘django.core.context_processors.i18n’,&lt;br&gt;    ‘django.core.context_processors.media’,&lt;br&gt;)&lt;br&gt;这个设置项是一个可调用函数的元组，其中的每个函数使用了和上文中我们的 custom_proc 相同的接口，它们以request对象作为参数，返回一个会被合并传给context的字典： 接收一个request对象作为参数，返回一个包含了将被合并到context中的项的字典。3&lt;/p&gt;
&lt;p&gt;每个处理器将会按照顺序应用。 也就是说如果你在第一个处理器里面向context添加了一个变量，而第二个处理器添加了同样名字的变量，那么第二个将会覆盖第一个。&lt;/p&gt;
&lt;p&gt;Django提供了几个简单的context处理器，有些在默认情况下被启用的。&lt;/p&gt;
&lt;p&gt;django.core.context_processors.auth3&lt;/p&gt;
&lt;p&gt;如果 TEMPLATE_CONTEXT_PROCESSORS 包含了这个处理器，那么每个 RequestContext 将包含这些变量：&lt;/p&gt;
&lt;p&gt;user ：一个 django.contrib.auth.models.User 实例，描述了当前登录用户（或者一个 AnonymousUser 实例，如果客户端没有登录）。&lt;/p&gt;
&lt;p&gt;messages ：一个当前登录用户的消息列表（字符串）。 在后台，对每一个请求，这个变量都调用 request.user.get_and_delete_messages() 方法。 这个方法收集用户的消息然后把它们从数据库中删除。3&lt;/p&gt;
&lt;p&gt;perms ： django.core.context_processors.PermWrapper 的一个实例，包含了当前登录用户有哪些权限。1&lt;/p&gt;
&lt;p&gt;关于users、permissions和messages的更多内容请参考第14章。&lt;/p&gt;
&lt;p&gt;django.core.context_processors.debug&lt;/p&gt;
&lt;p&gt;这个处理器把调试信息发送到模板层。 如果TEMPLATE_CONTEXT_PROCESSORS包含这个处理器，每一个RequestContext将包含这些变量：&lt;/p&gt;
&lt;p&gt;debug ：你设置的 DEBUG 的值（ True 或 False ）。你可以在模板里面用这个变量测试是否处在debug模式下。1&lt;/p&gt;
&lt;p&gt;sql_queries ：包含类似于 &lt;code&gt;{‘sql’: …, ‘time’:&lt;/code&gt; 的字典的一个列表， 记录了这个请求期间的每个SQL查询以及查询所耗费的时间。 这个列表是按照请求顺序进行排列的。2&lt;/p&gt;
&lt;p&gt;System Message: WARNING/2 (&lt;string&gt;, line 315); backlink&lt;/string&gt;&lt;/p&gt;
&lt;p&gt;Inline literal start-string without end-string.&lt;/p&gt;
&lt;p&gt;由于调试信息比较敏感，所以这个context处理器只有当同时满足下面两个条件的时候才有效：&lt;/p&gt;
&lt;p&gt;DEBUG 参数设置为 True 。&lt;/p&gt;
&lt;p&gt;请求的ip应该包含在 INTERNAL_IPS 的设置里面。&lt;/p&gt;
&lt;p&gt;细心的读者可能会注意到debug模板变量的值永远不可能为False，因为如果DEBUG是False，那么debug模板变量一开始就不会被RequestContext所包含。6&lt;/p&gt;
&lt;p&gt;django.core.context_processors.i18n1&lt;/p&gt;
&lt;p&gt;如果这个处理器启用，每个 RequestContext 将包含下面的变量：&lt;/p&gt;
&lt;p&gt;LANGUAGES ： LANGUAGES 选项的值。&lt;/p&gt;
&lt;p&gt;LANGUAGE_CODE ：如果 request.LANGUAGE_CODE 存在，就等于它；否则，等同于 LANGUAGE_CODE 设置。&lt;/p&gt;
&lt;p&gt;附录E提供了有关这两个设置的更多的信息。&lt;/p&gt;
&lt;p&gt;django.core.context_processors.request3&lt;/p&gt;
&lt;p&gt;如果启用这个处理器，每个 RequestContext 将包含变量 request ， 也就是当前的 HttpRequest 对象。 注意这个处理器默认是不启用的，你需要激活它。&lt;/p&gt;
&lt;p&gt;如果你发现你的模板需要访问当前的HttpRequest你就需要使用它:7&lt;/p&gt;

&lt;p&gt;写Context处理器的一些建议1&lt;/p&gt;
&lt;p&gt;编写处理器的一些建议：&lt;/p&gt;
&lt;p&gt;使每个context处理器完成尽可能小的功能。 使用多个处理器是很容易的，所以你可以根据逻辑块来分解功能以便将来复用。&lt;/p&gt;
&lt;p&gt;要注意 TEMPLATE_CONTEXT_PROCESSORS 里的context processor 将会在基于这个settings.py的每个 模板中有效，所以变量的命名不要和模板的变量冲突。 变量名是大小写敏感的，所以processor的变量全用大写是个不错的主意。1&lt;/p&gt;
&lt;p&gt;不论它们存放在哪个物理路径下，只要在你的Python搜索路径中，你就可以在 TEMPLATE_CONTEXT_PROCESSORS 设置里指向它们。 建议你把它们放在应用或者工程目录下名为 context_processors.py 的文件里。18&lt;/p&gt;
&lt;p&gt;html自动转意4&lt;br&gt;从模板生成html的时候，总是有一个风险——变量包了含会影响结果html的字符。 例如，考虑这个模板片段：&lt;/p&gt;
&lt;p&gt;Hello, .&lt;br&gt;一开始，这看起来是显示用户名的一个无害的途径，但是考虑如果用户输入如下的名字将会发生什么：&lt;/p&gt;
&lt;p&gt;&lt;script&gt;alert(‘hello’)&lt;/script&gt;&lt;br&gt;用这个用户名，模板将被渲染成：&lt;/p&gt;
&lt;p&gt;Hello, &lt;script&gt;alert(‘hello’)&lt;/script&gt;&lt;br&gt;这意味着浏览器将弹出JavaScript警告框！&lt;/p&gt;
&lt;p&gt;类似的，如果用户名包含小于符号，就像这样：&lt;/p&gt;
&lt;p&gt;用户名2&lt;/p&gt;
&lt;p&gt;那样的话模板结果被翻译成这样：&lt;/p&gt;
&lt;p&gt;Hello, &lt;b&gt;username&lt;br&gt;页面的剩余部分变成了粗体！&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;显然，用户提交的数据不应该被盲目信任，直接插入到你的页面中。因为一个潜在的恶意的用户能够利用这类漏洞做坏事。 这类漏洞称为被跨域脚本 (XSS) 攻击。 关于安全的更多内容，请看20章6&lt;/p&gt;
&lt;p&gt;为了避免这个问题，你有两个选择：&lt;/p&gt;
&lt;p&gt;一是你可以确保每一个不被信任的变量都被escape过滤器处理一遍，把潜在有害的html字符转换为无害的。 这是最初几年Django的默认方案，但是这样做的问题是它把责任推给你（开发者、模版作者）自己，来确保把所有东西转意。 很容易就忘记转意数据。&lt;/p&gt;
&lt;p&gt;二是，你可以利用Django的自动html转意。 这一章的剩余部分描述自动转意是如何工作的。&lt;/p&gt;
&lt;p&gt;在django里默认情况下，每一个模板自动转意每一个变量标签的输出。 尤其是这五个字符。1&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;虽然大多数和Django模板语言的交互都是模板作者的工作，但你可能想定制和扩展模板引擎，让它做一些它不能做的事情，或者是以其他方式让你的工作更轻松。&lt;/p&gt;
&lt;p&gt;本章深入探讨Django的模板系统。 如果你想扩展模板系统或者只是对它的工作原理感觉到好奇，本章涉及了你需要了
    
    </summary>
    
      <category term="Django book 2.0" scheme="http://www.lflxp.cn/categories/Django-book-2-0/"/>
    
    
      <category term="django" scheme="http://www.lflxp.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap-table使用</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-24-bootstrap-table%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-24-bootstrap-table使用/</id>
    <published>2016-04-06T10:31:45.161Z</published>
    <updated>2016-04-06T10:31:33.774Z</updated>
    
    <content type="html">&lt;h1 id=&quot;bootstrap-table使用&quot;&gt;&lt;a href=&quot;#bootstrap-table使用&quot; class=&quot;headerlink&quot; title=&quot;bootstrap-table使用&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.163.com/wp_2002wp/blog/static/31472252201511142205327/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bootstrap-table使用&lt;/a&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;table id=&amp;quot;table&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-toggle=&amp;quot;table&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-striped =&amp;quot;true&amp;quot;  --条纹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-pagination =&amp;quot;true&amp;quot; --分页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-side-pagination = &amp;quot;server&amp;quot; --服务器端分页 (&amp;apos;client&amp;apos; 客户端)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-show-header =&amp;quot;true&amp;quot; --显示表头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-show-footer = &amp;quot;false&amp;quot; --显示表尾部&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-search = &amp;quot;false&amp;quot; --工具栏 查询框&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-strict-search = &amp;quot;false&amp;quot; --精确查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-search-text = &amp;quot;&amp;quot; --查询框初始值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-search-time-out = &amp;quot;500&amp;quot; --查询timeout时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-trim-on-search = &amp;quot;true&amp;quot; --去掉查询参数空格&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-show-columns =&amp;quot;true&amp;quot; --工具栏 显示表头信息 可以调整显示行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-minimum-count-columns = &amp;quot;1&amp;quot; -- data-show-columns 选项最小显示1列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-show-refresh = &amp;quot;true&amp;quot; --工具栏 显示刷新按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-show-toggle =&amp;quot;true&amp;quot; --工具栏  转换表格为列表显示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-card-view = &amp;quot;false&amp;quot; --显示为列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-smart-display =&amp;quot;false&amp;quot; --显示分页或列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-query-params-type = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-query-params = &amp;quot;queryParams&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-page-size = &amp;quot;10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-page-number = &amp;quot;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-page-list = &amp;quot;[10, 25, 50, 100, 200]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-response-handler = &amp;quot;responseHandler&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   data-url=&amp;quot;$&amp;#123;syspath&amp;#125;/sys/q/list&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function responseHandler(res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(res.total &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;rows&amp;quot;: res.rows,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;total&amp;quot;: res.total&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;rows&amp;quot;: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;quot;total&amp;quot;: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function queryParams(params) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       pageSize: params.pageSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       pageNumber: params.pageNumber,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       xx: 自定义控件.val()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bootstrap-table使用&quot;&gt;&lt;a href=&quot;#bootstrap-table使用&quot; class=&quot;headerlink&quot; title=&quot;bootstrap-table使用&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.163.com/wp_200
    
    </summary>
    
      <category term="bootstrap" scheme="http://www.lflxp.cn/categories/bootstrap/"/>
    
    
  </entry>
  
  <entry>
    <title>第十四章： 会话、用户和注册</title>
    <link href="http://www.lflxp.cn/2016/04/06/2016-02-22-%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0%EF%BC%9A%20%E4%BC%9A%E8%AF%9D%E3%80%81%E7%94%A8%E6%88%B7%E5%92%8C%E6%B3%A8%E5%86%8C/"/>
    <id>http://www.lflxp.cn/2016/04/06/2016-02-22-第十四章： 会话、用户和注册/</id>
    <published>2016-04-06T10:31:45.160Z</published>
    <updated>2016-04-06T11:28:03.847Z</updated>
    
    <content type="html">&lt;p&gt;是时候承认了： 我们有意的避开了Web开发中极其重要的方面。 到目前为止，我们都在假定，网站流量是大量的匿名用户带来的。11&lt;/p&gt;
&lt;p&gt;这当然不对。 浏览器的背后都是活生生的人(至少某些时候是)。 这忽略了重要的一点： 互联网服务于人而不是机器。 要开发一个真正令人心动的网站，我们必须面对浏览器后面活生生的人。1&lt;/p&gt;
&lt;p&gt;很不幸，这并不容易。 HTTP被设计为”无状态”，每次请求都处于相同的空间中。 在一次请求和下一次请求之间没有任何状态保持，我们无法根据请求的任何方面(IP地址，用户代理等)来识别来自同一人的连续请求。&lt;/p&gt;
&lt;p&gt;在本章中你将学会如何搞定状态的问题。 好了，我们会从较低的层次(cookies)开始，然后过渡到用高层的工具来搞定会话，用户和注册的问题。&lt;/p&gt;
&lt;p&gt;Cookies&lt;br&gt;浏览器的开发者在很早的时候就已经意识到， HTTP’s 的无状态会对Web开发者带来很大的问题，于是(cookies)应运而生。 cookies 是浏览器为 Web 服务器存储的一小段信息。 每次浏览器从某个服务器请求页面时，它向服务器回送之前收到的cookies5&lt;/p&gt;
&lt;p&gt;来看看它是怎么工作的。 当你打开浏览器并访问 google.com ，你的浏览器会给Google发送一个HTTP请求，起始部分就象这样：&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;Host: google.com&lt;br&gt;…&lt;br&gt;当 Google响应时，HTTP的响应是这样的：&lt;/p&gt;
&lt;p&gt;HTTP/1.1 200 OK&lt;br&gt;Content-Type: text/html&lt;br&gt;Set-Cookie: PREF=ID=5b14f22bdaf1e81c:TM=1167000671:LM=1167000671;&lt;br&gt;            expires=Sun, 17-Jan-2038 19:14:07 GMT;&lt;br&gt;            path=/; domain=.google.com&lt;br&gt;Server: GWS/2.1&lt;br&gt;…&lt;br&gt;注意 Set-Cookie 的头部。 你的浏览器会存储cookie值( PREF=ID=5b14f22bdaf1e81c:TM=1167000671:LM=1167000671 ) ，而且每次访问google 站点都会回送这个cookie值。 因此当你下次访问Google时，你的浏览器会发送像这样的请求：1&lt;/p&gt;
&lt;p&gt;GET / HTTP/1.1&lt;br&gt;Host: google.com&lt;br&gt;Cookie: PREF=ID=5b14f22bdaf1e81c:TM=1167000671:LM=1167000671&lt;br&gt;…&lt;br&gt;于是 Cookies 的值会告诉Google，你就是早些时候访问过Google网站的人。 这个值可能是数据库中存储用户信息的key，可以用它在页面上显示你的用户名。 Google会（以及目前）使用它在网页上显示你账号的用户名。&lt;/p&gt;
&lt;p&gt;存取Cookies&lt;/p&gt;
&lt;p&gt;在Django中处理持久化，大部分时候你会更愿意用高层些的session 和/或 后面要讨论的user 框架。 但在此之前，我们需要停下来在底层看看如何读写cookies。 这会帮助你理解本章节后面要讨论的工具是如何工作的，而且如果你需要自己操作cookies，这也会有所帮助。2&lt;/p&gt;
&lt;p&gt;读取已经设置好的cookies极其简单。 每一个&lt;code&gt;HttpRequest&lt;/code&gt; 对象都有一个&lt;code&gt;COOKIES&lt;/code&gt; 对象，该对象的行为类似一个字典，你可以使用它读取任何浏览器发送给视图（view）的cookies。&lt;/p&gt;
&lt;p&gt;def show_color(request):&lt;br&gt;    if “favorite_color” in request.COOKIES:&lt;br&gt;        return HttpResponse(“Your favorite color is %s” %             request.COOKIES[“favorite_color”])&lt;br&gt;    else:&lt;br&gt;        return HttpResponse(“You don’t have a favorite color.”)&lt;br&gt;写cookies稍微复杂点。 你需要使用 HttpResponse对象的 set_cookie()方法。 这儿有个基于 GET 参数来设置 favorite_color&lt;br&gt;cookie的例子：&lt;/p&gt;
&lt;p&gt;def set_color(request):&lt;br&gt;    if “favorite_color” in request.GET:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    # Create an HttpResponse object...
    response = HttpResponse(&amp;quot;Your favorite color is now %s&amp;quot; %             request.GET[&amp;quot;favorite_color&amp;quot;])

    # ... and set a cookie on the response
    response.set_cookie(&amp;quot;favorite_color&amp;quot;,
                        request.GET[&amp;quot;favorite_color&amp;quot;])

    return response

else:
    return HttpResponse(&amp;quot;You didn&amp;apos;t give a favorite color.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以给 response.set_cookie() 传递一些可选的参数来控制cookie的行为，详见表14-1。&lt;/p&gt;
&lt;p&gt;System Message: ERROR/3 (&lt;string&gt;, line 145)&lt;/string&gt;&lt;/p&gt;
&lt;p&gt;Error parsing content block for the “table” directive: exactly one table expected.&lt;/p&gt;
&lt;p&gt;.. table:: 表 14-1: Cookie 选项&lt;/p&gt;
&lt;p&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;br&gt;   |参数                             |缺省值                     |描述                                                                                                                                                                                |&lt;br&gt;   +=================================+===========================+====================================================================================================================================================================================+&lt;br&gt;   |&lt;code&gt;max_age&lt;/code&gt;                      |&lt;code&gt;None&lt;/code&gt;                   |cookie需要延续的时间（以秒为单位） 如果参数是\ &lt;code&gt;None&lt;/code&gt; ，这个cookie会延续到浏览器关闭为止。                                                                                       |&lt;br&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;expires&lt;/code&gt;                      |&lt;code&gt;None&lt;/code&gt;                   |cookie失效的实际日期/时间。 它的格式必须是：\ &lt;code&gt;&amp;quot;Wdy, DD-Mth-YY HH:MM:SS GMT&amp;quot;&lt;/code&gt; 。如果给出了这个参数，它会覆盖\ &lt;code&gt;max_age&lt;/code&gt; 参数。                                                |&lt;br&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;path&lt;/code&gt;                         |&lt;code&gt;&amp;quot;/&amp;quot;&lt;/code&gt;                    |cookie生效的路径前缀。 浏览器只会把cookie回传给带有该路径的页 面，这样你可以避免将cookie传给站点中的其他的应用。                                                                    |&lt;br&gt;   |                                 |                           |                                                                                                                                                                                    |&lt;br&gt;   |                                 |                           |当你不是控制你的站点的顶层时，这样做是特别有用的。                                                                                                                                  |&lt;br&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;domain&lt;/code&gt;                       |&lt;code&gt;None&lt;/code&gt;                   |这个cookie有效的站点。 你可以使用这个参数设置一个跨站点（cross-domain）的cookie。 比如，\ &lt;code&gt;domain=&amp;quot;.example.com&amp;quot;&lt;/code&gt; 可以设置一个在\ &lt;code&gt;www.example.com&lt;/code&gt; 、\ &lt;code&gt;www2.example.com&lt;/code&gt; 以及\ &lt;code&gt;an.other.sub.domain.example.com&lt;/code&gt; 站点下都可读到的cookie。|&lt;br&gt;   |                                 |                           |                                                                                                                                                                                    |&lt;br&gt;   |                                 |                           |如果这个参数被设成\ &lt;code&gt;None&lt;/code&gt; ，cookie将只能在设置它的站点下可以读到。                                                                                                              |&lt;br&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;False&lt;/code&gt;                        |&lt;code&gt;False&lt;/code&gt;                  |如果设置为 &lt;code&gt;True&lt;/code&gt; ，浏览器将通过HTTPS来回传cookie。                                                                                                                               |&lt;br&gt;   +———————————+—————————+————————————————————————————————————————————————————————————+&lt;/p&gt;
&lt;p&gt;好坏参半的Cookies&lt;/p&gt;
&lt;p&gt;也许你已经注意到了，cookies的工作方式可能导致的问题。 让我们看一下其中一些比较重要的问题：&lt;/p&gt;
&lt;p&gt;cookie的存储是自愿的，一个客户端不一定要去接受或存储cookie。 事实上，所有的浏览器都让用户自己控制 是否接受cookies。 如果你想知道cookies对于Web应用有多重要，你可以试着打开这个浏览器的 选项：&lt;/p&gt;
&lt;p&gt;尽管cookies广为使用，但仍被认为是不可靠的的。 这意味着，开发者使用cookies之前必须 检查用户是否可以接收cookie。&lt;/p&gt;
&lt;p&gt;Cookie(特别是那些没通过HTTPS传输的)是非常不安全的。 因为HTTP数据是以明文发送的，所以 特别容易受到嗅探攻击。 也就是说，嗅探攻击者可以在网络中拦截并读取cookies，因此你要 绝对避免在cookies中存储敏感信息。 这就意味着您不应该使用cookie来在存储任何敏感信息。&lt;/p&gt;
&lt;p&gt;还有一种被称为”中间人”的攻击更阴险，攻击者拦截一个cookie并将其用于另一个用户。 第19章将深入讨论这种攻击的本质以及如何避免。2&lt;/p&gt;
&lt;p&gt;即使从预想中的接收者返回的cookie也是不安全的。 在大多数浏览器中您可以非常容易地修改cookies中的信息。有经验的用户甚至可以通过像mechanize(&lt;a href=&quot;http://wwwsearch.sourceforge.net/mechanize/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wwwsearch.sourceforge.net/mechanize/&lt;/a&gt;) 这样的工具手工构造一个HTTP请求。&lt;/p&gt;
&lt;p&gt;因此不能在cookies中存储可能会被篡改的敏感数据。 在cookies中存储 IsLoggedIn=1 ，以标识用户已经登录。 犯这类错误的站点数量多的令人难以置信； 绕过这些网站的安全系统也是易如反掌。5&lt;/p&gt;
&lt;p&gt;Django的 Session 框架&lt;br&gt;由于存在的限制与安全漏洞，cookies和持续性会话已经成为Web开发中令人头疼的典范。 好消息是，Django的目标正是高效的“头疼杀手”，它自带的session框架会帮你搞定这些问题。&lt;/p&gt;
&lt;p&gt;你可以用session 框架来存取每个访问者任意数据， 这些数据在服务器端存储，并对cookie的收发进行了抽象。 Cookies只存储数据的哈希会话ID，而不是数据本身，从而避免了大部分的常见cookie问题。72&lt;/p&gt;
&lt;p&gt;下面我们来看看如何打开session功能，并在视图中使用它。6&lt;/p&gt;
&lt;p&gt;打开 Sessions功能&lt;/p&gt;
&lt;p&gt;Sessions 功能是通过一个中间件(参见第17章)和一个模型(model)来实现的。 要打开sessions功能，需要以下几步操作：4&lt;/p&gt;
&lt;p&gt;编辑 MIDDLEWARE_CLASSES 配置，确保 MIDDLEWARE_CLASSES 中包含 ‘django.contrib.sessions.middleware.SessionMiddleware’。&lt;/p&gt;
&lt;p&gt;确认 INSTALLED_APPS 中有 ‘django.contrib.sessions’ (如果你是刚打开这个应用，别忘了运行 manage.py syncdb )5&lt;/p&gt;
&lt;p&gt;如果项目是用 startproject 来创建的，配置文件中都已经安装了这些东西，除非你自己删除，正常情况下，你无需任何设置就可以使用session功能。&lt;/p&gt;
&lt;p&gt;如果不需要session功能，你可以删除 MIDDLEWARE_CLASSES 设置中的 SessionMiddleware 和 INSTALLED_APPS 设置中的 ‘django.contrib.sessions’ 。虽然这只会节省很少的开销，但积少成多啊。4&lt;/p&gt;
&lt;p&gt;在视图中使用Session&lt;/p&gt;
&lt;p&gt;SessionMiddleware 激活后，每个传给视图(view)函数的第一个参数&lt;code&gt;HttpRequest&lt;/code&gt; 对象都有一个 session 属性，这是一个字典型的对象。 你可以象用普通字典一样来用它。 例如，在视图(view)中你可以这样用：2&lt;/p&gt;
&lt;h1 id=&quot;Set-a-session-value&quot;&gt;&lt;a href=&quot;#Set-a-session-value&quot; class=&quot;headerlink&quot; title=&quot;Set a session value:&quot;&gt;&lt;/a&gt;Set a session value:&lt;/h1&gt;&lt;p&gt;request.session[“fav_color”] = “blue”&lt;/p&gt;
&lt;h1 id=&quot;Get-a-session-value-–-this-could-be-called-in-a-different-view&quot;&gt;&lt;a href=&quot;#Get-a-session-value-–-this-could-be-called-in-a-different-view&quot; class=&quot;headerlink&quot; title=&quot;Get a session value – this could be called in a different view,&quot;&gt;&lt;/a&gt;Get a session value – this could be called in a different view,&lt;/h1&gt;&lt;h1 id=&quot;or-many-requests-later-or-both&quot;&gt;&lt;a href=&quot;#or-many-requests-later-or-both&quot; class=&quot;headerlink&quot; title=&quot;or many requests later (or both):&quot;&gt;&lt;/a&gt;or many requests later (or both):&lt;/h1&gt;&lt;p&gt;fav_color = request.session[“fav_color”]&lt;/p&gt;
&lt;h1 id=&quot;Clear-an-item-from-the-session&quot;&gt;&lt;a href=&quot;#Clear-an-item-from-the-session&quot; class=&quot;headerlink&quot; title=&quot;Clear an item from the session:&quot;&gt;&lt;/a&gt;Clear an item from the session:&lt;/h1&gt;&lt;p&gt;del request.session[“fav_color”]&lt;/p&gt;
&lt;h1 id=&quot;Check-if-the-session-has-a-given-key&quot;&gt;&lt;a href=&quot;#Check-if-the-session-has-a-given-key&quot; class=&quot;headerlink&quot; title=&quot;Check if the session has a given key:&quot;&gt;&lt;/a&gt;Check if the session has a given key:&lt;/h1&gt;&lt;p&gt;if “fav_color” in request.session:&lt;br&gt;    …&lt;br&gt;其他的映射方法，如 keys() 和 items() 对 request.session 同样有效：&lt;/p&gt;
&lt;p&gt;下面是一些有效使用Django sessions的简单规则：&lt;/p&gt;
&lt;p&gt;用正常的字符串作为key来访问字典 request.session ， 而不是整数、对象或其它什么的。&lt;/p&gt;
&lt;p&gt;Session字典中以下划线开头的key值是Django内部保留key值。 框架只会用很少的几个下划线 开头的session变量，除非你知道他们的具体含义，而且愿意跟上Django的变化，否则，最好 不要用这些下划线开头的变量，它们会让Django搅乱你的应用。&lt;/p&gt;
&lt;p&gt;比如，不要象这样使用&lt;code&gt;_fav_color&lt;/code&gt; 会话密钥(session key)：1&lt;/p&gt;
&lt;p&gt;request.session[‘_fav_color’] = ‘blue’ # Don’t do this!&lt;br&gt;不要用一个新对象来替换掉 request.session ，也不要存取其属性。 可以像Python中的字典那样使用。 例如：&lt;/p&gt;
&lt;p&gt;request.session = some_other_object # Don’t do this!&lt;/p&gt;
&lt;p&gt;request.session.foo = ‘bar’ # Don’t do this!&lt;br&gt;我们来看个简单的例子。 这是个简单到不能再简单的例子：在用户发了一次评论后将has_commented设置为True。 这是个简单（但不很安全）的、防止用户多次评论的方法。&lt;/p&gt;
&lt;p&gt;def post_comment(request):&lt;br&gt;    if request.method != ‘POST’:&lt;br&gt;        raise Http404(‘Only POSTs are allowed’)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if &amp;apos;comment&amp;apos; not in request.POST:
    raise Http404(&amp;apos;Comment not submitted&amp;apos;)

if request.session.get(&amp;apos;has_commented&amp;apos;, False):
    return HttpResponse(&amp;quot;You&amp;apos;ve already commented.&amp;quot;)

c = comments.Comment(comment=request.POST[&amp;apos;comment&amp;apos;])
c.save()
request.session[&amp;apos;has_commented&amp;apos;] = True
return HttpResponse(&amp;apos;Thanks for your comment!&amp;apos;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面是一个很简单的站点登录视图(view)：12&lt;/p&gt;
&lt;p&gt;def login(request):&lt;br&gt;    if request.method != ‘POST’:&lt;br&gt;        raise Http404(‘Only POSTs are allowed’)&lt;br&gt;    try:&lt;br&gt;        m = Member.objects.get(username=request.POST[‘username’])&lt;br&gt;        if m.password == request.POST[‘password’]:&lt;br&gt;            request.session[‘member_id’] = m.id&lt;br&gt;            return HttpResponseRedirect(‘/you-are-logged-in/‘)&lt;br&gt;    except Member.DoesNotExist:&lt;br&gt;        return HttpResponse(“Your username and password didn’t match.”)&lt;br&gt;下面的例子将登出一个在上面已通过&lt;code&gt;login()&lt;/code&gt; 登录的用户：3&lt;/p&gt;
&lt;p&gt;def logout(request):&lt;br&gt;    try:&lt;br&gt;        del request.session[‘member_id’]&lt;br&gt;    except KeyError:&lt;br&gt;        pass&lt;br&gt;    return HttpResponse(“You’re logged out.”)&lt;br&gt;注意&lt;/p&gt;
&lt;p&gt;在实践中，这是很烂的用户登录方式，稍后讨论的认证(authentication )框架会帮你以更健壮和有利的方式来处理这些问题。 这些非常简单的例子只是想让你知道这一切是如何工作的。 这些实例尽量简单，这样你可以更容易看到发生了什么1&lt;/p&gt;
&lt;p&gt;设置测试Cookies&lt;/p&gt;
&lt;p&gt;就像前面提到的，你不能指望所有的浏览器都可以接受cookie。 因此，为了使用方便，Django提供了一个简单的方法来测试用户的浏览器是否接受cookie。 你只需在视图(view)中调用 request.session.set_test_cookie()&lt;br&gt;，并在后续的视图(view)、而不是当前的视图(view)中检查 request.session.test_cookie_worked() 。&lt;/p&gt;
&lt;p&gt;虽然把 set_test_cookie() 和 test_cookie_worked() 分开的做法看起来有些笨拙，但由于cookie的工作方式，这无可避免。 当设置一个cookie时候，只能等浏览器下次访问的时候，你才能知道浏览器是否接受cookie。3&lt;/p&gt;
&lt;p&gt;检查cookie是否可以正常工作后，你得自己用 delete_test_cookie() 来清除它，这是个好习惯。 在你证实了测试cookie已工作了之后这样操作。&lt;/p&gt;
&lt;p&gt;这是个典型例子：&lt;/p&gt;
&lt;p&gt;def login(request):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# If we submitted the form...
if request.method == &amp;apos;POST&amp;apos;:

    # Check that the test cookie worked (we set it below):
    if request.session.test_cookie_worked():

        # The test cookie worked, so delete it.
        request.session.delete_test_cookie()

        # In practice, we&amp;apos;d need some logic to check username/password
        # here, but since this is an example...
        return HttpResponse(&amp;quot;You&amp;apos;re logged in.&amp;quot;)

    # The test cookie failed, so display an error message. If this
    # were a real site, we&amp;apos;d want to display a friendlier message.
    else:
        return HttpResponse(&amp;quot;Please enable cookies and try again.&amp;quot;)

# If we didn&amp;apos;t post, send the test cookie along with the login form.
request.session.set_test_cookie()
return render_to_response(&amp;apos;foo/login_form.html&amp;apos;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意&lt;/p&gt;
&lt;p&gt;再次强调，内置的认证函数会帮你做检查的。2&lt;/p&gt;
&lt;p&gt;在视图(View)外使用Session&lt;/p&gt;
&lt;p&gt;从内部来看，每个session都只是一个普通的Django model（在 django.contrib.sessions.models 中定义)。每个session都由一个随机的32字节哈希串来标识，并存储于cookie中。 因为它是一个标准的模型，所以你可以使用Django数据库API来存取session。1&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;from django.contrib.sessions.models import Session&lt;br&gt;s = Session.objects.get(pk=’2b1189a188b44ad18c35e113ac6ceead’)&lt;br&gt;s.expire_date&lt;br&gt;datetime.datetime(2005, 8, 20, 13, 35, 12)&lt;br&gt;你需要使用get_decoded() 来读取实际的session数据。 这是必需的，因为字典存储为一种特定的编码格式。&lt;/p&gt;
&lt;p&gt;s.session_data&lt;br&gt;‘KGRwMQpTJ19hdXRoX3VzZXJfaWQnCnAyCkkxCnMuMTExY2ZjODI2Yj…’&lt;br&gt;s.get_decoded()&lt;br&gt;{‘user_id’: 42}&lt;br&gt;何时保存Session&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;缺省的情况下，Django只会在session发生变化的时候才会存入数据库，比如说，字典赋值或删除。&lt;/p&gt;
&lt;h1 id=&quot;Session-is-modified&quot;&gt;&lt;a href=&quot;#Session-is-modified&quot; class=&quot;headerlink&quot; title=&quot;Session is modified.&quot;&gt;&lt;/a&gt;Session is modified.&lt;/h1&gt;&lt;p&gt;request.session[‘foo’] = ‘bar’&lt;/p&gt;
&lt;h1 id=&quot;Session-is-modified-1&quot;&gt;&lt;a href=&quot;#Session-is-modified-1&quot; class=&quot;headerlink&quot; title=&quot;Session is modified.&quot;&gt;&lt;/a&gt;Session is modified.&lt;/h1&gt;&lt;p&gt;del request.session[‘foo’]&lt;/p&gt;
&lt;h1 id=&quot;Session-is-modified-2&quot;&gt;&lt;a href=&quot;#Session-is-modified-2&quot; class=&quot;headerlink&quot; title=&quot;Session is modified.&quot;&gt;&lt;/a&gt;Session is modified.&lt;/h1&gt;&lt;p&gt;request.session[‘foo’] = {}&lt;/p&gt;
&lt;h1 id=&quot;Gotcha-Session-is-NOT-modified-because-this-alters&quot;&gt;&lt;a href=&quot;#Gotcha-Session-is-NOT-modified-because-this-alters&quot; class=&quot;headerlink&quot; title=&quot;Gotcha: Session is NOT modified, because this alters&quot;&gt;&lt;/a&gt;Gotcha: Session is NOT modified, because this alters&lt;/h1&gt;&lt;h1 id=&quot;request-session-‘foo’-instead-of-request-session&quot;&gt;&lt;a href=&quot;#request-session-‘foo’-instead-of-request-session&quot; class=&quot;headerlink&quot; title=&quot;request.session[‘foo’] instead of request.session.&quot;&gt;&lt;/a&gt;request.session[‘foo’] instead of request.session.&lt;/h1&gt;&lt;p&gt;request.session[‘foo’][‘bar’] = ‘baz’&lt;br&gt;你可以设置 SESSION_SAVE_EVERY_REQUEST 为 True 来改变这一缺省行为。如果置为True的话，Django会在每次收到请求的时候保存session，即使没发生变化。3&lt;/p&gt;
&lt;p&gt;注意，会话cookie只会在创建和修改的时候才会送出。 但如果 SESSION_SAVE_EVERY_REQUEST 设置为 True ，会话cookie在每次请求的时候都会送出。 同时，每次会话cookie送出的时候，其 expires 参数都会更新。&lt;/p&gt;
&lt;p&gt;浏览器关闭即失效会话 vs 持久会话&lt;/p&gt;
&lt;p&gt;你可能注意到了，Google给我们发送的cookie中有 expires=Sun, 17-Jan-2038 19:14:07 GMT; cookie可以有过期时间，这样浏览器就知道什么时候可以删除cookie了。 如果cookie没有设置过期时间，当用户关闭浏览器的时候，cookie就自动过期了。 你可以改变 SESSION_EXPIRE_AT_BROWSER_CLOSE 的设置来控制session框架的这一行为。&lt;/p&gt;
&lt;p&gt;缺省情况下， SESSION_EXPIRE_AT_BROWSER_CLOSE 设置为 False ，这样，会话cookie可以在用户浏览器中保持有效达 SESSION_COOKIE_AGE 秒（缺省设置是两周，即1,209,600 秒）。 如果你不想用户每次打开浏览器都必须重新登陆的话，用这个参数来帮你。&lt;/p&gt;
&lt;p&gt;如果 SESSION_EXPIRE_AT_BROWSER_CLOSE 设置为 True ，当浏览器关闭时，Django会使cookie失效。4&lt;/p&gt;
&lt;p&gt;其他的Session设置&lt;/p&gt;
&lt;p&gt;除了上面提到的设置，还有一些其他的设置可以影响Django session框架如何使用cookie，详见表 14-2.&lt;/p&gt;
&lt;p&gt;表 14-2. 影响cookie行为的设置&lt;br&gt;设置    描述    缺省&lt;br&gt;SESSION_COOKIE_DOMAIN    使用会话cookie（session cookies）的站点。 将它设成一个字符串，就好象&lt;code&gt;“.example.com”&lt;/code&gt; 以用于跨站点（cross-domain）的cookie，或&lt;code&gt;None&lt;/code&gt; 以用于单个站点。    None&lt;br&gt;SESSION_COOKIE_NAME    会话中使用的cookie的名字。 它可以是任意的字符串。    “sessionid”&lt;br&gt;SESSION_COOKIE_SECURE    是否在session中使用安全cookie。 如果设置 True , cookie就会标记为安全， 这意味着cookie只会通过HTTPS来传输。    False2&lt;br&gt;技术细节&lt;/p&gt;
&lt;p&gt;如果你还是好奇的话，下面是一些关于session框架内部工作方式的技术细节：&lt;/p&gt;
&lt;p&gt;session 字典接受任何支持序列化的Python对象。 参考Python内建模块pickle的文档以获取更多信息。&lt;/p&gt;
&lt;p&gt;Session 数据存在数据库表 django_session 中&lt;/p&gt;
&lt;p&gt;Session 数据在需要的时候才会读取。 如果你从不使用 request.session ， Django不会动相关数据库表的一根毛。12&lt;/p&gt;
&lt;p&gt;Django 只在需要的时候才送出cookie。 如果你压根儿就没有设置任何会话数据，它不会 送出会话cookie(除非 SESSION_SAVE_EVERY_REQUEST 设置为 True )。&lt;/p&gt;
&lt;p&gt;Django session 框架完全而且只能基于cookie。 它不会后退到把会话ID编码在URL中（像某些工具(PHP,JSP)那样）。3&lt;/p&gt;
&lt;p&gt;这是一个有意而为之的设计。 把session放在URL中不只是难看，更重要的是这让你的站点 很容易受到攻击——通过 Referer header进行session ID”窃听”而实施的攻击。&lt;/p&gt;
&lt;p&gt;如果你还是好奇，阅读源代码是最直接办法，详见 django.contrib.sessions 。&lt;/p&gt;
&lt;p&gt;用户与Authentication1&lt;br&gt;通过session，我们可以在多次浏览器请求中保持数据， 接下来的部分就是用session来处理用户登录了。 当然，不能仅凭用户的一面之词，我们就相信，所以我们需要认证。&lt;/p&gt;
&lt;p&gt;当然了，Django 也提供了工具来处理这样的常见任务（就像其他常见任务一样）。 Django 用户认证系统处理用户帐号，组，权限以及基于cookie的用户会话。 这个系统一般被称为 auth/auth (认证与授权)系统。 这个系统的名称同时也表明了用户常见的两步处理。 我们需要4&lt;/p&gt;
&lt;p&gt;验证 (认证) 用户是否是他所宣称的用户(一般通过查询数据库验证其用户名和密码)&lt;/p&gt;
&lt;p&gt;验证用户是否拥有执行某种操作的 授权 (通常会通过检查一个权限表来确认)&lt;/p&gt;
&lt;p&gt;根据这些需求，Django 认证/授权 系统会包含以下的部分：&lt;/p&gt;
&lt;p&gt;用户 : 在网站注册的人&lt;/p&gt;
&lt;p&gt;权限 : 用于标识用户是否可以执行某种操作的二进制(yes/no)标志&lt;/p&gt;
&lt;p&gt;组 :一种可以将标记和权限应用于多个用户的常用方法&lt;/p&gt;
&lt;p&gt;Messages : 向用户显示队列式的系统消息的常用方法&lt;/p&gt;
&lt;p&gt;如果你已经用了admin工具(详见第6章)，就会看见这些工具的大部分。如果你在admin工具中编辑过用户或组，那么实际上你已经编辑过授权系统的数据库表了。&lt;/p&gt;
&lt;p&gt;打开认证支持&lt;/p&gt;
&lt;p&gt;像session工具一样，认证支持也是一个Django应用，放在 django.contrib 中，所以也需要安装。 与session系统相似，它也是缺省安装的，但如果它已经被删除了，通过以下步骤也能重新安装上：&lt;/p&gt;
&lt;p&gt;根据本章早前的部分确认已经安装了session 框架。 需要确认用户使用cookie，这样sesson 框架才能正常使用。1&lt;/p&gt;
&lt;p&gt;将 ‘django.contrib.auth’ 放在你的 INSTALLED_APPS 设置中，然后运行 manage.py syncdb以创建对应的数据库表。&lt;/p&gt;
&lt;p&gt;确认 SessionMiddleware 后面的 MIDDLEWARE_CLASSES 设置中包含 ‘django.contrib.auth.middleware.AuthenticationMiddleware’ SessionMiddleware。1&lt;/p&gt;
&lt;p&gt;这样安装后，我们就可以在视图(view)的函数中处理user了。 在视图中存取users，主要用 request.user ；这个对象表示当前已登录的用户。 如果用户还没登录，这就是一个AnonymousUser对象(细节见下)。1&lt;/p&gt;
&lt;p&gt;你可以很容易地通过 is_authenticated() 方法来判断一个用户是否已经登录了：2&lt;/p&gt;
&lt;p&gt;if request.user.is_authenticated():&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Do something for authenticated users.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;else:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Do something for anonymous users.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用User对象&lt;/p&gt;
&lt;p&gt;User 实例一般从 request.user ，或是其他下面即将要讨论到的方法取得，它有很多属性和方法。 AnonymousUser 对象模拟了 部分 的接口，但不是全部，在把它当成真正的user对象 使用前，你得检查一下 user.is_authenticated() 表14-3和14-4分别列出了&lt;code&gt;User&lt;/code&gt; 对象中的属性（fields)和方法。&lt;/p&gt;
&lt;p&gt;表 14-3. User 对象属性&lt;br&gt;属性    描述&lt;br&gt;username    必需的，不能多于30个字符。 仅用字母数字式字符（字母、数字和下划线）。&lt;br&gt;first_name    可选; 少于等于30字符。&lt;br&gt;last_name    可选; 少于等于30字符。&lt;br&gt;email    可选。 邮件地址。&lt;br&gt;password    必需的。 密码的哈希值（Django不储存原始密码）。 See the Passwords section for more about this value.&lt;br&gt;is_staff    布尔值。 用户是否拥有网站的管理权限。&lt;br&gt;is_active    布尔值. 设置该账户是否可以登录。 把该标志位置为False而不是直接删除账户。&lt;br&gt;is_superuser    布尔值 标识用户是否拥有所有权限，无需显式地权限分配定义。&lt;br&gt;last_login    用户上次登录的时间日期。 它被默认设置为当前的日期/时间。&lt;br&gt;date_joined    账号被创建的日期时间 当账号被创建时，它被默认设置为当前的日期/时间。1&lt;br&gt;System Message: ERROR/3 (&lt;string&gt;, line 735)&lt;/string&gt;&lt;/p&gt;
&lt;p&gt;Error parsing content block for the “table” directive: exactly one table expected.&lt;/p&gt;
&lt;p&gt;.. table:: 表 14-4. &lt;code&gt;User&lt;/code&gt; 对象方法&lt;/p&gt;
&lt;p&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |方法                                                                                         |描述                                                                                                                                                  |&lt;br&gt;   +=============================================================================================+======================================================================================================================================================+&lt;br&gt;   |&lt;code&gt;is_authenticated()&lt;/code&gt;                                                                       |对于真实的User对象，总是返回\ &lt;code&gt;True&lt;/code&gt; 。                                                                                                            |&lt;br&gt;   |                                                                                             |这是一个分辨用户是否已被鉴证的方法。 它并不意味着任何权限，也不检查用户是否仍是活动的。 它仅说明此用户已被成功鉴证。                                  |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;is_anonymous()&lt;/code&gt;                                                                           |对于\ &lt;code&gt;AnonymousUser&lt;/code&gt; 对象返回\ &lt;code&gt;True&lt;/code&gt; （对于真实的\ &lt;code&gt;User&lt;/code&gt; 对象返回\ &lt;code&gt;False&lt;/code&gt; ）。                                                        |&lt;br&gt;   |                                                                                             |总的来说，比起这个方法，你应该倾向于使用\ &lt;code&gt;is_authenticated()&lt;/code&gt; 方法。                                                                              |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;get_full_name()&lt;/code&gt;                                                                          |返回\ &lt;code&gt;first_name&lt;/code&gt; 加上\ &lt;code&gt;last_name&lt;/code&gt; ，中间插入一个空格。                                                                                       |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;set_password(passwd)&lt;/code&gt;                                                                     |设定用户密码为指定字符串（自动处理成哈希串）。 实际上没有保存\ &lt;code&gt;User&lt;/code&gt;\对象。                                                                        |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |check_password(passwd)                                                                       |如果指定的字符串与用户密码匹配则返回\ &lt;code&gt;True&lt;/code&gt;\。 比较时会使用密码哈希表。                                                                            |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;get_group_permissions()&lt;/code&gt;                                                                  |返回一个用户通过其所属组获得的权限字符串列表。                                                                                                        |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;get_all_permissions()&lt;/code&gt;                                                                    |返回一个用户通过其所属组以及自身权限所获得的权限字符串列表。                                                                                          |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;has_perm(perm)&lt;/code&gt;                                                                           |如果用户有指定的权限，则返回\ &lt;code&gt;True&lt;/code&gt; ，此时\ &lt;code&gt;perm&lt;/code&gt; 的格式是\ &lt;code&gt;&amp;quot;package.codename&amp;quot;&lt;/code&gt; 。如果用户已不活动，此方法总是返回\ &lt;code&gt;False&lt;/code&gt; 。         |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |has_perms(perm_list)                                                                         |如果用户拥有\ &lt;em&gt; 全部&lt;/em&gt; 的指定权限，则返回\ &lt;code&gt;True&lt;/code&gt; 。 如果用户是不活动的，这个方法总是返回\ &lt;code&gt;False&lt;/code&gt; 。                                            |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;has_module_perms(app_label)&lt;/code&gt;                                                              |如果用户拥有给定的\ &lt;code&gt;app_label&lt;/code&gt; 中的任何权限，则返回\ &lt;code&gt;True&lt;/code&gt; 。如果用户已不活动，这个方法总是返回\ &lt;code&gt;False&lt;/code&gt; 。                                |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |get_and_delete_messages()                                                                    |返回一个用户队列中的\ &lt;code&gt;Message&lt;/code&gt; 对象列表，并从队列中将这些消息删除。                                                                               |&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;br&gt;   |&lt;code&gt;email_user(subj, msg)&lt;/code&gt;                                                                    |向用户发送一封电子邮件。 这封电子邮件是从\ &lt;code&gt;DEFAULT_FROM_EMAIL&lt;/code&gt; 设置的地址发送的。 你还可以传送一个第三参数：\ &lt;code&gt;from_email&lt;/code&gt; ，以覆盖电邮中的发送地址。|&lt;br&gt;   +———————————————————————————————+——————————————————————————————————————————————————+&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;User&lt;/code&gt; 对象有两个many-to-many属性。 &lt;code&gt;groups&lt;/code&gt; 和&lt;code&gt;permissions&lt;/code&gt; 。正如其他的many-to-many属性使用的方法一样，&lt;code&gt;User&lt;/code&gt; 对象可以获得它们相关的对象：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Set a user&amp;apos;s groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.groups = group_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Add a user to some groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.groups.add(group1, group2,...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Remove a user from some groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.groups.remove(group1, group2,...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Remove a user from all groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.groups.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Permissions work the same way&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.permissions = permission_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.permissions.add(permission1, permission2, ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.permissions.remove(permission1, permission2, ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myuser.permissions.clear()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登录和退出11&lt;/p&gt;
&lt;p&gt;Django 提供内置的视图(view)函数用于处理登录和退出 (以及其他奇技淫巧)，但在开始前，我们来看看如何手工登录和退出。 Django提供两个函数来执行django.contrib.auth\中的动作 : authenticate()&lt;br&gt;和login()。&lt;/p&gt;
&lt;p&gt;认证给出的用户名和密码，使用 authenticate() 函数。它接受两个参数，用户名 username 和 密码 password ，并在密码对给出的用户名合法的情况下返回一个 User 对象。 如果密码不合法，authenticate()返回None。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; from django.contrib import auth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; user = auth.authenticate(username=&amp;apos;john&amp;apos;, password=&amp;apos;secret&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; if user is not None:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;Correct!&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...     print &amp;quot;Invalid password.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;authenticate() 只是验证一个用户的证书而已。 而要登录一个用户，使用 login() 。该函数接受一个 HttpRequest 对象和一个 User 对象作为参数并使用Django的会话（ session ）框架把用户的ID保存在该会话中。1&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;是时候承认了： 我们有意的避开了Web开发中极其重要的方面。 到目前为止，我们都在假定，网站流量是大量的匿名用户带来的。11&lt;/p&gt;
&lt;p&gt;这当然不对。 浏览器的背后都是活生生的人(至少某些时候是)。 这忽略了重要的一点： 互联网服务于人而不是机器。 要开发一个真正令人心动
    
    </summary>
    
      <category term="Django book 2.0" scheme="http://www.lflxp.cn/categories/Django-book-2-0/"/>
    
    
      <category term="django" scheme="http://www.lflxp.cn/tags/django/"/>
    
  </entry>
  
</feed>
